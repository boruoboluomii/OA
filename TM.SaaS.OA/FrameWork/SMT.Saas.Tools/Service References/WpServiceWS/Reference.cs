//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SMT.Saas.Tools.WpServiceWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/SMT.Portal.Communication")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.ResultObject))]
    public partial class BaseObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommandKeyField;
        
        private byte[] DataContentField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> ParamsField;
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandKey {
            get {
                return this.CommandKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandKeyField, value) != true)) {
                    this.CommandKeyField = value;
                    this.RaisePropertyChanged("CommandKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DataContent {
            get {
                return this.DataContentField;
            }
            set {
                if ((object.ReferenceEquals(this.DataContentField, value) != true)) {
                    this.DataContentField = value;
                    this.RaisePropertyChanged("DataContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultObject", Namespace="http://schemas.datacontract.org/2004/07/SMT.Portal.Communication")]
    public partial class ResultObject : SMT.Saas.Tools.WpServiceWS.BaseObject {
        
        private string ErrorMessageField;
        
        private bool StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryExpression", Namespace="SMT.QueryObjects", IsReference=true)]
    public partial class QueryExpression : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ElementTypeNameField;
        
        private System.Xml.Linq.XElement ExpressionXElementField;
        
        private bool IsCheckRightField;
        
        private SMT.Saas.Tools.WpServiceWS.QueryPager PagerField;
        
        private System.Collections.Generic.Dictionary<string, object> ParametersField;
        
        private string RightCodeField;
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementTypeName {
            get {
                return this.ElementTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementTypeNameField, value) != true)) {
                    this.ElementTypeNameField = value;
                    this.RaisePropertyChanged("ElementTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement ExpressionXElement {
            get {
                return this.ExpressionXElementField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionXElementField, value) != true)) {
                    this.ExpressionXElementField = value;
                    this.RaisePropertyChanged("ExpressionXElement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheckRight {
            get {
                return this.IsCheckRightField;
            }
            set {
                if ((this.IsCheckRightField.Equals(value) != true)) {
                    this.IsCheckRightField = value;
                    this.RaisePropertyChanged("IsCheckRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.WpServiceWS.QueryPager Pager {
            get {
                return this.PagerField;
            }
            set {
                if ((object.ReferenceEquals(this.PagerField, value) != true)) {
                    this.PagerField = value;
                    this.RaisePropertyChanged("Pager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RightCode {
            get {
                return this.RightCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RightCodeField, value) != true)) {
                    this.RightCodeField = value;
                    this.RaisePropertyChanged("RightCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryPager", Namespace="SMT.QueryObjects", IsReference=true)]
    public partial class QueryPager : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsCheckRightField;
        
        private int PageCountField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private string RightCodeField;
        
        private int RowCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheckRight {
            get {
                return this.IsCheckRightField;
            }
            set {
                if ((this.IsCheckRightField.Equals(value) != true)) {
                    this.IsCheckRightField = value;
                    this.RaisePropertyChanged("IsCheckRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RightCode {
            get {
                return this.RightCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RightCodeField, value) != true)) {
                    this.RightCodeField = value;
                    this.RaisePropertyChanged("RightCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReimbursementEntity", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Services")]
    public partial class ReimbursementEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BusinessTypeNamek__BackingFieldField;
        
        private string BusinessTypek__BackingFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.CostItem> CostItemsk__BackingFieldField;
        
        private System.DateTime EndDatek__BackingFieldField;
        
        private string FromCodek__BackingFieldField;
        
        private string FromIDk__BackingFieldField;
        
        private string FromTypeNamek__BackingFieldField;
        
        private int FromTypek__BackingFieldField;
        
        private string MastersNamek__BackingFieldField;
        
        private string OwnerCompanyIDk__BackingFieldField;
        
        private string OwnerCompanyNamek__BackingFieldField;
        
        private string OwnerDepartmentIDk__BackingFieldField;
        
        private string OwnerDepartmentNamek__BackingFieldField;
        
        private string OwnerIDk__BackingFieldField;
        
        private string OwnerNamek__BackingFieldField;
        
        private string OwnerPostIDk__BackingFieldField;
        
        private string OwnerPostNamek__BackingFieldField;
        
        private string PromoterCompanyIDk__BackingFieldField;
        
        private string PromoterCompanyNamek__BackingFieldField;
        
        private string PromoterDepartmentIDk__BackingFieldField;
        
        private string PromoterNamek__BackingFieldField;
        
        private string PromoterPostIDk__BackingFieldField;
        
        private string Promoteridk__BackingFieldField;
        
        private string Remarkk__BackingFieldField;
        
        private System.DateTime StartDatek__BackingFieldField;
        
        private bool needLoanField;
        
        private bool needReimbursementField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BusinessTypeName>k__BackingField", IsRequired=true)]
        public string BusinessTypeNamek__BackingField {
            get {
                return this.BusinessTypeNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeNamek__BackingFieldField, value) != true)) {
                    this.BusinessTypeNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("BusinessTypeNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BusinessType>k__BackingField", IsRequired=true)]
        public string BusinessTypek__BackingField {
            get {
                return this.BusinessTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypek__BackingFieldField, value) != true)) {
                    this.BusinessTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("BusinessTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CostItems>k__BackingField", IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.CostItem> CostItemsk__BackingField {
            get {
                return this.CostItemsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CostItemsk__BackingFieldField, value) != true)) {
                    this.CostItemsk__BackingFieldField = value;
                    this.RaisePropertyChanged("CostItemsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EndDate>k__BackingField", IsRequired=true)]
        public System.DateTime EndDatek__BackingField {
            get {
                return this.EndDatek__BackingFieldField;
            }
            set {
                if ((this.EndDatek__BackingFieldField.Equals(value) != true)) {
                    this.EndDatek__BackingFieldField = value;
                    this.RaisePropertyChanged("EndDatek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FromCode>k__BackingField", IsRequired=true)]
        public string FromCodek__BackingField {
            get {
                return this.FromCodek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCodek__BackingFieldField, value) != true)) {
                    this.FromCodek__BackingFieldField = value;
                    this.RaisePropertyChanged("FromCodek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FromID>k__BackingField", IsRequired=true)]
        public string FromIDk__BackingField {
            get {
                return this.FromIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FromIDk__BackingFieldField, value) != true)) {
                    this.FromIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("FromIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FromTypeName>k__BackingField", IsRequired=true)]
        public string FromTypeNamek__BackingField {
            get {
                return this.FromTypeNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FromTypeNamek__BackingFieldField, value) != true)) {
                    this.FromTypeNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("FromTypeNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FromType>k__BackingField", IsRequired=true)]
        public int FromTypek__BackingField {
            get {
                return this.FromTypek__BackingFieldField;
            }
            set {
                if ((this.FromTypek__BackingFieldField.Equals(value) != true)) {
                    this.FromTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("FromTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<MastersName>k__BackingField", IsRequired=true)]
        public string MastersNamek__BackingField {
            get {
                return this.MastersNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.MastersNamek__BackingFieldField, value) != true)) {
                    this.MastersNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("MastersNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerCompanyID>k__BackingField", IsRequired=true)]
        public string OwnerCompanyIDk__BackingField {
            get {
                return this.OwnerCompanyIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerCompanyIDk__BackingFieldField, value) != true)) {
                    this.OwnerCompanyIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerCompanyIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerCompanyName>k__BackingField", IsRequired=true)]
        public string OwnerCompanyNamek__BackingField {
            get {
                return this.OwnerCompanyNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerCompanyNamek__BackingFieldField, value) != true)) {
                    this.OwnerCompanyNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerCompanyNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerDepartmentID>k__BackingField", IsRequired=true)]
        public string OwnerDepartmentIDk__BackingField {
            get {
                return this.OwnerDepartmentIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerDepartmentIDk__BackingFieldField, value) != true)) {
                    this.OwnerDepartmentIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerDepartmentIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerDepartmentName>k__BackingField", IsRequired=true)]
        public string OwnerDepartmentNamek__BackingField {
            get {
                return this.OwnerDepartmentNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerDepartmentNamek__BackingFieldField, value) != true)) {
                    this.OwnerDepartmentNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerDepartmentNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerID>k__BackingField", IsRequired=true)]
        public string OwnerIDk__BackingField {
            get {
                return this.OwnerIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDk__BackingFieldField, value) != true)) {
                    this.OwnerIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerName>k__BackingField", IsRequired=true)]
        public string OwnerNamek__BackingField {
            get {
                return this.OwnerNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNamek__BackingFieldField, value) != true)) {
                    this.OwnerNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerPostID>k__BackingField", IsRequired=true)]
        public string OwnerPostIDk__BackingField {
            get {
                return this.OwnerPostIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPostIDk__BackingFieldField, value) != true)) {
                    this.OwnerPostIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerPostIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OwnerPostName>k__BackingField", IsRequired=true)]
        public string OwnerPostNamek__BackingField {
            get {
                return this.OwnerPostNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPostNamek__BackingFieldField, value) != true)) {
                    this.OwnerPostNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("OwnerPostNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PromoterCompanyID>k__BackingField", IsRequired=true)]
        public string PromoterCompanyIDk__BackingField {
            get {
                return this.PromoterCompanyIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoterCompanyIDk__BackingFieldField, value) != true)) {
                    this.PromoterCompanyIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PromoterCompanyIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PromoterCompanyName>k__BackingField", IsRequired=true)]
        public string PromoterCompanyNamek__BackingField {
            get {
                return this.PromoterCompanyNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoterCompanyNamek__BackingFieldField, value) != true)) {
                    this.PromoterCompanyNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("PromoterCompanyNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PromoterDepartmentID>k__BackingField", IsRequired=true)]
        public string PromoterDepartmentIDk__BackingField {
            get {
                return this.PromoterDepartmentIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoterDepartmentIDk__BackingFieldField, value) != true)) {
                    this.PromoterDepartmentIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PromoterDepartmentIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PromoterName>k__BackingField", IsRequired=true)]
        public string PromoterNamek__BackingField {
            get {
                return this.PromoterNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoterNamek__BackingFieldField, value) != true)) {
                    this.PromoterNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("PromoterNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PromoterPostID>k__BackingField", IsRequired=true)]
        public string PromoterPostIDk__BackingField {
            get {
                return this.PromoterPostIDk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PromoterPostIDk__BackingFieldField, value) != true)) {
                    this.PromoterPostIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PromoterPostIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Promoterid>k__BackingField", IsRequired=true)]
        public string Promoteridk__BackingField {
            get {
                return this.Promoteridk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Promoteridk__BackingFieldField, value) != true)) {
                    this.Promoteridk__BackingFieldField = value;
                    this.RaisePropertyChanged("Promoteridk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Remark>k__BackingField", IsRequired=true)]
        public string Remarkk__BackingField {
            get {
                return this.Remarkk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Remarkk__BackingFieldField, value) != true)) {
                    this.Remarkk__BackingFieldField = value;
                    this.RaisePropertyChanged("Remarkk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StartDate>k__BackingField", IsRequired=true)]
        public System.DateTime StartDatek__BackingField {
            get {
                return this.StartDatek__BackingFieldField;
            }
            set {
                if ((this.StartDatek__BackingFieldField.Equals(value) != true)) {
                    this.StartDatek__BackingFieldField = value;
                    this.RaisePropertyChanged("StartDatek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool needLoan {
            get {
                return this.needLoanField;
            }
            set {
                if ((this.needLoanField.Equals(value) != true)) {
                    this.needLoanField = value;
                    this.RaisePropertyChanged("needLoan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool needReimbursement {
            get {
                return this.needReimbursementField;
            }
            set {
                if ((this.needReimbursementField.Equals(value) != true)) {
                    this.needReimbursementField = value;
                    this.RaisePropertyChanged("needReimbursement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CostItem", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Services")]
    public partial class CostItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double CostMoneyField;
        
        private string ItemTypeNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CostMoney {
            get {
                return this.CostMoneyField;
            }
            set {
                if ((this.CostMoneyField.Equals(value) != true)) {
                    this.CostMoneyField = value;
                    this.RaisePropertyChanged("CostMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemTypeNo {
            get {
                return this.ItemTypeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeNoField, value) != true)) {
                    this.ItemTypeNoField = value;
                    this.RaisePropertyChanged("ItemTypeNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskStatus", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Services")]
    public enum TaskStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBaseOfanyType", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.SaveResultOfanyType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.SaveResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.QueryResult))]
    public partial class ResultBaseOfanyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExceptionField;
        
        private byte[] InnerResultField;
        
        private bool IsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] InnerResult {
            get {
                return this.InnerResultField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerResultField, value) != true)) {
                    this.InnerResultField = value;
                    this.RaisePropertyChanged("InnerResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChanged {
            get {
                return this.IsChangedField;
            }
            set {
                if ((this.IsChangedField.Equals(value) != true)) {
                    this.IsChangedField = value;
                    this.RaisePropertyChanged("IsChanged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveResultOfanyType", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.SaveResult))]
    public partial class SaveResultOfanyType : SMT.Saas.Tools.WpServiceWS.ResultBaseOfanyType {
        
        private string MessageField;
        
        private SMT.Saas.Tools.WpServiceWS.SaveResultState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.WpServiceWS.SaveResultState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveResult", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public partial class SaveResult : SMT.Saas.Tools.WpServiceWS.SaveResultOfanyType {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResult", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common.Query")]
    public partial class QueryResult : SMT.Saas.Tools.WpServiceWS.ResultBaseOfanyType {
        
        private SMT.Saas.Tools.WpServiceWS.QueryPager PagerField;
        
        private SMT.Saas.Tools.WpServiceWS.ResultState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.WpServiceWS.QueryPager Pager {
            get {
                return this.PagerField;
            }
            set {
                if ((object.ReferenceEquals(this.PagerField, value) != true)) {
                    this.PagerField = value;
                    this.RaisePropertyChanged("Pager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.WpServiceWS.ResultState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultState", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public enum ResultState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOut = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveResultState", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public enum SaveResultState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunModel", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model.Entities")]
    public partial class RunModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double Auditk__BackingFieldField;
        
        private int IDk__BackingFieldField;
        
        private string NORMITEMNAMEk__BackingFieldField;
        
        private string NORMITEMk__BackingFieldField;
        
        private double PassAuditk__BackingFieldField;
        
        private double month10k__BackingFieldField;
        
        private double month11k__BackingFieldField;
        
        private double month12k__BackingFieldField;
        
        private double month1k__BackingFieldField;
        
        private double month2k__BackingFieldField;
        
        private double month3k__BackingFieldField;
        
        private double month4k__BackingFieldField;
        
        private double month5k__BackingFieldField;
        
        private double month6k__BackingFieldField;
        
        private double month7k__BackingFieldField;
        
        private double month8k__BackingFieldField;
        
        private double month9k__BackingFieldField;
        
        private double monthBalancek__BackingFieldField;
        
        private double totalk__BackingFieldField;
        
        private double yearBalancek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Audit>k__BackingField", IsRequired=true)]
        public double Auditk__BackingField {
            get {
                return this.Auditk__BackingFieldField;
            }
            set {
                if ((this.Auditk__BackingFieldField.Equals(value) != true)) {
                    this.Auditk__BackingFieldField = value;
                    this.RaisePropertyChanged("Auditk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ID>k__BackingField", IsRequired=true)]
        public int IDk__BackingField {
            get {
                return this.IDk__BackingFieldField;
            }
            set {
                if ((this.IDk__BackingFieldField.Equals(value) != true)) {
                    this.IDk__BackingFieldField = value;
                    this.RaisePropertyChanged("IDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NORMITEMNAME>k__BackingField", IsRequired=true)]
        public string NORMITEMNAMEk__BackingField {
            get {
                return this.NORMITEMNAMEk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMITEMNAMEk__BackingFieldField, value) != true)) {
                    this.NORMITEMNAMEk__BackingFieldField = value;
                    this.RaisePropertyChanged("NORMITEMNAMEk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NORMITEM>k__BackingField", IsRequired=true)]
        public string NORMITEMk__BackingField {
            get {
                return this.NORMITEMk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMITEMk__BackingFieldField, value) != true)) {
                    this.NORMITEMk__BackingFieldField = value;
                    this.RaisePropertyChanged("NORMITEMk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PassAudit>k__BackingField", IsRequired=true)]
        public double PassAuditk__BackingField {
            get {
                return this.PassAuditk__BackingFieldField;
            }
            set {
                if ((this.PassAuditk__BackingFieldField.Equals(value) != true)) {
                    this.PassAuditk__BackingFieldField = value;
                    this.RaisePropertyChanged("PassAuditk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month10>k__BackingField", IsRequired=true)]
        public double month10k__BackingField {
            get {
                return this.month10k__BackingFieldField;
            }
            set {
                if ((this.month10k__BackingFieldField.Equals(value) != true)) {
                    this.month10k__BackingFieldField = value;
                    this.RaisePropertyChanged("month10k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month11>k__BackingField", IsRequired=true)]
        public double month11k__BackingField {
            get {
                return this.month11k__BackingFieldField;
            }
            set {
                if ((this.month11k__BackingFieldField.Equals(value) != true)) {
                    this.month11k__BackingFieldField = value;
                    this.RaisePropertyChanged("month11k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month12>k__BackingField", IsRequired=true)]
        public double month12k__BackingField {
            get {
                return this.month12k__BackingFieldField;
            }
            set {
                if ((this.month12k__BackingFieldField.Equals(value) != true)) {
                    this.month12k__BackingFieldField = value;
                    this.RaisePropertyChanged("month12k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month1>k__BackingField", IsRequired=true)]
        public double month1k__BackingField {
            get {
                return this.month1k__BackingFieldField;
            }
            set {
                if ((this.month1k__BackingFieldField.Equals(value) != true)) {
                    this.month1k__BackingFieldField = value;
                    this.RaisePropertyChanged("month1k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month2>k__BackingField", IsRequired=true)]
        public double month2k__BackingField {
            get {
                return this.month2k__BackingFieldField;
            }
            set {
                if ((this.month2k__BackingFieldField.Equals(value) != true)) {
                    this.month2k__BackingFieldField = value;
                    this.RaisePropertyChanged("month2k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month3>k__BackingField", IsRequired=true)]
        public double month3k__BackingField {
            get {
                return this.month3k__BackingFieldField;
            }
            set {
                if ((this.month3k__BackingFieldField.Equals(value) != true)) {
                    this.month3k__BackingFieldField = value;
                    this.RaisePropertyChanged("month3k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month4>k__BackingField", IsRequired=true)]
        public double month4k__BackingField {
            get {
                return this.month4k__BackingFieldField;
            }
            set {
                if ((this.month4k__BackingFieldField.Equals(value) != true)) {
                    this.month4k__BackingFieldField = value;
                    this.RaisePropertyChanged("month4k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month5>k__BackingField", IsRequired=true)]
        public double month5k__BackingField {
            get {
                return this.month5k__BackingFieldField;
            }
            set {
                if ((this.month5k__BackingFieldField.Equals(value) != true)) {
                    this.month5k__BackingFieldField = value;
                    this.RaisePropertyChanged("month5k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month6>k__BackingField", IsRequired=true)]
        public double month6k__BackingField {
            get {
                return this.month6k__BackingFieldField;
            }
            set {
                if ((this.month6k__BackingFieldField.Equals(value) != true)) {
                    this.month6k__BackingFieldField = value;
                    this.RaisePropertyChanged("month6k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month7>k__BackingField", IsRequired=true)]
        public double month7k__BackingField {
            get {
                return this.month7k__BackingFieldField;
            }
            set {
                if ((this.month7k__BackingFieldField.Equals(value) != true)) {
                    this.month7k__BackingFieldField = value;
                    this.RaisePropertyChanged("month7k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month8>k__BackingField", IsRequired=true)]
        public double month8k__BackingField {
            get {
                return this.month8k__BackingFieldField;
            }
            set {
                if ((this.month8k__BackingFieldField.Equals(value) != true)) {
                    this.month8k__BackingFieldField = value;
                    this.RaisePropertyChanged("month8k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<month9>k__BackingField", IsRequired=true)]
        public double month9k__BackingField {
            get {
                return this.month9k__BackingFieldField;
            }
            set {
                if ((this.month9k__BackingFieldField.Equals(value) != true)) {
                    this.month9k__BackingFieldField = value;
                    this.RaisePropertyChanged("month9k__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<monthBalance>k__BackingField", IsRequired=true)]
        public double monthBalancek__BackingField {
            get {
                return this.monthBalancek__BackingFieldField;
            }
            set {
                if ((this.monthBalancek__BackingFieldField.Equals(value) != true)) {
                    this.monthBalancek__BackingFieldField = value;
                    this.RaisePropertyChanged("monthBalancek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<total>k__BackingField", IsRequired=true)]
        public double totalk__BackingField {
            get {
                return this.totalk__BackingFieldField;
            }
            set {
                if ((this.totalk__BackingFieldField.Equals(value) != true)) {
                    this.totalk__BackingFieldField = value;
                    this.RaisePropertyChanged("totalk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<yearBalance>k__BackingField", IsRequired=true)]
        public double yearBalancek__BackingField {
            get {
                return this.yearBalancek__BackingFieldField;
            }
            set {
                if ((this.yearBalancek__BackingFieldField.Equals(value) != true)) {
                    this.yearBalancek__BackingFieldField = value;
                    this.RaisePropertyChanged("yearBalancek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryModel", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model.Entities")]
    public partial class QueryModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDk__BackingFieldField;
        
        private string NORMITEMNAMEk__BackingFieldField;
        
        private string NORMITEMk__BackingFieldField;
        
        private double PreBalancek__BackingFieldField;
        
        private double ThisBalancek__BackingFieldField;
        
        private double ThisCreditk__BackingFieldField;
        
        private double ThisPlank__BackingFieldField;
        
        private double ThisRunk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ID>k__BackingField", IsRequired=true)]
        public int IDk__BackingField {
            get {
                return this.IDk__BackingFieldField;
            }
            set {
                if ((this.IDk__BackingFieldField.Equals(value) != true)) {
                    this.IDk__BackingFieldField = value;
                    this.RaisePropertyChanged("IDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NORMITEMNAME>k__BackingField", IsRequired=true)]
        public string NORMITEMNAMEk__BackingField {
            get {
                return this.NORMITEMNAMEk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMITEMNAMEk__BackingFieldField, value) != true)) {
                    this.NORMITEMNAMEk__BackingFieldField = value;
                    this.RaisePropertyChanged("NORMITEMNAMEk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NORMITEM>k__BackingField", IsRequired=true)]
        public string NORMITEMk__BackingField {
            get {
                return this.NORMITEMk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMITEMk__BackingFieldField, value) != true)) {
                    this.NORMITEMk__BackingFieldField = value;
                    this.RaisePropertyChanged("NORMITEMk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PreBalance>k__BackingField", IsRequired=true)]
        public double PreBalancek__BackingField {
            get {
                return this.PreBalancek__BackingFieldField;
            }
            set {
                if ((this.PreBalancek__BackingFieldField.Equals(value) != true)) {
                    this.PreBalancek__BackingFieldField = value;
                    this.RaisePropertyChanged("PreBalancek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ThisBalance>k__BackingField", IsRequired=true)]
        public double ThisBalancek__BackingField {
            get {
                return this.ThisBalancek__BackingFieldField;
            }
            set {
                if ((this.ThisBalancek__BackingFieldField.Equals(value) != true)) {
                    this.ThisBalancek__BackingFieldField = value;
                    this.RaisePropertyChanged("ThisBalancek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ThisCredit>k__BackingField", IsRequired=true)]
        public double ThisCreditk__BackingField {
            get {
                return this.ThisCreditk__BackingFieldField;
            }
            set {
                if ((this.ThisCreditk__BackingFieldField.Equals(value) != true)) {
                    this.ThisCreditk__BackingFieldField = value;
                    this.RaisePropertyChanged("ThisCreditk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ThisPlan>k__BackingField", IsRequired=true)]
        public double ThisPlank__BackingField {
            get {
                return this.ThisPlank__BackingFieldField;
            }
            set {
                if ((this.ThisPlank__BackingFieldField.Equals(value) != true)) {
                    this.ThisPlank__BackingFieldField = value;
                    this.RaisePropertyChanged("ThisPlank__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ThisRun>k__BackingField", IsRequired=true)]
        public double ThisRunk__BackingField {
            get {
                return this.ThisRunk__BackingFieldField;
            }
            set {
                if ((this.ThisRunk__BackingFieldField.Equals(value) != true)) {
                    this.ThisRunk__BackingFieldField = value;
                    this.RaisePropertyChanged("ThisRunk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_EmployeeFuns", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model.FeeModel")]
    public partial class V_EmployeeFuns : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ATTENDREMARKField;
        
        private string COMPANYIDField;
        
        private string COMPANYNAMEField;
        
        private string DEPARTMENTIDField;
        
        private string DEPARTMENTNAMEField;
        
        private string EMPLOYECNAMEField;
        
        private string EMPLOYEEIDField;
        
        private string EMPLOYEESTATEField;
        
        private string ISAGENCYField;
        
        private System.Nullable<decimal> NEEDATTENDDAYSField;
        
        private System.Nullable<decimal> NEEDSUMField;
        
        private string POSTIDField;
        
        private string POSTNAMEField;
        
        private System.Nullable<decimal> REALATTENDDAYSField;
        
        private System.Nullable<decimal> REALSUMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATTENDREMARK {
            get {
                return this.ATTENDREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.ATTENDREMARKField, value) != true)) {
                    this.ATTENDREMARKField = value;
                    this.RaisePropertyChanged("ATTENDREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYID {
            get {
                return this.COMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYIDField, value) != true)) {
                    this.COMPANYIDField = value;
                    this.RaisePropertyChanged("COMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYNAME {
            get {
                return this.COMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYNAMEField, value) != true)) {
                    this.COMPANYNAMEField = value;
                    this.RaisePropertyChanged("COMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTID {
            get {
                return this.DEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTIDField, value) != true)) {
                    this.DEPARTMENTIDField = value;
                    this.RaisePropertyChanged("DEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTNAME {
            get {
                return this.DEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTNAMEField, value) != true)) {
                    this.DEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("DEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYECNAME {
            get {
                return this.EMPLOYECNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYECNAMEField, value) != true)) {
                    this.EMPLOYECNAMEField = value;
                    this.RaisePropertyChanged("EMPLOYECNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEEID {
            get {
                return this.EMPLOYEEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEEIDField, value) != true)) {
                    this.EMPLOYEEIDField = value;
                    this.RaisePropertyChanged("EMPLOYEEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEESTATE {
            get {
                return this.EMPLOYEESTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEESTATEField, value) != true)) {
                    this.EMPLOYEESTATEField = value;
                    this.RaisePropertyChanged("EMPLOYEESTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISAGENCY {
            get {
                return this.ISAGENCYField;
            }
            set {
                if ((object.ReferenceEquals(this.ISAGENCYField, value) != true)) {
                    this.ISAGENCYField = value;
                    this.RaisePropertyChanged("ISAGENCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NEEDATTENDDAYS {
            get {
                return this.NEEDATTENDDAYSField;
            }
            set {
                if ((this.NEEDATTENDDAYSField.Equals(value) != true)) {
                    this.NEEDATTENDDAYSField = value;
                    this.RaisePropertyChanged("NEEDATTENDDAYS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NEEDSUM {
            get {
                return this.NEEDSUMField;
            }
            set {
                if ((this.NEEDSUMField.Equals(value) != true)) {
                    this.NEEDSUMField = value;
                    this.RaisePropertyChanged("NEEDSUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTID {
            get {
                return this.POSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTIDField, value) != true)) {
                    this.POSTIDField = value;
                    this.RaisePropertyChanged("POSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTNAME {
            get {
                return this.POSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTNAMEField, value) != true)) {
                    this.POSTNAMEField = value;
                    this.RaisePropertyChanged("POSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> REALATTENDDAYS {
            get {
                return this.REALATTENDDAYSField;
            }
            set {
                if ((this.REALATTENDDAYSField.Equals(value) != true)) {
                    this.REALATTENDDAYSField = value;
                    this.RaisePropertyChanged("REALATTENDDAYS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> REALSUM {
            get {
                return this.REALSUMField;
            }
            set {
                if ((this.REALSUMField.Equals(value) != true)) {
                    this.REALSUMField = value;
                    this.RaisePropertyChanged("REALSUM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeFuns", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model.FeeModel")]
    public partial class EmployeeFuns : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ApplyDateField;
        
        private string CompanyIDField;
        
        private string DepartmentIDField;
        
        private string EmployeeIDField;
        
        private string EmployeeNameField;
        
        private string FormCodeField;
        
        private string FormIDField;
        
        private decimal PaidMoneyField;
        
        private string PostIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIDField, value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIDField, value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormCode {
            get {
                return this.FormCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FormCodeField, value) != true)) {
                    this.FormCodeField = value;
                    this.RaisePropertyChanged("FormCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaidMoney {
            get {
                return this.PaidMoneyField;
            }
            set {
                if ((this.PaidMoneyField.Equals(value) != true)) {
                    this.PaidMoneyField = value;
                    this.RaisePropertyChanged("PaidMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostID {
            get {
                return this.PostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PostIDField, value) != true)) {
                    this.PostIDField = value;
                    this.RaisePropertyChanged("PostID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_FB_SUBJECT", Namespace="http://schemas.datacontract.org/2004/07/SMT.Portal.Model")]
    public partial class T_FB_SUBJECT : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal ACTIVEDField;
        
        private decimal CHECKSTATESField;
        
        private string CREATECOMPANYIDField;
        
        private string CREATECOMPANYNAMEField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEDEPARTMENTNAMEField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEPOSTNAMEField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private decimal EDITSTATESField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERCOMPANYNAMEField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERDEPARTMENTNAMEField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string OWNERPOSTNAMEField;
        
        private string PARENTSUBJECTIDField;
        
        private string SUBJECTCODEField;
        
        private string SUBJECTIDField;
        
        private string SUBJECTNAMEField;
        
        private string SUBJECTTYPEIDField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ACTIVED {
            get {
                return this.ACTIVEDField;
            }
            set {
                if ((this.ACTIVEDField.Equals(value) != true)) {
                    this.ACTIVEDField = value;
                    this.RaisePropertyChanged("ACTIVED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CHECKSTATES {
            get {
                return this.CHECKSTATESField;
            }
            set {
                if ((this.CHECKSTATESField.Equals(value) != true)) {
                    this.CHECKSTATESField = value;
                    this.RaisePropertyChanged("CHECKSTATES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYNAME {
            get {
                return this.CREATECOMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYNAMEField, value) != true)) {
                    this.CREATECOMPANYNAMEField = value;
                    this.RaisePropertyChanged("CREATECOMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTNAME {
            get {
                return this.CREATEDEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTNAMEField, value) != true)) {
                    this.CREATEDEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTNAME {
            get {
                return this.CREATEPOSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTNAMEField, value) != true)) {
                    this.CREATEPOSTNAMEField = value;
                    this.RaisePropertyChanged("CREATEPOSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EDITSTATES {
            get {
                return this.EDITSTATESField;
            }
            set {
                if ((this.EDITSTATESField.Equals(value) != true)) {
                    this.EDITSTATESField = value;
                    this.RaisePropertyChanged("EDITSTATES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYNAME {
            get {
                return this.OWNERCOMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYNAMEField, value) != true)) {
                    this.OWNERCOMPANYNAMEField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTNAME {
            get {
                return this.OWNERDEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTNAMEField, value) != true)) {
                    this.OWNERDEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTNAME {
            get {
                return this.OWNERPOSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTNAMEField, value) != true)) {
                    this.OWNERPOSTNAMEField = value;
                    this.RaisePropertyChanged("OWNERPOSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTSUBJECTID {
            get {
                return this.PARENTSUBJECTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTSUBJECTIDField, value) != true)) {
                    this.PARENTSUBJECTIDField = value;
                    this.RaisePropertyChanged("PARENTSUBJECTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUBJECTCODE {
            get {
                return this.SUBJECTCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUBJECTCODEField, value) != true)) {
                    this.SUBJECTCODEField = value;
                    this.RaisePropertyChanged("SUBJECTCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUBJECTID {
            get {
                return this.SUBJECTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUBJECTIDField, value) != true)) {
                    this.SUBJECTIDField = value;
                    this.RaisePropertyChanged("SUBJECTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUBJECTNAME {
            get {
                return this.SUBJECTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUBJECTNAMEField, value) != true)) {
                    this.SUBJECTNAMEField = value;
                    this.RaisePropertyChanged("SUBJECTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUBJECTTYPEID {
            get {
                return this.SUBJECTTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUBJECTTYPEIDField, value) != true)) {
                    this.SUBJECTTYPEIDField = value;
                    this.RaisePropertyChanged("SUBJECTTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY))]
    public partial class EntityBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SMT.Saas.Tools.WpServiceWS.EntityAction Actionk__BackingFieldField;
        
        private string PrimaryKeyNamek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Action>k__BackingField", IsRequired=true)]
        public SMT.Saas.Tools.WpServiceWS.EntityAction Actionk__BackingField {
            get {
                return this.Actionk__BackingFieldField;
            }
            set {
                if ((this.Actionk__BackingFieldField.Equals(value) != true)) {
                    this.Actionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Actionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PrimaryKeyName>k__BackingField", IsRequired=true)]
        public string PrimaryKeyNamek__BackingField {
            get {
                return this.PrimaryKeyNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyNamek__BackingFieldField, value) != true)) {
                    this.PrimaryKeyNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("PrimaryKeyNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYEXEC", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYEXEC : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private string APPRAISEField;
        
        private string APPRAISESUGGESTField;
        
        private string COMPANYNAMEField;
        
        private string COMPLETIONCRITERIAField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string DEPARTMENTNAMEField;
        
        private string DEPTIDPARENTSField;
        
        private string EDITSTATEField;
        
        private string EMPLOYEENAMEField;
        
        private System.DateTime ENDDATEField;
        
        private string FINISHCASEField;
        
        private string FINISHTYPEField;
        
        private string FINISHTYPENAMEField;
        
        private string ISEVECTIONField;
        
        private string ISSUMFINISHField;
        
        private string ITEMSNAMEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string PEMPEIDField;
        
        private string PEMPIDField;
        
        private string PEMPPIDField;
        
        private System.DateTime PLANENDDATEField;
        
        private System.DateTime PLANSTARTDATEField;
        
        private string PLANTYPEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> POSTEMPSUMMARYEXECDETAILField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> POSTEMPSUMMARYEXECFIXField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> POSTEMPSUMMARYEXECINCOMEField;
        
        private string POSTNAMEField;
        
        private string REMARKField;
        
        private string SELFAPPRISEField;
        
        private string SELFAPPRISECONTENTField;
        
        private string SOURCETYPEField;
        
        private System.DateTime STARTDATEField;
        
        private string TASKCATEGORYField;
        
        private string TASKCODEField;
        
        private double TOTALCOSTField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISE {
            get {
                return this.APPRAISEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISEField, value) != true)) {
                    this.APPRAISEField = value;
                    this.RaisePropertyChanged("APPRAISE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISESUGGEST {
            get {
                return this.APPRAISESUGGESTField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISESUGGESTField, value) != true)) {
                    this.APPRAISESUGGESTField = value;
                    this.RaisePropertyChanged("APPRAISESUGGEST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYNAME {
            get {
                return this.COMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYNAMEField, value) != true)) {
                    this.COMPANYNAMEField = value;
                    this.RaisePropertyChanged("COMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLETIONCRITERIA {
            get {
                return this.COMPLETIONCRITERIAField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLETIONCRITERIAField, value) != true)) {
                    this.COMPLETIONCRITERIAField = value;
                    this.RaisePropertyChanged("COMPLETIONCRITERIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTNAME {
            get {
                return this.DEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTNAMEField, value) != true)) {
                    this.DEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("DEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPTIDPARENTS {
            get {
                return this.DEPTIDPARENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPTIDPARENTSField, value) != true)) {
                    this.DEPTIDPARENTSField = value;
                    this.RaisePropertyChanged("DEPTIDPARENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEENAME {
            get {
                return this.EMPLOYEENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEENAMEField, value) != true)) {
                    this.EMPLOYEENAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHCASE {
            get {
                return this.FINISHCASEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHCASEField, value) != true)) {
                    this.FINISHCASEField = value;
                    this.RaisePropertyChanged("FINISHCASE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHTYPE {
            get {
                return this.FINISHTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHTYPEField, value) != true)) {
                    this.FINISHTYPEField = value;
                    this.RaisePropertyChanged("FINISHTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHTYPENAME {
            get {
                return this.FINISHTYPENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHTYPENAMEField, value) != true)) {
                    this.FINISHTYPENAMEField = value;
                    this.RaisePropertyChanged("FINISHTYPENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISEVECTION {
            get {
                return this.ISEVECTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.ISEVECTIONField, value) != true)) {
                    this.ISEVECTIONField = value;
                    this.RaisePropertyChanged("ISEVECTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSUMFINISH {
            get {
                return this.ISSUMFINISHField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSUMFINISHField, value) != true)) {
                    this.ISSUMFINISHField = value;
                    this.RaisePropertyChanged("ISSUMFINISH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITEMSNAME {
            get {
                return this.ITEMSNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ITEMSNAMEField, value) != true)) {
                    this.ITEMSNAMEField = value;
                    this.RaisePropertyChanged("ITEMSNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPEID {
            get {
                return this.PEMPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPEIDField, value) != true)) {
                    this.PEMPEIDField = value;
                    this.RaisePropertyChanged("PEMPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PLANENDDATE {
            get {
                return this.PLANENDDATEField;
            }
            set {
                if ((this.PLANENDDATEField.Equals(value) != true)) {
                    this.PLANENDDATEField = value;
                    this.RaisePropertyChanged("PLANENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PLANSTARTDATE {
            get {
                return this.PLANSTARTDATEField;
            }
            set {
                if ((this.PLANSTARTDATEField.Equals(value) != true)) {
                    this.PLANSTARTDATEField = value;
                    this.RaisePropertyChanged("PLANSTARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLANTYPE {
            get {
                return this.PLANTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PLANTYPEField, value) != true)) {
                    this.PLANTYPEField = value;
                    this.RaisePropertyChanged("PLANTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> POSTEMPSUMMARYEXECDETAIL {
            get {
                return this.POSTEMPSUMMARYEXECDETAILField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYEXECDETAILField, value) != true)) {
                    this.POSTEMPSUMMARYEXECDETAILField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYEXECDETAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> POSTEMPSUMMARYEXECFIX {
            get {
                return this.POSTEMPSUMMARYEXECFIXField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYEXECFIXField, value) != true)) {
                    this.POSTEMPSUMMARYEXECFIXField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYEXECFIX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> POSTEMPSUMMARYEXECINCOME {
            get {
                return this.POSTEMPSUMMARYEXECINCOMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYEXECINCOMEField, value) != true)) {
                    this.POSTEMPSUMMARYEXECINCOMEField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYEXECINCOME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTNAME {
            get {
                return this.POSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTNAMEField, value) != true)) {
                    this.POSTNAMEField = value;
                    this.RaisePropertyChanged("POSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SELFAPPRISE {
            get {
                return this.SELFAPPRISEField;
            }
            set {
                if ((object.ReferenceEquals(this.SELFAPPRISEField, value) != true)) {
                    this.SELFAPPRISEField = value;
                    this.RaisePropertyChanged("SELFAPPRISE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SELFAPPRISECONTENT {
            get {
                return this.SELFAPPRISECONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.SELFAPPRISECONTENTField, value) != true)) {
                    this.SELFAPPRISECONTENTField = value;
                    this.RaisePropertyChanged("SELFAPPRISECONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOURCETYPE {
            get {
                return this.SOURCETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SOURCETYPEField, value) != true)) {
                    this.SOURCETYPEField = value;
                    this.RaisePropertyChanged("SOURCETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime STARTDATE {
            get {
                return this.STARTDATEField;
            }
            set {
                if ((this.STARTDATEField.Equals(value) != true)) {
                    this.STARTDATEField = value;
                    this.RaisePropertyChanged("STARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCATEGORY {
            get {
                return this.TASKCATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCATEGORYField, value) != true)) {
                    this.TASKCATEGORYField = value;
                    this.RaisePropertyChanged("TASKCATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCODE {
            get {
                return this.TASKCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCODEField, value) != true)) {
                    this.TASKCODEField = value;
                    this.RaisePropertyChanged("TASKCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYEXECDETAIL", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYEXECDETAIL : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private string COSTITEMIDField;
        
        private string COSTITEMNAMEField;
        
        private double CPFACTCOSTField;
        
        private double CPPLANCOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private string PEMPEIDField;
        
        private string PEMPIDField;
        
        private double REIMCOSTField;
        
        private string REMARKField;
        
        private short SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMID {
            get {
                return this.COSTITEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMIDField, value) != true)) {
                    this.COSTITEMIDField = value;
                    this.RaisePropertyChanged("COSTITEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMNAME {
            get {
                return this.COSTITEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMNAMEField, value) != true)) {
                    this.COSTITEMNAMEField = value;
                    this.RaisePropertyChanged("COSTITEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPFACTCOST {
            get {
                return this.CPFACTCOSTField;
            }
            set {
                if ((this.CPFACTCOSTField.Equals(value) != true)) {
                    this.CPFACTCOSTField = value;
                    this.RaisePropertyChanged("CPFACTCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPEID {
            get {
                return this.PEMPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPEIDField, value) != true)) {
                    this.PEMPEIDField = value;
                    this.RaisePropertyChanged("PEMPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double REIMCOST {
            get {
                return this.REIMCOSTField;
            }
            set {
                if ((this.REIMCOSTField.Equals(value) != true)) {
                    this.REIMCOSTField = value;
                    this.RaisePropertyChanged("REIMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((this.SERIALNOField.Equals(value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYEXECFIX", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYEXECFIX : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private double CPPLANCOSTField;
        
        private double CPUSABLECOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private string NORMIDField;
        
        private string NORMNAMEField;
        
        private string PEMPEIDField;
        
        private string PEMPIDField;
        
        private double REIMCOSTField;
        
        private string REMARKField;
        
        private string SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPUSABLECOST {
            get {
                return this.CPUSABLECOSTField;
            }
            set {
                if ((this.CPUSABLECOSTField.Equals(value) != true)) {
                    this.CPUSABLECOSTField = value;
                    this.RaisePropertyChanged("CPUSABLECOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NORMID {
            get {
                return this.NORMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMIDField, value) != true)) {
                    this.NORMIDField = value;
                    this.RaisePropertyChanged("NORMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NORMNAME {
            get {
                return this.NORMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMNAMEField, value) != true)) {
                    this.NORMNAMEField = value;
                    this.RaisePropertyChanged("NORMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPEID {
            get {
                return this.PEMPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPEIDField, value) != true)) {
                    this.PEMPEIDField = value;
                    this.RaisePropertyChanged("PEMPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double REIMCOST {
            get {
                return this.REIMCOSTField;
            }
            set {
                if ((this.REIMCOSTField.Equals(value) != true)) {
                    this.REIMCOSTField = value;
                    this.RaisePropertyChanged("REIMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((object.ReferenceEquals(this.SERIALNOField, value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYEXECINCOME", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYEXECINCOME : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private string COSTITEMIDField;
        
        private string COSTITEMNAMEField;
        
        private double CPFACTCOSTField;
        
        private double CPPLANCOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private string PEMPEIDField;
        
        private string PEMPIDField;
        
        private string REMARKField;
        
        private short SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMID {
            get {
                return this.COSTITEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMIDField, value) != true)) {
                    this.COSTITEMIDField = value;
                    this.RaisePropertyChanged("COSTITEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMNAME {
            get {
                return this.COSTITEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMNAMEField, value) != true)) {
                    this.COSTITEMNAMEField = value;
                    this.RaisePropertyChanged("COSTITEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPFACTCOST {
            get {
                return this.CPFACTCOSTField;
            }
            set {
                if ((this.CPFACTCOSTField.Equals(value) != true)) {
                    this.CPFACTCOSTField = value;
                    this.RaisePropertyChanged("CPFACTCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPEID {
            get {
                return this.PEMPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPEIDField, value) != true)) {
                    this.PEMPEIDField = value;
                    this.RaisePropertyChanged("PEMPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((this.SERIALNOField.Equals(value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYPLAN", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYPLAN : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private string APPRAISEField;
        
        private string APPRAISESUGGESTField;
        
        private string COMPLETIONCRITERIAField;
        
        private string COSTYEARField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string DETAILIDField;
        
        private string EDITSTATEField;
        
        private System.DateTime ENDDATEField;
        
        private System.DateTime FACTENDDATEField;
        
        private System.DateTime FACTSTARTDATEField;
        
        private string FINISHCASEField;
        
        private string FINISHTYPEField;
        
        private string FINISHTYPENAMEField;
        
        private string ISEVECTIONField;
        
        private string ISLEADERSHIPADDField;
        
        private string ISSUMFINISHField;
        
        private string ITEMSNAMEField;
        
        private string OFFICEPRECONFIRMREMARKField;
        
        private string OFFICEPRECONFIRMTYPEField;
        
        private string PEMPIDField;
        
        private string PEMPPIDField;
        
        private double PLANCOSTField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> POSTEMPSUMMARYPLANDETAILField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> POSTEMPSUMMARYPLANFIXField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> POSTEMPSUMMARYPLANINCOMEField;
        
        private string REMARKField;
        
        private string SELFAPPRISEField;
        
        private string SELFAPPRISECONTENTField;
        
        private string SOURCETYPEField;
        
        private System.DateTime STARTDATEField;
        
        private System.DateTime SUMFINISHDATEField;
        
        private string SUMFINISHIDField;
        
        private string SUMFINISHNAMEField;
        
        private string TASKCATEGORYField;
        
        private string TASKCODEField;
        
        private string TASKCOMFIRMREMARKField;
        
        private string TASKCOMFIRMTYPEField;
        
        private double TOTALCOSTField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISE {
            get {
                return this.APPRAISEField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISEField, value) != true)) {
                    this.APPRAISEField = value;
                    this.RaisePropertyChanged("APPRAISE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APPRAISESUGGEST {
            get {
                return this.APPRAISESUGGESTField;
            }
            set {
                if ((object.ReferenceEquals(this.APPRAISESUGGESTField, value) != true)) {
                    this.APPRAISESUGGESTField = value;
                    this.RaisePropertyChanged("APPRAISESUGGEST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLETIONCRITERIA {
            get {
                return this.COMPLETIONCRITERIAField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLETIONCRITERIAField, value) != true)) {
                    this.COMPLETIONCRITERIAField = value;
                    this.RaisePropertyChanged("COMPLETIONCRITERIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTYEAR {
            get {
                return this.COSTYEARField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTYEARField, value) != true)) {
                    this.COSTYEARField = value;
                    this.RaisePropertyChanged("COSTYEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DETAILID {
            get {
                return this.DETAILIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DETAILIDField, value) != true)) {
                    this.DETAILIDField = value;
                    this.RaisePropertyChanged("DETAILID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FACTENDDATE {
            get {
                return this.FACTENDDATEField;
            }
            set {
                if ((this.FACTENDDATEField.Equals(value) != true)) {
                    this.FACTENDDATEField = value;
                    this.RaisePropertyChanged("FACTENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FACTSTARTDATE {
            get {
                return this.FACTSTARTDATEField;
            }
            set {
                if ((this.FACTSTARTDATEField.Equals(value) != true)) {
                    this.FACTSTARTDATEField = value;
                    this.RaisePropertyChanged("FACTSTARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHCASE {
            get {
                return this.FINISHCASEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHCASEField, value) != true)) {
                    this.FINISHCASEField = value;
                    this.RaisePropertyChanged("FINISHCASE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHTYPE {
            get {
                return this.FINISHTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHTYPEField, value) != true)) {
                    this.FINISHTYPEField = value;
                    this.RaisePropertyChanged("FINISHTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FINISHTYPENAME {
            get {
                return this.FINISHTYPENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FINISHTYPENAMEField, value) != true)) {
                    this.FINISHTYPENAMEField = value;
                    this.RaisePropertyChanged("FINISHTYPENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISEVECTION {
            get {
                return this.ISEVECTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.ISEVECTIONField, value) != true)) {
                    this.ISEVECTIONField = value;
                    this.RaisePropertyChanged("ISEVECTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISLEADERSHIPADD {
            get {
                return this.ISLEADERSHIPADDField;
            }
            set {
                if ((object.ReferenceEquals(this.ISLEADERSHIPADDField, value) != true)) {
                    this.ISLEADERSHIPADDField = value;
                    this.RaisePropertyChanged("ISLEADERSHIPADD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSUMFINISH {
            get {
                return this.ISSUMFINISHField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSUMFINISHField, value) != true)) {
                    this.ISSUMFINISHField = value;
                    this.RaisePropertyChanged("ISSUMFINISH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITEMSNAME {
            get {
                return this.ITEMSNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ITEMSNAMEField, value) != true)) {
                    this.ITEMSNAMEField = value;
                    this.RaisePropertyChanged("ITEMSNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OFFICEPRECONFIRMREMARK {
            get {
                return this.OFFICEPRECONFIRMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.OFFICEPRECONFIRMREMARKField, value) != true)) {
                    this.OFFICEPRECONFIRMREMARKField = value;
                    this.RaisePropertyChanged("OFFICEPRECONFIRMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OFFICEPRECONFIRMTYPE {
            get {
                return this.OFFICEPRECONFIRMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.OFFICEPRECONFIRMTYPEField, value) != true)) {
                    this.OFFICEPRECONFIRMTYPEField = value;
                    this.RaisePropertyChanged("OFFICEPRECONFIRMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PLANCOST {
            get {
                return this.PLANCOSTField;
            }
            set {
                if ((this.PLANCOSTField.Equals(value) != true)) {
                    this.PLANCOSTField = value;
                    this.RaisePropertyChanged("PLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> POSTEMPSUMMARYPLANDETAIL {
            get {
                return this.POSTEMPSUMMARYPLANDETAILField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYPLANDETAILField, value) != true)) {
                    this.POSTEMPSUMMARYPLANDETAILField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYPLANDETAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> POSTEMPSUMMARYPLANFIX {
            get {
                return this.POSTEMPSUMMARYPLANFIXField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYPLANFIXField, value) != true)) {
                    this.POSTEMPSUMMARYPLANFIXField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYPLANFIX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> POSTEMPSUMMARYPLANINCOME {
            get {
                return this.POSTEMPSUMMARYPLANINCOMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYPLANINCOMEField, value) != true)) {
                    this.POSTEMPSUMMARYPLANINCOMEField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYPLANINCOME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SELFAPPRISE {
            get {
                return this.SELFAPPRISEField;
            }
            set {
                if ((object.ReferenceEquals(this.SELFAPPRISEField, value) != true)) {
                    this.SELFAPPRISEField = value;
                    this.RaisePropertyChanged("SELFAPPRISE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SELFAPPRISECONTENT {
            get {
                return this.SELFAPPRISECONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.SELFAPPRISECONTENTField, value) != true)) {
                    this.SELFAPPRISECONTENTField = value;
                    this.RaisePropertyChanged("SELFAPPRISECONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOURCETYPE {
            get {
                return this.SOURCETYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SOURCETYPEField, value) != true)) {
                    this.SOURCETYPEField = value;
                    this.RaisePropertyChanged("SOURCETYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime STARTDATE {
            get {
                return this.STARTDATEField;
            }
            set {
                if ((this.STARTDATEField.Equals(value) != true)) {
                    this.STARTDATEField = value;
                    this.RaisePropertyChanged("STARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SUMFINISHDATE {
            get {
                return this.SUMFINISHDATEField;
            }
            set {
                if ((this.SUMFINISHDATEField.Equals(value) != true)) {
                    this.SUMFINISHDATEField = value;
                    this.RaisePropertyChanged("SUMFINISHDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMFINISHID {
            get {
                return this.SUMFINISHIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMFINISHIDField, value) != true)) {
                    this.SUMFINISHIDField = value;
                    this.RaisePropertyChanged("SUMFINISHID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUMFINISHNAME {
            get {
                return this.SUMFINISHNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.SUMFINISHNAMEField, value) != true)) {
                    this.SUMFINISHNAMEField = value;
                    this.RaisePropertyChanged("SUMFINISHNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCATEGORY {
            get {
                return this.TASKCATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCATEGORYField, value) != true)) {
                    this.TASKCATEGORYField = value;
                    this.RaisePropertyChanged("TASKCATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCODE {
            get {
                return this.TASKCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCODEField, value) != true)) {
                    this.TASKCODEField = value;
                    this.RaisePropertyChanged("TASKCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCOMFIRMREMARK {
            get {
                return this.TASKCOMFIRMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCOMFIRMREMARKField, value) != true)) {
                    this.TASKCOMFIRMREMARKField = value;
                    this.RaisePropertyChanged("TASKCOMFIRMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCOMFIRMTYPE {
            get {
                return this.TASKCOMFIRMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCOMFIRMTYPEField, value) != true)) {
                    this.TASKCOMFIRMTYPEField = value;
                    this.RaisePropertyChanged("TASKCOMFIRMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TOTALCOST {
            get {
                return this.TOTALCOSTField;
            }
            set {
                if ((this.TOTALCOSTField.Equals(value) != true)) {
                    this.TOTALCOSTField = value;
                    this.RaisePropertyChanged("TOTALCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYPLANDETAIL", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYPLANDETAIL : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private double CONFIRMCOSTField;
        
        private string COSTCOMFIRMREMARKField;
        
        private string COSTCOMFIRMTYPEField;
        
        private string COSTITEMIDField;
        
        private string COSTITEMNAMEField;
        
        private double CPPLANCOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private double FACTCOSTSUMField;
        
        private string PEMPIDField;
        
        private string PEMPPIDField;
        
        private double REIMCOSTField;
        
        private string REMARKField;
        
        private short SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private double YEARSURPLUSCOSTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CONFIRMCOST {
            get {
                return this.CONFIRMCOSTField;
            }
            set {
                if ((this.CONFIRMCOSTField.Equals(value) != true)) {
                    this.CONFIRMCOSTField = value;
                    this.RaisePropertyChanged("CONFIRMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMREMARK {
            get {
                return this.COSTCOMFIRMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMREMARKField, value) != true)) {
                    this.COSTCOMFIRMREMARKField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMTYPE {
            get {
                return this.COSTCOMFIRMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMTYPEField, value) != true)) {
                    this.COSTCOMFIRMTYPEField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMID {
            get {
                return this.COSTITEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMIDField, value) != true)) {
                    this.COSTITEMIDField = value;
                    this.RaisePropertyChanged("COSTITEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMNAME {
            get {
                return this.COSTITEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMNAMEField, value) != true)) {
                    this.COSTITEMNAMEField = value;
                    this.RaisePropertyChanged("COSTITEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FACTCOSTSUM {
            get {
                return this.FACTCOSTSUMField;
            }
            set {
                if ((this.FACTCOSTSUMField.Equals(value) != true)) {
                    this.FACTCOSTSUMField = value;
                    this.RaisePropertyChanged("FACTCOSTSUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double REIMCOST {
            get {
                return this.REIMCOSTField;
            }
            set {
                if ((this.REIMCOSTField.Equals(value) != true)) {
                    this.REIMCOSTField = value;
                    this.RaisePropertyChanged("REIMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((this.SERIALNOField.Equals(value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YEARSURPLUSCOST {
            get {
                return this.YEARSURPLUSCOSTField;
            }
            set {
                if ((this.YEARSURPLUSCOSTField.Equals(value) != true)) {
                    this.YEARSURPLUSCOSTField = value;
                    this.RaisePropertyChanged("YEARSURPLUSCOST");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYPLANFIX", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYPLANFIX : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private double CONFIRMCOSTField;
        
        private string COSTCOMFIRMREMARKField;
        
        private string COSTCOMFIRMTYPEField;
        
        private double CPPLANCOSTField;
        
        private double CPUSABLECOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private double FACTCOSTSUMField;
        
        private string NORMIDField;
        
        private string NORMNAMEField;
        
        private string PEMPIDField;
        
        private string PEMPPIDField;
        
        private double REIMCOSTField;
        
        private string REMARKField;
        
        private string SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CONFIRMCOST {
            get {
                return this.CONFIRMCOSTField;
            }
            set {
                if ((this.CONFIRMCOSTField.Equals(value) != true)) {
                    this.CONFIRMCOSTField = value;
                    this.RaisePropertyChanged("CONFIRMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMREMARK {
            get {
                return this.COSTCOMFIRMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMREMARKField, value) != true)) {
                    this.COSTCOMFIRMREMARKField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMTYPE {
            get {
                return this.COSTCOMFIRMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMTYPEField, value) != true)) {
                    this.COSTCOMFIRMTYPEField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPUSABLECOST {
            get {
                return this.CPUSABLECOSTField;
            }
            set {
                if ((this.CPUSABLECOSTField.Equals(value) != true)) {
                    this.CPUSABLECOSTField = value;
                    this.RaisePropertyChanged("CPUSABLECOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FACTCOSTSUM {
            get {
                return this.FACTCOSTSUMField;
            }
            set {
                if ((this.FACTCOSTSUMField.Equals(value) != true)) {
                    this.FACTCOSTSUMField = value;
                    this.RaisePropertyChanged("FACTCOSTSUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NORMID {
            get {
                return this.NORMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMIDField, value) != true)) {
                    this.NORMIDField = value;
                    this.RaisePropertyChanged("NORMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NORMNAME {
            get {
                return this.NORMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NORMNAMEField, value) != true)) {
                    this.NORMNAMEField = value;
                    this.RaisePropertyChanged("NORMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double REIMCOST {
            get {
                return this.REIMCOSTField;
            }
            set {
                if ((this.REIMCOSTField.Equals(value) != true)) {
                    this.REIMCOSTField = value;
                    this.RaisePropertyChanged("REIMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((object.ReferenceEquals(this.SERIALNOField, value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARYPLANINCOME", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARYPLANINCOME : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private double CONFIRMCOSTField;
        
        private string COSTCOMFIRMREMARKField;
        
        private string COSTCOMFIRMTYPEField;
        
        private string COSTITEMIDField;
        
        private string COSTITEMNAMEField;
        
        private double CPPLANCOSTField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEUSERIDField;
        
        private string EDITSTATEField;
        
        private double FACTCOSTSUMField;
        
        private string PEMPIDField;
        
        private string PEMPPIDField;
        
        private string REMARKField;
        
        private short SERIALNOField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private double YEARSURPLUSCOSTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CONFIRMCOST {
            get {
                return this.CONFIRMCOSTField;
            }
            set {
                if ((this.CONFIRMCOSTField.Equals(value) != true)) {
                    this.CONFIRMCOSTField = value;
                    this.RaisePropertyChanged("CONFIRMCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMREMARK {
            get {
                return this.COSTCOMFIRMREMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMREMARKField, value) != true)) {
                    this.COSTCOMFIRMREMARKField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMREMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTCOMFIRMTYPE {
            get {
                return this.COSTCOMFIRMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTCOMFIRMTYPEField, value) != true)) {
                    this.COSTCOMFIRMTYPEField = value;
                    this.RaisePropertyChanged("COSTCOMFIRMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMID {
            get {
                return this.COSTITEMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMIDField, value) != true)) {
                    this.COSTITEMIDField = value;
                    this.RaisePropertyChanged("COSTITEMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTITEMNAME {
            get {
                return this.COSTITEMNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTITEMNAMEField, value) != true)) {
                    this.COSTITEMNAMEField = value;
                    this.RaisePropertyChanged("COSTITEMNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CPPLANCOST {
            get {
                return this.CPPLANCOSTField;
            }
            set {
                if ((this.CPPLANCOSTField.Equals(value) != true)) {
                    this.CPPLANCOSTField = value;
                    this.RaisePropertyChanged("CPPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FACTCOSTSUM {
            get {
                return this.FACTCOSTSUMField;
            }
            set {
                if ((this.FACTCOSTSUMField.Equals(value) != true)) {
                    this.FACTCOSTSUMField = value;
                    this.RaisePropertyChanged("FACTCOSTSUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SERIALNO {
            get {
                return this.SERIALNOField;
            }
            set {
                if ((this.SERIALNOField.Equals(value) != true)) {
                    this.SERIALNOField = value;
                    this.RaisePropertyChanged("SERIALNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YEARSURPLUSCOST {
            get {
                return this.YEARSURPLUSCOSTField;
            }
            set {
                if ((this.YEARSURPLUSCOSTField.Equals(value) != true)) {
                    this.YEARSURPLUSCOSTField = value;
                    this.RaisePropertyChanged("YEARSURPLUSCOST");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VIEW_MYTASKS", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class VIEW_MYTASKS : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private string CATEGORYField;
        
        private string CATEGORYNAMEField;
        
        private System.DateTime COMPLETEDATEField;
        
        private string COMPLETIONCRITERIAField;
        
        private string CONFIRMORCOMPANYIDField;
        
        private string CONFIRMORDEPARTMENTIDField;
        
        private string CONFIRMORIDField;
        
        private string CONFIRMORPOSTIDField;
        
        private string COSTIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string DIDField;
        
        private string JOINUSERCOMPANYIDField;
        
        private string JOINUSERCOMPANYNAMEField;
        
        private string JOINUSERDEPARTMENTIDField;
        
        private string JOINUSERDEPARTMENTNAMEField;
        
        private string JOINUSERIDField;
        
        private string JOINUSERNAMEField;
        
        private string JOINUSERPOSTIDField;
        
        private string JOINUSERPOSTNAMEField;
        
        private string PEMPPIDField;
        
        private string PROMOTERCOMPANYIDField;
        
        private string PROMOTERDEPARTMENTIDField;
        
        private string PROMOTERIDField;
        
        private string PROMOTERNAMEField;
        
        private string PROMOTERPOSTIDField;
        
        private System.DateTime REQENDTDATEField;
        
        private System.DateTime REQSTARTDATEField;
        
        private string TASKCODEField;
        
        private string TASKFROMTYPEField;
        
        private string TASKIDField;
        
        private string TASKNAMEField;
        
        private string TASKSTATUSField;
        
        private string TASKSTATUSNAMEField;
        
        private string TASKTYPEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CATEGORY {
            get {
                return this.CATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.CATEGORYField, value) != true)) {
                    this.CATEGORYField = value;
                    this.RaisePropertyChanged("CATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CATEGORYNAME {
            get {
                return this.CATEGORYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CATEGORYNAMEField, value) != true)) {
                    this.CATEGORYNAMEField = value;
                    this.RaisePropertyChanged("CATEGORYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime COMPLETEDATE {
            get {
                return this.COMPLETEDATEField;
            }
            set {
                if ((this.COMPLETEDATEField.Equals(value) != true)) {
                    this.COMPLETEDATEField = value;
                    this.RaisePropertyChanged("COMPLETEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPLETIONCRITERIA {
            get {
                return this.COMPLETIONCRITERIAField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPLETIONCRITERIAField, value) != true)) {
                    this.COMPLETIONCRITERIAField = value;
                    this.RaisePropertyChanged("COMPLETIONCRITERIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIRMORCOMPANYID {
            get {
                return this.CONFIRMORCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIRMORCOMPANYIDField, value) != true)) {
                    this.CONFIRMORCOMPANYIDField = value;
                    this.RaisePropertyChanged("CONFIRMORCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIRMORDEPARTMENTID {
            get {
                return this.CONFIRMORDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIRMORDEPARTMENTIDField, value) != true)) {
                    this.CONFIRMORDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CONFIRMORDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIRMORID {
            get {
                return this.CONFIRMORIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIRMORIDField, value) != true)) {
                    this.CONFIRMORIDField = value;
                    this.RaisePropertyChanged("CONFIRMORID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CONFIRMORPOSTID {
            get {
                return this.CONFIRMORPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CONFIRMORPOSTIDField, value) != true)) {
                    this.CONFIRMORPOSTIDField = value;
                    this.RaisePropertyChanged("CONFIRMORPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTID {
            get {
                return this.COSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTIDField, value) != true)) {
                    this.COSTIDField = value;
                    this.RaisePropertyChanged("COSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DID {
            get {
                return this.DIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DIDField, value) != true)) {
                    this.DIDField = value;
                    this.RaisePropertyChanged("DID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERCOMPANYID {
            get {
                return this.JOINUSERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERCOMPANYIDField, value) != true)) {
                    this.JOINUSERCOMPANYIDField = value;
                    this.RaisePropertyChanged("JOINUSERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERCOMPANYNAME {
            get {
                return this.JOINUSERCOMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERCOMPANYNAMEField, value) != true)) {
                    this.JOINUSERCOMPANYNAMEField = value;
                    this.RaisePropertyChanged("JOINUSERCOMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERDEPARTMENTID {
            get {
                return this.JOINUSERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERDEPARTMENTIDField, value) != true)) {
                    this.JOINUSERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("JOINUSERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERDEPARTMENTNAME {
            get {
                return this.JOINUSERDEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERDEPARTMENTNAMEField, value) != true)) {
                    this.JOINUSERDEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("JOINUSERDEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERID {
            get {
                return this.JOINUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERIDField, value) != true)) {
                    this.JOINUSERIDField = value;
                    this.RaisePropertyChanged("JOINUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERNAME {
            get {
                return this.JOINUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERNAMEField, value) != true)) {
                    this.JOINUSERNAMEField = value;
                    this.RaisePropertyChanged("JOINUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERPOSTID {
            get {
                return this.JOINUSERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERPOSTIDField, value) != true)) {
                    this.JOINUSERPOSTIDField = value;
                    this.RaisePropertyChanged("JOINUSERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JOINUSERPOSTNAME {
            get {
                return this.JOINUSERPOSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.JOINUSERPOSTNAMEField, value) != true)) {
                    this.JOINUSERPOSTNAMEField = value;
                    this.RaisePropertyChanged("JOINUSERPOSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPPID {
            get {
                return this.PEMPPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPPIDField, value) != true)) {
                    this.PEMPPIDField = value;
                    this.RaisePropertyChanged("PEMPPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROMOTERCOMPANYID {
            get {
                return this.PROMOTERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROMOTERCOMPANYIDField, value) != true)) {
                    this.PROMOTERCOMPANYIDField = value;
                    this.RaisePropertyChanged("PROMOTERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROMOTERDEPARTMENTID {
            get {
                return this.PROMOTERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROMOTERDEPARTMENTIDField, value) != true)) {
                    this.PROMOTERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("PROMOTERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROMOTERID {
            get {
                return this.PROMOTERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROMOTERIDField, value) != true)) {
                    this.PROMOTERIDField = value;
                    this.RaisePropertyChanged("PROMOTERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROMOTERNAME {
            get {
                return this.PROMOTERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PROMOTERNAMEField, value) != true)) {
                    this.PROMOTERNAMEField = value;
                    this.RaisePropertyChanged("PROMOTERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROMOTERPOSTID {
            get {
                return this.PROMOTERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PROMOTERPOSTIDField, value) != true)) {
                    this.PROMOTERPOSTIDField = value;
                    this.RaisePropertyChanged("PROMOTERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime REQENDTDATE {
            get {
                return this.REQENDTDATEField;
            }
            set {
                if ((this.REQENDTDATEField.Equals(value) != true)) {
                    this.REQENDTDATEField = value;
                    this.RaisePropertyChanged("REQENDTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime REQSTARTDATE {
            get {
                return this.REQSTARTDATEField;
            }
            set {
                if ((this.REQSTARTDATEField.Equals(value) != true)) {
                    this.REQSTARTDATEField = value;
                    this.RaisePropertyChanged("REQSTARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKCODE {
            get {
                return this.TASKCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKCODEField, value) != true)) {
                    this.TASKCODEField = value;
                    this.RaisePropertyChanged("TASKCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKFROMTYPE {
            get {
                return this.TASKFROMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKFROMTYPEField, value) != true)) {
                    this.TASKFROMTYPEField = value;
                    this.RaisePropertyChanged("TASKFROMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKID {
            get {
                return this.TASKIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKIDField, value) != true)) {
                    this.TASKIDField = value;
                    this.RaisePropertyChanged("TASKID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKNAME {
            get {
                return this.TASKNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKNAMEField, value) != true)) {
                    this.TASKNAMEField = value;
                    this.RaisePropertyChanged("TASKNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKSTATUS {
            get {
                return this.TASKSTATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKSTATUSField, value) != true)) {
                    this.TASKSTATUSField = value;
                    this.RaisePropertyChanged("TASKSTATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKSTATUSNAME {
            get {
                return this.TASKSTATUSNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKSTATUSNAMEField, value) != true)) {
                    this.TASKSTATUSNAMEField = value;
                    this.RaisePropertyChanged("TASKSTATUSNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TASKTYPE {
            get {
                return this.TASKTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TASKTYPEField, value) != true)) {
                    this.TASKTYPEField = value;
                    this.RaisePropertyChanged("TASKTYPE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VIEW_EMPLOYEE", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class VIEW_EMPLOYEE : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private decimal ONLYIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERCOMPANYNAMEField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERDEPARTMENTNAMEField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string OWNERPOSTNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ONLYID {
            get {
                return this.ONLYIDField;
            }
            set {
                if ((this.ONLYIDField.Equals(value) != true)) {
                    this.ONLYIDField = value;
                    this.RaisePropertyChanged("ONLYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYNAME {
            get {
                return this.OWNERCOMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYNAMEField, value) != true)) {
                    this.OWNERCOMPANYNAMEField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTNAME {
            get {
                return this.OWNERDEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTNAMEField, value) != true)) {
                    this.OWNERDEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTNAME {
            get {
                return this.OWNERPOSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTNAMEField, value) != true)) {
                    this.OWNERPOSTNAMEField = value;
                    this.RaisePropertyChanged("OWNERPOSTNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_WP_POSTEMPSUMMARY", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class T_WP_POSTEMPSUMMARY : SMT.Saas.Tools.WpServiceWS.EntityBase {
        
        private System.DateTime APPLYDATEField;
        
        private string AUXIPEMPIDField;
        
        private string BUSINESSSTATEField;
        
        private string CHECKSTATESField;
        
        private string COMPANYNAMEField;
        
        private string COSTYEARField;
        
        private string CPSUMMARYField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private double CYBUSICOSTField;
        
        private string DEPARTMENTNAMEField;
        
        private string DEPLANIDField;
        
        private string DEPTIDPARENTSField;
        
        private string DIRECTSUPERIORIDField;
        
        private string EDITSTATEField;
        
        private string EMPLOYEENAMEField;
        
        private System.DateTime ENDDATEField;
        
        private string ISCENTERPRICIPALField;
        
        private string ISFIRSTSUBMITField;
        
        private string ISMAJORDATAField;
        
        private string ISSUMFINISHField;
        
        private string LEADERAPPRAISEField;
        
        private string LEADERAPPRAISENAMEField;
        
        private string LEADERAPPRAISESUGGESTField;
        
        private string LEADEREMPIDField;
        
        private string LEADEREMPNAMEField;
        
        private double MAXPLANCOSTField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERPOSTIDField;
        
        private string PEMPIDField;
        
        private string PERIODCODEField;
        
        private string PERIODDIDField;
        
        private string PERIODTYPEField;
        
        private string PERIODTYPENAMEField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> POSTEMPSUMMARYEXECField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> POSTEMPSUMMARYPLANField;
        
        private string POSTNAMEField;
        
        private string RECVERSIONField;
        
        private string REJECTOPTIONField;
        
        private string REMARKField;
        
        private System.DateTime STARTDATEField;
        
        private System.DateTime UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime APPLYDATE {
            get {
                return this.APPLYDATEField;
            }
            set {
                if ((this.APPLYDATEField.Equals(value) != true)) {
                    this.APPLYDATEField = value;
                    this.RaisePropertyChanged("APPLYDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUXIPEMPID {
            get {
                return this.AUXIPEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AUXIPEMPIDField, value) != true)) {
                    this.AUXIPEMPIDField = value;
                    this.RaisePropertyChanged("AUXIPEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BUSINESSSTATE {
            get {
                return this.BUSINESSSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.BUSINESSSTATEField, value) != true)) {
                    this.BUSINESSSTATEField = value;
                    this.RaisePropertyChanged("BUSINESSSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CHECKSTATES {
            get {
                return this.CHECKSTATESField;
            }
            set {
                if ((object.ReferenceEquals(this.CHECKSTATESField, value) != true)) {
                    this.CHECKSTATESField = value;
                    this.RaisePropertyChanged("CHECKSTATES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMPANYNAME {
            get {
                return this.COMPANYNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPANYNAMEField, value) != true)) {
                    this.COMPANYNAMEField = value;
                    this.RaisePropertyChanged("COMPANYNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COSTYEAR {
            get {
                return this.COSTYEARField;
            }
            set {
                if ((object.ReferenceEquals(this.COSTYEARField, value) != true)) {
                    this.COSTYEARField = value;
                    this.RaisePropertyChanged("COSTYEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPSUMMARY {
            get {
                return this.CPSUMMARYField;
            }
            set {
                if ((object.ReferenceEquals(this.CPSUMMARYField, value) != true)) {
                    this.CPSUMMARYField = value;
                    this.RaisePropertyChanged("CPSUMMARY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CYBUSICOST {
            get {
                return this.CYBUSICOSTField;
            }
            set {
                if ((this.CYBUSICOSTField.Equals(value) != true)) {
                    this.CYBUSICOSTField = value;
                    this.RaisePropertyChanged("CYBUSICOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPARTMENTNAME {
            get {
                return this.DEPARTMENTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPARTMENTNAMEField, value) != true)) {
                    this.DEPARTMENTNAMEField = value;
                    this.RaisePropertyChanged("DEPARTMENTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPLANID {
            get {
                return this.DEPLANIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPLANIDField, value) != true)) {
                    this.DEPLANIDField = value;
                    this.RaisePropertyChanged("DEPLANID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPTIDPARENTS {
            get {
                return this.DEPTIDPARENTSField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPTIDPARENTSField, value) != true)) {
                    this.DEPTIDPARENTSField = value;
                    this.RaisePropertyChanged("DEPTIDPARENTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIRECTSUPERIORID {
            get {
                return this.DIRECTSUPERIORIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DIRECTSUPERIORIDField, value) != true)) {
                    this.DIRECTSUPERIORIDField = value;
                    this.RaisePropertyChanged("DIRECTSUPERIORID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDITSTATE {
            get {
                return this.EDITSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.EDITSTATEField, value) != true)) {
                    this.EDITSTATEField = value;
                    this.RaisePropertyChanged("EDITSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPLOYEENAME {
            get {
                return this.EMPLOYEENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPLOYEENAMEField, value) != true)) {
                    this.EMPLOYEENAMEField = value;
                    this.RaisePropertyChanged("EMPLOYEENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISCENTERPRICIPAL {
            get {
                return this.ISCENTERPRICIPALField;
            }
            set {
                if ((object.ReferenceEquals(this.ISCENTERPRICIPALField, value) != true)) {
                    this.ISCENTERPRICIPALField = value;
                    this.RaisePropertyChanged("ISCENTERPRICIPAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISFIRSTSUBMIT {
            get {
                return this.ISFIRSTSUBMITField;
            }
            set {
                if ((object.ReferenceEquals(this.ISFIRSTSUBMITField, value) != true)) {
                    this.ISFIRSTSUBMITField = value;
                    this.RaisePropertyChanged("ISFIRSTSUBMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISMAJORDATA {
            get {
                return this.ISMAJORDATAField;
            }
            set {
                if ((object.ReferenceEquals(this.ISMAJORDATAField, value) != true)) {
                    this.ISMAJORDATAField = value;
                    this.RaisePropertyChanged("ISMAJORDATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSUMFINISH {
            get {
                return this.ISSUMFINISHField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSUMFINISHField, value) != true)) {
                    this.ISSUMFINISHField = value;
                    this.RaisePropertyChanged("ISSUMFINISH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LEADERAPPRAISE {
            get {
                return this.LEADERAPPRAISEField;
            }
            set {
                if ((object.ReferenceEquals(this.LEADERAPPRAISEField, value) != true)) {
                    this.LEADERAPPRAISEField = value;
                    this.RaisePropertyChanged("LEADERAPPRAISE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LEADERAPPRAISENAME {
            get {
                return this.LEADERAPPRAISENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.LEADERAPPRAISENAMEField, value) != true)) {
                    this.LEADERAPPRAISENAMEField = value;
                    this.RaisePropertyChanged("LEADERAPPRAISENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LEADERAPPRAISESUGGEST {
            get {
                return this.LEADERAPPRAISESUGGESTField;
            }
            set {
                if ((object.ReferenceEquals(this.LEADERAPPRAISESUGGESTField, value) != true)) {
                    this.LEADERAPPRAISESUGGESTField = value;
                    this.RaisePropertyChanged("LEADERAPPRAISESUGGEST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LEADEREMPID {
            get {
                return this.LEADEREMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LEADEREMPIDField, value) != true)) {
                    this.LEADEREMPIDField = value;
                    this.RaisePropertyChanged("LEADEREMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LEADEREMPNAME {
            get {
                return this.LEADEREMPNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.LEADEREMPNAMEField, value) != true)) {
                    this.LEADEREMPNAMEField = value;
                    this.RaisePropertyChanged("LEADEREMPNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MAXPLANCOST {
            get {
                return this.MAXPLANCOSTField;
            }
            set {
                if ((this.MAXPLANCOSTField.Equals(value) != true)) {
                    this.MAXPLANCOSTField = value;
                    this.RaisePropertyChanged("MAXPLANCOST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEMPID {
            get {
                return this.PEMPIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PEMPIDField, value) != true)) {
                    this.PEMPIDField = value;
                    this.RaisePropertyChanged("PEMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERIODCODE {
            get {
                return this.PERIODCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIODCODEField, value) != true)) {
                    this.PERIODCODEField = value;
                    this.RaisePropertyChanged("PERIODCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERIODDID {
            get {
                return this.PERIODDIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIODDIDField, value) != true)) {
                    this.PERIODDIDField = value;
                    this.RaisePropertyChanged("PERIODDID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERIODTYPE {
            get {
                return this.PERIODTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIODTYPEField, value) != true)) {
                    this.PERIODTYPEField = value;
                    this.RaisePropertyChanged("PERIODTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERIODTYPENAME {
            get {
                return this.PERIODTYPENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIODTYPENAMEField, value) != true)) {
                    this.PERIODTYPENAMEField = value;
                    this.RaisePropertyChanged("PERIODTYPENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> POSTEMPSUMMARYEXEC {
            get {
                return this.POSTEMPSUMMARYEXECField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYEXECField, value) != true)) {
                    this.POSTEMPSUMMARYEXECField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYEXEC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> POSTEMPSUMMARYPLAN {
            get {
                return this.POSTEMPSUMMARYPLANField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTEMPSUMMARYPLANField, value) != true)) {
                    this.POSTEMPSUMMARYPLANField = value;
                    this.RaisePropertyChanged("POSTEMPSUMMARYPLAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTNAME {
            get {
                return this.POSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTNAMEField, value) != true)) {
                    this.POSTNAMEField = value;
                    this.RaisePropertyChanged("POSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RECVERSION {
            get {
                return this.RECVERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.RECVERSIONField, value) != true)) {
                    this.RECVERSIONField = value;
                    this.RaisePropertyChanged("RECVERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REJECTOPTION {
            get {
                return this.REJECTOPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.REJECTOPTIONField, value) != true)) {
                    this.REJECTOPTIONField = value;
                    this.RaisePropertyChanged("REJECTOPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime STARTDATE {
            get {
                return this.STARTDATEField;
            }
            set {
                if ((this.STARTDATEField.Equals(value) != true)) {
                    this.STARTDATEField = value;
                    this.RaisePropertyChanged("STARTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityAction", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public enum EntityAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modify = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditPass = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditFail = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditSubmit = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditRollBack = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BussinessTripBudget", Namespace="http://schemas.datacontract.org/2004/07/SMT.WP.Model")]
    public partial class BussinessTripBudget : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NormIDField;
        
        private string NormNameField;
        
        private decimal PaidMoneyField;
        
        private string SubjectCodeField;
        
        private string SubjectIDField;
        
        private string SubjectNameField;
        
        private decimal UseMoneyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NormID {
            get {
                return this.NormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NormIDField, value) != true)) {
                    this.NormIDField = value;
                    this.RaisePropertyChanged("NormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NormName {
            get {
                return this.NormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NormNameField, value) != true)) {
                    this.NormNameField = value;
                    this.RaisePropertyChanged("NormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaidMoney {
            get {
                return this.PaidMoneyField;
            }
            set {
                if ((this.PaidMoneyField.Equals(value) != true)) {
                    this.PaidMoneyField = value;
                    this.RaisePropertyChanged("PaidMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectCode {
            get {
                return this.SubjectCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectCodeField, value) != true)) {
                    this.SubjectCodeField = value;
                    this.RaisePropertyChanged("SubjectCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectIDField, value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectName {
            get {
                return this.SubjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectNameField, value) != true)) {
                    this.SubjectNameField = value;
                    this.RaisePropertyChanged("SubjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UseMoney {
            get {
                return this.UseMoneyField;
            }
            set {
                if ((this.UseMoneyField.Equals(value) != true)) {
                    this.UseMoneyField = value;
                    this.RaisePropertyChanged("UseMoney");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBaseOfArrayOfanyTypeuHEDJ7Dj", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.WpServiceWS.SaveExpression))]
    public partial class ResultBaseOfArrayOfanyTypeuHEDJ7Dj : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExceptionField;
        
        private byte[] InnerResultField;
        
        private bool IsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] InnerResult {
            get {
                return this.InnerResultField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerResultField, value) != true)) {
                    this.InnerResultField = value;
                    this.RaisePropertyChanged("InnerResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChanged {
            get {
                return this.IsChangedField;
            }
            set {
                if ((this.IsChangedField.Equals(value) != true)) {
                    this.IsChangedField = value;
                    this.RaisePropertyChanged("IsChanged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveExpression", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public partial class SaveExpression : SMT.Saas.Tools.WpServiceWS.ResultBaseOfArrayOfanyTypeuHEDJ7Dj {
        
        private SMT.Saas.Tools.WpServiceWS.SaveAction ActionField;
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.WpServiceWS.SaveAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveAction", Namespace="http://schemas.datacontract.org/2004/07/SMT.SaaS.Common")]
    public enum SaveAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Save = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveAndSumbit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WpServiceWS.IApplicationService")]
    public interface IApplicationService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IApplicationService/CallApplicationService")]
        System.IAsyncResult BeginCallApplicationService(string strXml, System.AsyncCallback callback, object asyncState);
        
        void EndCallApplicationService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplicationService/CallWaitAppService", ReplyAction="http://tempuri.org/IApplicationService/CallWaitAppServiceResponse")]
        System.IAsyncResult BeginCallWaitAppService(string strXml, System.AsyncCallback callback, object asyncState);
        
        string EndCallWaitAppService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationServiceChannel : SMT.Saas.Tools.WpServiceWS.IApplicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallWaitAppServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CallWaitAppServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationServiceClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IApplicationService>, SMT.Saas.Tools.WpServiceWS.IApplicationService {
        
        private BeginOperationDelegate onBeginCallApplicationServiceDelegate;
        
        private EndOperationDelegate onEndCallApplicationServiceDelegate;
        
        private System.Threading.SendOrPostCallback onCallApplicationServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCallWaitAppServiceDelegate;
        
        private EndOperationDelegate onEndCallWaitAppServiceDelegate;
        
        private System.Threading.SendOrPostCallback onCallWaitAppServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ApplicationServiceClient() {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CallApplicationServiceCompleted;
        
        public event System.EventHandler<CallWaitAppServiceCompletedEventArgs> CallWaitAppServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IApplicationService.BeginCallApplicationService(string strXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCallApplicationService(strXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.WpServiceWS.IApplicationService.EndCallApplicationService(System.IAsyncResult result) {
            base.Channel.EndCallApplicationService(result);
        }
        
        private System.IAsyncResult OnBeginCallApplicationService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strXml = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IApplicationService)(this)).BeginCallApplicationService(strXml, callback, asyncState);
        }
        
        private object[] OnEndCallApplicationService(System.IAsyncResult result) {
            ((SMT.Saas.Tools.WpServiceWS.IApplicationService)(this)).EndCallApplicationService(result);
            return null;
        }
        
        private void OnCallApplicationServiceCompleted(object state) {
            if ((this.CallApplicationServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CallApplicationServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CallApplicationServiceAsync(string strXml) {
            this.CallApplicationServiceAsync(strXml, null);
        }
        
        public void CallApplicationServiceAsync(string strXml, object userState) {
            if ((this.onBeginCallApplicationServiceDelegate == null)) {
                this.onBeginCallApplicationServiceDelegate = new BeginOperationDelegate(this.OnBeginCallApplicationService);
            }
            if ((this.onEndCallApplicationServiceDelegate == null)) {
                this.onEndCallApplicationServiceDelegate = new EndOperationDelegate(this.OnEndCallApplicationService);
            }
            if ((this.onCallApplicationServiceCompletedDelegate == null)) {
                this.onCallApplicationServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallApplicationServiceCompleted);
            }
            base.InvokeAsync(this.onBeginCallApplicationServiceDelegate, new object[] {
                        strXml}, this.onEndCallApplicationServiceDelegate, this.onCallApplicationServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IApplicationService.BeginCallWaitAppService(string strXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCallWaitAppService(strXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.WpServiceWS.IApplicationService.EndCallWaitAppService(System.IAsyncResult result) {
            return base.Channel.EndCallWaitAppService(result);
        }
        
        private System.IAsyncResult OnBeginCallWaitAppService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strXml = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IApplicationService)(this)).BeginCallWaitAppService(strXml, callback, asyncState);
        }
        
        private object[] OnEndCallWaitAppService(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.WpServiceWS.IApplicationService)(this)).EndCallWaitAppService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCallWaitAppServiceCompleted(object state) {
            if ((this.CallWaitAppServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CallWaitAppServiceCompleted(this, new CallWaitAppServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CallWaitAppServiceAsync(string strXml) {
            this.CallWaitAppServiceAsync(strXml, null);
        }
        
        public void CallWaitAppServiceAsync(string strXml, object userState) {
            if ((this.onBeginCallWaitAppServiceDelegate == null)) {
                this.onBeginCallWaitAppServiceDelegate = new BeginOperationDelegate(this.OnBeginCallWaitAppService);
            }
            if ((this.onEndCallWaitAppServiceDelegate == null)) {
                this.onEndCallWaitAppServiceDelegate = new EndOperationDelegate(this.OnEndCallWaitAppService);
            }
            if ((this.onCallWaitAppServiceCompletedDelegate == null)) {
                this.onCallWaitAppServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallWaitAppServiceCompleted);
            }
            base.InvokeAsync(this.onBeginCallWaitAppServiceDelegate, new object[] {
                        strXml}, this.onEndCallWaitAppServiceDelegate, this.onCallWaitAppServiceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.WpServiceWS.IApplicationService CreateChannel() {
            return new ApplicationServiceClientChannel(this);
        }
        
        private class ApplicationServiceClientChannel : ChannelBase<SMT.Saas.Tools.WpServiceWS.IApplicationService>, SMT.Saas.Tools.WpServiceWS.IApplicationService {
            
            public ApplicationServiceClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IApplicationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCallApplicationService(string strXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strXml;
                System.IAsyncResult _result = base.BeginInvoke("CallApplicationService", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCallApplicationService(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CallApplicationService", _args, result);
            }
            
            public System.IAsyncResult BeginCallWaitAppService(string strXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strXml;
                System.IAsyncResult _result = base.BeginInvoke("CallWaitAppService", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCallWaitAppService(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CallWaitAppService", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WpServiceWS.IEventTriggerProcess")]
    public interface IEventTriggerProcess {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IEventTriggerProcess/EventTriggerProcess")]
        System.IAsyncResult BeginEventTriggerProcess(string param, System.AsyncCallback callback, object asyncState);
        
        void EndEventTriggerProcess(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventTriggerProcessChannel : SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventTriggerProcessClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess>, SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess {
        
        private BeginOperationDelegate onBeginEventTriggerProcessDelegate;
        
        private EndOperationDelegate onEndEventTriggerProcessDelegate;
        
        private System.Threading.SendOrPostCallback onEventTriggerProcessCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EventTriggerProcessClient() {
        }
        
        public EventTriggerProcessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventTriggerProcessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventTriggerProcessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventTriggerProcessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EventTriggerProcessCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess.BeginEventTriggerProcess(string param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEventTriggerProcess(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess.EndEventTriggerProcess(System.IAsyncResult result) {
            base.Channel.EndEventTriggerProcess(result);
        }
        
        private System.IAsyncResult OnBeginEventTriggerProcess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string param = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess)(this)).BeginEventTriggerProcess(param, callback, asyncState);
        }
        
        private object[] OnEndEventTriggerProcess(System.IAsyncResult result) {
            ((SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess)(this)).EndEventTriggerProcess(result);
            return null;
        }
        
        private void OnEventTriggerProcessCompleted(object state) {
            if ((this.EventTriggerProcessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EventTriggerProcessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EventTriggerProcessAsync(string param) {
            this.EventTriggerProcessAsync(param, null);
        }
        
        public void EventTriggerProcessAsync(string param, object userState) {
            if ((this.onBeginEventTriggerProcessDelegate == null)) {
                this.onBeginEventTriggerProcessDelegate = new BeginOperationDelegate(this.OnBeginEventTriggerProcess);
            }
            if ((this.onEndEventTriggerProcessDelegate == null)) {
                this.onEndEventTriggerProcessDelegate = new EndOperationDelegate(this.OnEndEventTriggerProcess);
            }
            if ((this.onEventTriggerProcessCompletedDelegate == null)) {
                this.onEventTriggerProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEventTriggerProcessCompleted);
            }
            base.InvokeAsync(this.onBeginEventTriggerProcessDelegate, new object[] {
                        param}, this.onEndEventTriggerProcessDelegate, this.onEventTriggerProcessCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess CreateChannel() {
            return new EventTriggerProcessClientChannel(this);
        }
        
        private class EventTriggerProcessClientChannel : ChannelBase<SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess>, SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess {
            
            public EventTriggerProcessClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IEventTriggerProcess> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginEventTriggerProcess(string param, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = param;
                System.IAsyncResult _result = base.BeginInvoke("EventTriggerProcess", _args, callback, asyncState);
                return _result;
            }
            
            public void EndEventTriggerProcess(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("EventTriggerProcess", _args, result);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WpServiceWS.IWPServices")]
    public interface IWPServices {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/Execute", ReplyAction="http://tempuri.org/IWPServices/ExecuteResponse")]
        System.IAsyncResult BeginExecute(SMT.Saas.Tools.WpServiceWS.BaseObject baseObject, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.WpServiceWS.ResultObject EndExecute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/UpdateCheckState", ReplyAction="http://tempuri.org/IWPServices/UpdateCheckStateResponse")]
        System.IAsyncResult BeginUpdateCheckState(string EntityType, string EntityKey, string EntityId, int CheckStates, string strXmlParams, ref string strOutMsg, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateCheckState(ref string strOutMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/Query", ReplyAction="http://tempuri.org/IWPServices/QueryResponse")]
        System.IAsyncResult BeginQuery(SMT.Saas.Tools.WpServiceWS.QueryExpression expression, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.WpServiceWS.QueryResult EndQuery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/Save", ReplyAction="http://tempuri.org/IWPServices/SaveResponse")]
        System.IAsyncResult BeginSave(SMT.Saas.Tools.WpServiceWS.SaveExpression expression, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.WpServiceWS.SaveResult EndSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/ListSubject", ReplyAction="http://tempuri.org/IWPServices/ListSubjectResponse")]
        System.IAsyncResult BeginListSubject(string strID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> EndListSubject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/ListSubjects", ReplyAction="http://tempuri.org/IWPServices/ListSubjectsResponse")]
        System.IAsyncResult BeginListSubjects(string strID, bool IsNew, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> EndListSubjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetQuery", ReplyAction="http://tempuri.org/IWPServices/GetQueryResponse")]
        System.IAsyncResult BeginGetQuery(string sql, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> EndGetQuery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetLastQuery", ReplyAction="http://tempuri.org/IWPServices/GetLastQueryResponse")]
        System.IAsyncResult BeginGetLastQuery(string sql, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> EndGetLastQuery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/RegisterTask", ReplyAction="http://tempuri.org/IWPServices/RegisterTaskResponse")]
        System.IAsyncResult BeginRegisterTask(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterTask(ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/ChangeStatus", ReplyAction="http://tempuri.org/IWPServices/ChangeStatusResponse")]
        System.IAsyncResult BeginChangeStatus(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, SMT.Saas.Tools.WpServiceWS.TaskStatus status, ref string strErrorMsg, ref string strCode, System.AsyncCallback callback, object asyncState);
        
        bool EndChangeStatus(ref string strErrorMsg, ref string strCode, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummary", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryResponse")]
        System.IAsyncResult BeginGetPostEmpSummary(string pempId, string token, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY EndGetPostEmpSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryByFormId", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryByFormIdResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryByFormId(string id, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY EndGetPostEmpSummaryByFormId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryPlan", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryPlan(string pempId, string token, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> EndGetPostEmpSummaryPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanDetial", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanDetialResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryPlanDetial(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> EndGetPostEmpSummaryPlanDetial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanFix", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanFixResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryPlanFix(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> EndGetPostEmpSummaryPlanFix(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanIncome", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryPlanIncomeResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryPlanIncome(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> EndGetPostEmpSummaryPlanIncome(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryExec", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryExecResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryExec(string pempId, string token, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> EndGetPostEmpSummaryExec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryExecDetial", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryExecDetialResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryExecDetial(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> EndGetPostEmpSummaryExecDetial(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryExecFix", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryExecFixResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryExecFix(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> EndGetPostEmpSummaryExecFix(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetPostEmpSummaryExecIncome", ReplyAction="http://tempuri.org/IWPServices/GetPostEmpSummaryExecIncomeResponse")]
        System.IAsyncResult BeginGetPostEmpSummaryExecIncome(string pempId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> EndGetPostEmpSummaryExecIncome(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/ConvertEntityToXml", ReplyAction="http://tempuri.org/IWPServices/ConvertEntityToXmlResponse")]
        System.IAsyncResult BeginConvertEntityToXml(string pempId, int type, System.AsyncCallback callback, object asyncState);
        
        string EndConvertEntityToXml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/AddPostEmpSummaryPlanRecord", ReplyAction="http://tempuri.org/IWPServices/AddPostEmpSummaryPlanRecordResponse")]
        System.IAsyncResult BeginAddPostEmpSummaryPlanRecord(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary, int type, string token, System.AsyncCallback callback, object asyncState);
        
        bool EndAddPostEmpSummaryPlanRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetViewTasks", ReplyAction="http://tempuri.org/IWPServices/GetViewTasksResponse")]
        System.IAsyncResult BeginGetViewTasks(string orgType, string orgId, string dateRange, string taskStatus, string token, string taskName, string taskType, int row, int page, string orgPostId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> EndGetViewTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/AddEmployeePlan", ReplyAction="http://tempuri.org/IWPServices/AddEmployeePlanResponse")]
        System.IAsyncResult BeginAddEmployeePlan(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState);
        
        void EndAddEmployeePlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/DeleteEmployeePlanTimingTrigger", ReplyAction="http://tempuri.org/IWPServices/DeleteEmployeePlanTimingTriggerResponse")]
        System.IAsyncResult BeginDeleteEmployeePlanTimingTrigger(string employeeId, string postid, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteEmployeePlanTimingTrigger(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/EmployeeCanPostChange", ReplyAction="http://tempuri.org/IWPServices/EmployeeCanPostChangeResponse")]
        System.IAsyncResult BeginEmployeeCanPostChange(string employeeId, string postId, System.AsyncCallback callback, object asyncState);
        
        bool EndEmployeeCanPostChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/EmployeePostChangeAuditPass", ReplyAction="http://tempuri.org/IWPServices/EmployeePostChangeAuditPassResponse")]
        System.IAsyncResult BeginEmployeePostChangeAuditPass(string fromPostId, SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState);
        
        void EndEmployeePostChangeAuditPass(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/FunsAllocated", ReplyAction="http://tempuri.org/IWPServices/FunsAllocatedResponse")]
        System.IAsyncResult BeginFunsAllocated(string formid, string companyid, bool isSubmit, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns, System.AsyncCallback callback, object asyncState);
        
        bool EndFunsAllocated(out string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/FunsPaied", ReplyAction="http://tempuri.org/IWPServices/FunsPaiedResponse")]
        System.IAsyncResult BeginFunsPaied(SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs, bool isSubmit, System.AsyncCallback callback, object asyncState);
        
        bool EndFunsPaied(out string strMsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/GetTripSubject", ReplyAction="http://tempuri.org/IWPServices/GetTripSubjectResponse")]
        System.IAsyncResult BeginGetTripSubject(string strBussinessTripID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> EndGetTripSubject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/TripSubjectPaid", ReplyAction="http://tempuri.org/IWPServices/TripSubjectPaidResponse")]
        System.IAsyncResult BeginTripSubjectPaid(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState);
        
        bool EndTripSubjectPaid(ref string msg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWPServices/TripSubjectSave", ReplyAction="http://tempuri.org/IWPServices/TripSubjectSaveResponse")]
        System.IAsyncResult BeginTripSubjectSave(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState);
        
        bool EndTripSubjectSave(ref string msg, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWPServicesChannel : SMT.Saas.Tools.WpServiceWS.IWPServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.WpServiceWS.ResultObject Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.WpServiceWS.ResultObject)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCheckStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCheckStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strOutMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.WpServiceWS.QueryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.WpServiceWS.QueryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.WpServiceWS.SaveResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.WpServiceWS.SaveResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListSubjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSubjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strErrorMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string strLoanCode {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strApplyCode {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strErrorMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string strCode {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryByFormIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryByFormIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryPlanDetialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryPlanDetialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryPlanFixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryPlanFixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryPlanIncomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryPlanIncomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryExecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryExecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryExecDetialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryExecDetialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryExecFixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryExecFixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostEmpSummaryExecIncomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostEmpSummaryExecIncomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConvertEntityToXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConvertEntityToXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddPostEmpSummaryPlanRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddPostEmpSummaryPlanRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetViewTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetViewTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeCanPostChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmployeeCanPostChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunsAllocatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FunsAllocatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunsPaiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FunsPaiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTripSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTripSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TripSubjectPaidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TripSubjectPaidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string msg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TripSubjectSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TripSubjectSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string msg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WPServicesClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IWPServices>, SMT.Saas.Tools.WpServiceWS.IWPServices {
        
        private BeginOperationDelegate onBeginExecuteDelegate;
        
        private EndOperationDelegate onEndExecuteDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCheckStateDelegate;
        
        private EndOperationDelegate onEndUpdateCheckStateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCheckStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryDelegate;
        
        private EndOperationDelegate onEndQueryDelegate;
        
        private System.Threading.SendOrPostCallback onQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDelegate;
        
        private EndOperationDelegate onEndSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSubjectDelegate;
        
        private EndOperationDelegate onEndListSubjectDelegate;
        
        private System.Threading.SendOrPostCallback onListSubjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSubjectsDelegate;
        
        private EndOperationDelegate onEndListSubjectsDelegate;
        
        private System.Threading.SendOrPostCallback onListSubjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQueryDelegate;
        
        private EndOperationDelegate onEndGetQueryDelegate;
        
        private System.Threading.SendOrPostCallback onGetQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastQueryDelegate;
        
        private EndOperationDelegate onEndGetLastQueryDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterTaskDelegate;
        
        private EndOperationDelegate onEndRegisterTaskDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeStatusDelegate;
        
        private EndOperationDelegate onEndChangeStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryByFormIdDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryByFormIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryByFormIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryPlanDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryPlanDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryPlanDetialDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryPlanDetialDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryPlanDetialCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryPlanFixDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryPlanFixDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryPlanFixCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryPlanIncomeDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryPlanIncomeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryPlanIncomeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryExecDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryExecDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryExecCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryExecDetialDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryExecDetialDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryExecDetialCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryExecFixDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryExecFixDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryExecFixCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostEmpSummaryExecIncomeDelegate;
        
        private EndOperationDelegate onEndGetPostEmpSummaryExecIncomeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostEmpSummaryExecIncomeCompletedDelegate;
        
        private BeginOperationDelegate onBeginConvertEntityToXmlDelegate;
        
        private EndOperationDelegate onEndConvertEntityToXmlDelegate;
        
        private System.Threading.SendOrPostCallback onConvertEntityToXmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPostEmpSummaryPlanRecordDelegate;
        
        private EndOperationDelegate onEndAddPostEmpSummaryPlanRecordDelegate;
        
        private System.Threading.SendOrPostCallback onAddPostEmpSummaryPlanRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetViewTasksDelegate;
        
        private EndOperationDelegate onEndGetViewTasksDelegate;
        
        private System.Threading.SendOrPostCallback onGetViewTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmployeePlanDelegate;
        
        private EndOperationDelegate onEndAddEmployeePlanDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmployeePlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeePlanTimingTriggerDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeePlanTimingTriggerDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeePlanTimingTriggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmployeeCanPostChangeDelegate;
        
        private EndOperationDelegate onEndEmployeeCanPostChangeDelegate;
        
        private System.Threading.SendOrPostCallback onEmployeeCanPostChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmployeePostChangeAuditPassDelegate;
        
        private EndOperationDelegate onEndEmployeePostChangeAuditPassDelegate;
        
        private System.Threading.SendOrPostCallback onEmployeePostChangeAuditPassCompletedDelegate;
        
        private BeginOperationDelegate onBeginFunsAllocatedDelegate;
        
        private EndOperationDelegate onEndFunsAllocatedDelegate;
        
        private System.Threading.SendOrPostCallback onFunsAllocatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginFunsPaiedDelegate;
        
        private EndOperationDelegate onEndFunsPaiedDelegate;
        
        private System.Threading.SendOrPostCallback onFunsPaiedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTripSubjectDelegate;
        
        private EndOperationDelegate onEndGetTripSubjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetTripSubjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginTripSubjectPaidDelegate;
        
        private EndOperationDelegate onEndTripSubjectPaidDelegate;
        
        private System.Threading.SendOrPostCallback onTripSubjectPaidCompletedDelegate;
        
        private BeginOperationDelegate onBeginTripSubjectSaveDelegate;
        
        private EndOperationDelegate onEndTripSubjectSaveDelegate;
        
        private System.Threading.SendOrPostCallback onTripSubjectSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WPServicesClient() {
        }
        
        public WPServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WPServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WPServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WPServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<ExecuteCompletedEventArgs> ExecuteCompleted;
        
        public event System.EventHandler<UpdateCheckStateCompletedEventArgs> UpdateCheckStateCompleted;
        
        public event System.EventHandler<QueryCompletedEventArgs> QueryCompleted;
        
        public event System.EventHandler<SaveCompletedEventArgs> SaveCompleted;
        
        public event System.EventHandler<ListSubjectCompletedEventArgs> ListSubjectCompleted;
        
        public event System.EventHandler<ListSubjectsCompletedEventArgs> ListSubjectsCompleted;
        
        public event System.EventHandler<GetQueryCompletedEventArgs> GetQueryCompleted;
        
        public event System.EventHandler<GetLastQueryCompletedEventArgs> GetLastQueryCompleted;
        
        public event System.EventHandler<RegisterTaskCompletedEventArgs> RegisterTaskCompleted;
        
        public event System.EventHandler<ChangeStatusCompletedEventArgs> ChangeStatusCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryCompletedEventArgs> GetPostEmpSummaryCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryByFormIdCompletedEventArgs> GetPostEmpSummaryByFormIdCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryPlanCompletedEventArgs> GetPostEmpSummaryPlanCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryPlanDetialCompletedEventArgs> GetPostEmpSummaryPlanDetialCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryPlanFixCompletedEventArgs> GetPostEmpSummaryPlanFixCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryPlanIncomeCompletedEventArgs> GetPostEmpSummaryPlanIncomeCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryExecCompletedEventArgs> GetPostEmpSummaryExecCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryExecDetialCompletedEventArgs> GetPostEmpSummaryExecDetialCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryExecFixCompletedEventArgs> GetPostEmpSummaryExecFixCompleted;
        
        public event System.EventHandler<GetPostEmpSummaryExecIncomeCompletedEventArgs> GetPostEmpSummaryExecIncomeCompleted;
        
        public event System.EventHandler<ConvertEntityToXmlCompletedEventArgs> ConvertEntityToXmlCompleted;
        
        public event System.EventHandler<AddPostEmpSummaryPlanRecordCompletedEventArgs> AddPostEmpSummaryPlanRecordCompleted;
        
        public event System.EventHandler<GetViewTasksCompletedEventArgs> GetViewTasksCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddEmployeePlanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEmployeePlanTimingTriggerCompleted;
        
        public event System.EventHandler<EmployeeCanPostChangeCompletedEventArgs> EmployeeCanPostChangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EmployeePostChangeAuditPassCompleted;
        
        public event System.EventHandler<FunsAllocatedCompletedEventArgs> FunsAllocatedCompleted;
        
        public event System.EventHandler<FunsPaiedCompletedEventArgs> FunsPaiedCompleted;
        
        public event System.EventHandler<GetTripSubjectCompletedEventArgs> GetTripSubjectCompleted;
        
        public event System.EventHandler<TripSubjectPaidCompletedEventArgs> TripSubjectPaidCompleted;
        
        public event System.EventHandler<TripSubjectSaveCompletedEventArgs> TripSubjectSaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginExecute(SMT.Saas.Tools.WpServiceWS.BaseObject baseObject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecute(baseObject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.WpServiceWS.ResultObject SMT.Saas.Tools.WpServiceWS.IWPServices.EndExecute(System.IAsyncResult result) {
            return base.Channel.EndExecute(result);
        }
        
        private System.IAsyncResult OnBeginExecute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.BaseObject baseObject = ((SMT.Saas.Tools.WpServiceWS.BaseObject)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginExecute(baseObject, callback, asyncState);
        }
        
        private object[] OnEndExecute(System.IAsyncResult result) {
            SMT.Saas.Tools.WpServiceWS.ResultObject retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndExecute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteCompleted(object state) {
            if ((this.ExecuteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteAsync(SMT.Saas.Tools.WpServiceWS.BaseObject baseObject) {
            this.ExecuteAsync(baseObject, null);
        }
        
        public void ExecuteAsync(SMT.Saas.Tools.WpServiceWS.BaseObject baseObject, object userState) {
            if ((this.onBeginExecuteDelegate == null)) {
                this.onBeginExecuteDelegate = new BeginOperationDelegate(this.OnBeginExecute);
            }
            if ((this.onEndExecuteDelegate == null)) {
                this.onEndExecuteDelegate = new EndOperationDelegate(this.OnEndExecute);
            }
            if ((this.onExecuteCompletedDelegate == null)) {
                this.onExecuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteDelegate, new object[] {
                        baseObject}, this.onEndExecuteDelegate, this.onExecuteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginUpdateCheckState(string EntityType, string EntityKey, string EntityId, int CheckStates, string strXmlParams, ref string strOutMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCheckState(EntityType, EntityKey, EntityId, CheckStates, strXmlParams, ref strOutMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SMT.Saas.Tools.WpServiceWS.IWPServices.EndUpdateCheckState(ref string strOutMsg, System.IAsyncResult result) {
            return base.Channel.EndUpdateCheckState(ref strOutMsg, result);
        }
        
        private System.IAsyncResult OnBeginUpdateCheckState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EntityType = ((string)(inValues[0]));
            string EntityKey = ((string)(inValues[1]));
            string EntityId = ((string)(inValues[2]));
            int CheckStates = ((int)(inValues[3]));
            string strXmlParams = ((string)(inValues[4]));
            string strOutMsg = ((string)(inValues[5]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginUpdateCheckState(EntityType, EntityKey, EntityId, CheckStates, strXmlParams, ref strOutMsg, callback, asyncState);
        }
        
        private object[] OnEndUpdateCheckState(System.IAsyncResult result) {
            string strOutMsg = this.GetDefaultValueForInitialization<string>();
            int retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndUpdateCheckState(ref strOutMsg, result);
            return new object[] {
                    strOutMsg,
                    retVal};
        }
        
        private void OnUpdateCheckStateCompleted(object state) {
            if ((this.UpdateCheckStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCheckStateCompleted(this, new UpdateCheckStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCheckStateAsync(string EntityType, string EntityKey, string EntityId, int CheckStates, string strXmlParams, string strOutMsg) {
            this.UpdateCheckStateAsync(EntityType, EntityKey, EntityId, CheckStates, strXmlParams, strOutMsg, null);
        }
        
        public void UpdateCheckStateAsync(string EntityType, string EntityKey, string EntityId, int CheckStates, string strXmlParams, string strOutMsg, object userState) {
            if ((this.onBeginUpdateCheckStateDelegate == null)) {
                this.onBeginUpdateCheckStateDelegate = new BeginOperationDelegate(this.OnBeginUpdateCheckState);
            }
            if ((this.onEndUpdateCheckStateDelegate == null)) {
                this.onEndUpdateCheckStateDelegate = new EndOperationDelegate(this.OnEndUpdateCheckState);
            }
            if ((this.onUpdateCheckStateCompletedDelegate == null)) {
                this.onUpdateCheckStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCheckStateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCheckStateDelegate, new object[] {
                        EntityType,
                        EntityKey,
                        EntityId,
                        CheckStates,
                        strXmlParams,
                        strOutMsg}, this.onEndUpdateCheckStateDelegate, this.onUpdateCheckStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginQuery(SMT.Saas.Tools.WpServiceWS.QueryExpression expression, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQuery(expression, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.WpServiceWS.QueryResult SMT.Saas.Tools.WpServiceWS.IWPServices.EndQuery(System.IAsyncResult result) {
            return base.Channel.EndQuery(result);
        }
        
        private System.IAsyncResult OnBeginQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.QueryExpression expression = ((SMT.Saas.Tools.WpServiceWS.QueryExpression)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginQuery(expression, callback, asyncState);
        }
        
        private object[] OnEndQuery(System.IAsyncResult result) {
            SMT.Saas.Tools.WpServiceWS.QueryResult retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndQuery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryCompleted(object state) {
            if ((this.QueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryCompleted(this, new QueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryAsync(SMT.Saas.Tools.WpServiceWS.QueryExpression expression) {
            this.QueryAsync(expression, null);
        }
        
        public void QueryAsync(SMT.Saas.Tools.WpServiceWS.QueryExpression expression, object userState) {
            if ((this.onBeginQueryDelegate == null)) {
                this.onBeginQueryDelegate = new BeginOperationDelegate(this.OnBeginQuery);
            }
            if ((this.onEndQueryDelegate == null)) {
                this.onEndQueryDelegate = new EndOperationDelegate(this.OnEndQuery);
            }
            if ((this.onQueryCompletedDelegate == null)) {
                this.onQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryCompleted);
            }
            base.InvokeAsync(this.onBeginQueryDelegate, new object[] {
                        expression}, this.onEndQueryDelegate, this.onQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginSave(SMT.Saas.Tools.WpServiceWS.SaveExpression expression, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSave(expression, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.WpServiceWS.SaveResult SMT.Saas.Tools.WpServiceWS.IWPServices.EndSave(System.IAsyncResult result) {
            return base.Channel.EndSave(result);
        }
        
        private System.IAsyncResult OnBeginSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.SaveExpression expression = ((SMT.Saas.Tools.WpServiceWS.SaveExpression)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginSave(expression, callback, asyncState);
        }
        
        private object[] OnEndSave(System.IAsyncResult result) {
            SMT.Saas.Tools.WpServiceWS.SaveResult retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCompleted(object state) {
            if ((this.SaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompleted(this, new SaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAsync(SMT.Saas.Tools.WpServiceWS.SaveExpression expression) {
            this.SaveAsync(expression, null);
        }
        
        public void SaveAsync(SMT.Saas.Tools.WpServiceWS.SaveExpression expression, object userState) {
            if ((this.onBeginSaveDelegate == null)) {
                this.onBeginSaveDelegate = new BeginOperationDelegate(this.OnBeginSave);
            }
            if ((this.onEndSaveDelegate == null)) {
                this.onEndSaveDelegate = new EndOperationDelegate(this.OnEndSave);
            }
            if ((this.onSaveCompletedDelegate == null)) {
                this.onSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDelegate, new object[] {
                        expression}, this.onEndSaveDelegate, this.onSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginListSubject(string strID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSubject(strID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> SMT.Saas.Tools.WpServiceWS.IWPServices.EndListSubject(System.IAsyncResult result) {
            return base.Channel.EndListSubject(result);
        }
        
        private System.IAsyncResult OnBeginListSubject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginListSubject(strID, callback, asyncState);
        }
        
        private object[] OnEndListSubject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndListSubject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSubjectCompleted(object state) {
            if ((this.ListSubjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSubjectCompleted(this, new ListSubjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSubjectAsync(string strID) {
            this.ListSubjectAsync(strID, null);
        }
        
        public void ListSubjectAsync(string strID, object userState) {
            if ((this.onBeginListSubjectDelegate == null)) {
                this.onBeginListSubjectDelegate = new BeginOperationDelegate(this.OnBeginListSubject);
            }
            if ((this.onEndListSubjectDelegate == null)) {
                this.onEndListSubjectDelegate = new EndOperationDelegate(this.OnEndListSubject);
            }
            if ((this.onListSubjectCompletedDelegate == null)) {
                this.onListSubjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSubjectCompleted);
            }
            base.InvokeAsync(this.onBeginListSubjectDelegate, new object[] {
                        strID}, this.onEndListSubjectDelegate, this.onListSubjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginListSubjects(string strID, bool IsNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSubjects(strID, IsNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> SMT.Saas.Tools.WpServiceWS.IWPServices.EndListSubjects(System.IAsyncResult result) {
            return base.Channel.EndListSubjects(result);
        }
        
        private System.IAsyncResult OnBeginListSubjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strID = ((string)(inValues[0]));
            bool IsNew = ((bool)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginListSubjects(strID, IsNew, callback, asyncState);
        }
        
        private object[] OnEndListSubjects(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndListSubjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSubjectsCompleted(object state) {
            if ((this.ListSubjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSubjectsCompleted(this, new ListSubjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSubjectsAsync(string strID, bool IsNew) {
            this.ListSubjectsAsync(strID, IsNew, null);
        }
        
        public void ListSubjectsAsync(string strID, bool IsNew, object userState) {
            if ((this.onBeginListSubjectsDelegate == null)) {
                this.onBeginListSubjectsDelegate = new BeginOperationDelegate(this.OnBeginListSubjects);
            }
            if ((this.onEndListSubjectsDelegate == null)) {
                this.onEndListSubjectsDelegate = new EndOperationDelegate(this.OnEndListSubjects);
            }
            if ((this.onListSubjectsCompletedDelegate == null)) {
                this.onListSubjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSubjectsCompleted);
            }
            base.InvokeAsync(this.onBeginListSubjectsDelegate, new object[] {
                        strID,
                        IsNew}, this.onEndListSubjectsDelegate, this.onListSubjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetQuery(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuery(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetQuery(System.IAsyncResult result) {
            return base.Channel.EndGetQuery(result);
        }
        
        private System.IAsyncResult OnBeginGetQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetQuery(sql, callback, asyncState);
        }
        
        private object[] OnEndGetQuery(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetQuery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQueryCompleted(object state) {
            if ((this.GetQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQueryCompleted(this, new GetQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQueryAsync(string sql) {
            this.GetQueryAsync(sql, null);
        }
        
        public void GetQueryAsync(string sql, object userState) {
            if ((this.onBeginGetQueryDelegate == null)) {
                this.onBeginGetQueryDelegate = new BeginOperationDelegate(this.OnBeginGetQuery);
            }
            if ((this.onEndGetQueryDelegate == null)) {
                this.onEndGetQueryDelegate = new EndOperationDelegate(this.OnEndGetQuery);
            }
            if ((this.onGetQueryCompletedDelegate == null)) {
                this.onGetQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQueryCompleted);
            }
            base.InvokeAsync(this.onBeginGetQueryDelegate, new object[] {
                        sql}, this.onEndGetQueryDelegate, this.onGetQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetLastQuery(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastQuery(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetLastQuery(System.IAsyncResult result) {
            return base.Channel.EndGetLastQuery(result);
        }
        
        private System.IAsyncResult OnBeginGetLastQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetLastQuery(sql, callback, asyncState);
        }
        
        private object[] OnEndGetLastQuery(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetLastQuery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastQueryCompleted(object state) {
            if ((this.GetLastQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastQueryCompleted(this, new GetLastQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastQueryAsync(string sql) {
            this.GetLastQueryAsync(sql, null);
        }
        
        public void GetLastQueryAsync(string sql, object userState) {
            if ((this.onBeginGetLastQueryDelegate == null)) {
                this.onBeginGetLastQueryDelegate = new BeginOperationDelegate(this.OnBeginGetLastQuery);
            }
            if ((this.onEndGetLastQueryDelegate == null)) {
                this.onEndGetLastQueryDelegate = new EndOperationDelegate(this.OnEndGetLastQuery);
            }
            if ((this.onGetLastQueryCompletedDelegate == null)) {
                this.onGetLastQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastQueryCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastQueryDelegate, new object[] {
                        sql}, this.onEndGetLastQueryDelegate, this.onGetLastQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginRegisterTask(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterTask(reim, ref strErrorMsg, ref strLoanCode, ref strApplyCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndRegisterTask(ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.IAsyncResult result) {
            return base.Channel.EndRegisterTask(ref strErrorMsg, ref strLoanCode, ref strApplyCode, result);
        }
        
        private System.IAsyncResult OnBeginRegisterTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim = ((SMT.Saas.Tools.WpServiceWS.ReimbursementEntity)(inValues[0]));
            string strErrorMsg = ((string)(inValues[1]));
            string strLoanCode = ((string)(inValues[2]));
            string strApplyCode = ((string)(inValues[3]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginRegisterTask(reim, ref strErrorMsg, ref strLoanCode, ref strApplyCode, callback, asyncState);
        }
        
        private object[] OnEndRegisterTask(System.IAsyncResult result) {
            string strErrorMsg = this.GetDefaultValueForInitialization<string>();
            string strLoanCode = this.GetDefaultValueForInitialization<string>();
            string strApplyCode = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndRegisterTask(ref strErrorMsg, ref strLoanCode, ref strApplyCode, result);
            return new object[] {
                    strErrorMsg,
                    strLoanCode,
                    strApplyCode,
                    retVal};
        }
        
        private void OnRegisterTaskCompleted(object state) {
            if ((this.RegisterTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterTaskCompleted(this, new RegisterTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterTaskAsync(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, string strErrorMsg, string strLoanCode, string strApplyCode) {
            this.RegisterTaskAsync(reim, strErrorMsg, strLoanCode, strApplyCode, null);
        }
        
        public void RegisterTaskAsync(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, string strErrorMsg, string strLoanCode, string strApplyCode, object userState) {
            if ((this.onBeginRegisterTaskDelegate == null)) {
                this.onBeginRegisterTaskDelegate = new BeginOperationDelegate(this.OnBeginRegisterTask);
            }
            if ((this.onEndRegisterTaskDelegate == null)) {
                this.onEndRegisterTaskDelegate = new EndOperationDelegate(this.OnEndRegisterTask);
            }
            if ((this.onRegisterTaskCompletedDelegate == null)) {
                this.onRegisterTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterTaskCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterTaskDelegate, new object[] {
                        reim,
                        strErrorMsg,
                        strLoanCode,
                        strApplyCode}, this.onEndRegisterTaskDelegate, this.onRegisterTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginChangeStatus(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, SMT.Saas.Tools.WpServiceWS.TaskStatus status, ref string strErrorMsg, ref string strCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeStatus(reim, status, ref strErrorMsg, ref strCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndChangeStatus(ref string strErrorMsg, ref string strCode, System.IAsyncResult result) {
            return base.Channel.EndChangeStatus(ref strErrorMsg, ref strCode, result);
        }
        
        private System.IAsyncResult OnBeginChangeStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim = ((SMT.Saas.Tools.WpServiceWS.ReimbursementEntity)(inValues[0]));
            SMT.Saas.Tools.WpServiceWS.TaskStatus status = ((SMT.Saas.Tools.WpServiceWS.TaskStatus)(inValues[1]));
            string strErrorMsg = ((string)(inValues[2]));
            string strCode = ((string)(inValues[3]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginChangeStatus(reim, status, ref strErrorMsg, ref strCode, callback, asyncState);
        }
        
        private object[] OnEndChangeStatus(System.IAsyncResult result) {
            string strErrorMsg = this.GetDefaultValueForInitialization<string>();
            string strCode = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndChangeStatus(ref strErrorMsg, ref strCode, result);
            return new object[] {
                    strErrorMsg,
                    strCode,
                    retVal};
        }
        
        private void OnChangeStatusCompleted(object state) {
            if ((this.ChangeStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeStatusCompleted(this, new ChangeStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeStatusAsync(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, SMT.Saas.Tools.WpServiceWS.TaskStatus status, string strErrorMsg, string strCode) {
            this.ChangeStatusAsync(reim, status, strErrorMsg, strCode, null);
        }
        
        public void ChangeStatusAsync(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, SMT.Saas.Tools.WpServiceWS.TaskStatus status, string strErrorMsg, string strCode, object userState) {
            if ((this.onBeginChangeStatusDelegate == null)) {
                this.onBeginChangeStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeStatus);
            }
            if ((this.onEndChangeStatusDelegate == null)) {
                this.onEndChangeStatusDelegate = new EndOperationDelegate(this.OnEndChangeStatus);
            }
            if ((this.onChangeStatusCompletedDelegate == null)) {
                this.onChangeStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeStatusDelegate, new object[] {
                        reim,
                        status,
                        strErrorMsg,
                        strCode}, this.onEndChangeStatusDelegate, this.onChangeStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummary(string pempId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummary(pempId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummary(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummary(pempId, token, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummary(System.IAsyncResult result) {
            SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryCompleted(object state) {
            if ((this.GetPostEmpSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryCompleted(this, new GetPostEmpSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryAsync(string pempId, string token) {
            this.GetPostEmpSummaryAsync(pempId, token, null);
        }
        
        public void GetPostEmpSummaryAsync(string pempId, string token, object userState) {
            if ((this.onBeginGetPostEmpSummaryDelegate == null)) {
                this.onBeginGetPostEmpSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummary);
            }
            if ((this.onEndGetPostEmpSummaryDelegate == null)) {
                this.onEndGetPostEmpSummaryDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummary);
            }
            if ((this.onGetPostEmpSummaryCompletedDelegate == null)) {
                this.onGetPostEmpSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryDelegate, new object[] {
                        pempId,
                        token}, this.onEndGetPostEmpSummaryDelegate, this.onGetPostEmpSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryByFormId(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryByFormId(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryByFormId(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryByFormId(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryByFormId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryByFormId(id, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryByFormId(System.IAsyncResult result) {
            SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryByFormId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryByFormIdCompleted(object state) {
            if ((this.GetPostEmpSummaryByFormIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryByFormIdCompleted(this, new GetPostEmpSummaryByFormIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryByFormIdAsync(string id) {
            this.GetPostEmpSummaryByFormIdAsync(id, null);
        }
        
        public void GetPostEmpSummaryByFormIdAsync(string id, object userState) {
            if ((this.onBeginGetPostEmpSummaryByFormIdDelegate == null)) {
                this.onBeginGetPostEmpSummaryByFormIdDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryByFormId);
            }
            if ((this.onEndGetPostEmpSummaryByFormIdDelegate == null)) {
                this.onEndGetPostEmpSummaryByFormIdDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryByFormId);
            }
            if ((this.onGetPostEmpSummaryByFormIdCompletedDelegate == null)) {
                this.onGetPostEmpSummaryByFormIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryByFormIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryByFormIdDelegate, new object[] {
                        id}, this.onEndGetPostEmpSummaryByFormIdDelegate, this.onGetPostEmpSummaryByFormIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryPlan(string pempId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryPlan(pempId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryPlan(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryPlan(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryPlan(pempId, token, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryPlan(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryPlanCompleted(object state) {
            if ((this.GetPostEmpSummaryPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryPlanCompleted(this, new GetPostEmpSummaryPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryPlanAsync(string pempId, string token) {
            this.GetPostEmpSummaryPlanAsync(pempId, token, null);
        }
        
        public void GetPostEmpSummaryPlanAsync(string pempId, string token, object userState) {
            if ((this.onBeginGetPostEmpSummaryPlanDelegate == null)) {
                this.onBeginGetPostEmpSummaryPlanDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryPlan);
            }
            if ((this.onEndGetPostEmpSummaryPlanDelegate == null)) {
                this.onEndGetPostEmpSummaryPlanDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryPlan);
            }
            if ((this.onGetPostEmpSummaryPlanCompletedDelegate == null)) {
                this.onGetPostEmpSummaryPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryPlanCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryPlanDelegate, new object[] {
                        pempId,
                        token}, this.onEndGetPostEmpSummaryPlanDelegate, this.onGetPostEmpSummaryPlanCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryPlanDetial(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryPlanDetial(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryPlanDetial(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryPlanDetial(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryPlanDetial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryPlanDetial(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryPlanDetial(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryPlanDetial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryPlanDetialCompleted(object state) {
            if ((this.GetPostEmpSummaryPlanDetialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryPlanDetialCompleted(this, new GetPostEmpSummaryPlanDetialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryPlanDetialAsync(string pempId) {
            this.GetPostEmpSummaryPlanDetialAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryPlanDetialAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryPlanDetialDelegate == null)) {
                this.onBeginGetPostEmpSummaryPlanDetialDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryPlanDetial);
            }
            if ((this.onEndGetPostEmpSummaryPlanDetialDelegate == null)) {
                this.onEndGetPostEmpSummaryPlanDetialDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryPlanDetial);
            }
            if ((this.onGetPostEmpSummaryPlanDetialCompletedDelegate == null)) {
                this.onGetPostEmpSummaryPlanDetialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryPlanDetialCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryPlanDetialDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryPlanDetialDelegate, this.onGetPostEmpSummaryPlanDetialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryPlanFix(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryPlanFix(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryPlanFix(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryPlanFix(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryPlanFix(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryPlanFix(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryPlanFix(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryPlanFix(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryPlanFixCompleted(object state) {
            if ((this.GetPostEmpSummaryPlanFixCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryPlanFixCompleted(this, new GetPostEmpSummaryPlanFixCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryPlanFixAsync(string pempId) {
            this.GetPostEmpSummaryPlanFixAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryPlanFixAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryPlanFixDelegate == null)) {
                this.onBeginGetPostEmpSummaryPlanFixDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryPlanFix);
            }
            if ((this.onEndGetPostEmpSummaryPlanFixDelegate == null)) {
                this.onEndGetPostEmpSummaryPlanFixDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryPlanFix);
            }
            if ((this.onGetPostEmpSummaryPlanFixCompletedDelegate == null)) {
                this.onGetPostEmpSummaryPlanFixCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryPlanFixCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryPlanFixDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryPlanFixDelegate, this.onGetPostEmpSummaryPlanFixCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryPlanIncome(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryPlanIncome(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryPlanIncome(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryPlanIncome(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryPlanIncome(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryPlanIncome(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryPlanIncome(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryPlanIncome(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryPlanIncomeCompleted(object state) {
            if ((this.GetPostEmpSummaryPlanIncomeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryPlanIncomeCompleted(this, new GetPostEmpSummaryPlanIncomeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryPlanIncomeAsync(string pempId) {
            this.GetPostEmpSummaryPlanIncomeAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryPlanIncomeAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryPlanIncomeDelegate == null)) {
                this.onBeginGetPostEmpSummaryPlanIncomeDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryPlanIncome);
            }
            if ((this.onEndGetPostEmpSummaryPlanIncomeDelegate == null)) {
                this.onEndGetPostEmpSummaryPlanIncomeDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryPlanIncome);
            }
            if ((this.onGetPostEmpSummaryPlanIncomeCompletedDelegate == null)) {
                this.onGetPostEmpSummaryPlanIncomeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryPlanIncomeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryPlanIncomeDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryPlanIncomeDelegate, this.onGetPostEmpSummaryPlanIncomeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryExec(string pempId, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryExec(pempId, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryExec(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryExec(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryExec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            string token = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryExec(pempId, token, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryExec(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryExec(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryExecCompleted(object state) {
            if ((this.GetPostEmpSummaryExecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryExecCompleted(this, new GetPostEmpSummaryExecCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryExecAsync(string pempId, string token) {
            this.GetPostEmpSummaryExecAsync(pempId, token, null);
        }
        
        public void GetPostEmpSummaryExecAsync(string pempId, string token, object userState) {
            if ((this.onBeginGetPostEmpSummaryExecDelegate == null)) {
                this.onBeginGetPostEmpSummaryExecDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryExec);
            }
            if ((this.onEndGetPostEmpSummaryExecDelegate == null)) {
                this.onEndGetPostEmpSummaryExecDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryExec);
            }
            if ((this.onGetPostEmpSummaryExecCompletedDelegate == null)) {
                this.onGetPostEmpSummaryExecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryExecCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryExecDelegate, new object[] {
                        pempId,
                        token}, this.onEndGetPostEmpSummaryExecDelegate, this.onGetPostEmpSummaryExecCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryExecDetial(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryExecDetial(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryExecDetial(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryExecDetial(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryExecDetial(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryExecDetial(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryExecDetial(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryExecDetial(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryExecDetialCompleted(object state) {
            if ((this.GetPostEmpSummaryExecDetialCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryExecDetialCompleted(this, new GetPostEmpSummaryExecDetialCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryExecDetialAsync(string pempId) {
            this.GetPostEmpSummaryExecDetialAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryExecDetialAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryExecDetialDelegate == null)) {
                this.onBeginGetPostEmpSummaryExecDetialDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryExecDetial);
            }
            if ((this.onEndGetPostEmpSummaryExecDetialDelegate == null)) {
                this.onEndGetPostEmpSummaryExecDetialDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryExecDetial);
            }
            if ((this.onGetPostEmpSummaryExecDetialCompletedDelegate == null)) {
                this.onGetPostEmpSummaryExecDetialCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryExecDetialCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryExecDetialDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryExecDetialDelegate, this.onGetPostEmpSummaryExecDetialCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryExecFix(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryExecFix(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryExecFix(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryExecFix(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryExecFix(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryExecFix(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryExecFix(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryExecFix(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryExecFixCompleted(object state) {
            if ((this.GetPostEmpSummaryExecFixCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryExecFixCompleted(this, new GetPostEmpSummaryExecFixCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryExecFixAsync(string pempId) {
            this.GetPostEmpSummaryExecFixAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryExecFixAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryExecFixDelegate == null)) {
                this.onBeginGetPostEmpSummaryExecFixDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryExecFix);
            }
            if ((this.onEndGetPostEmpSummaryExecFixDelegate == null)) {
                this.onEndGetPostEmpSummaryExecFixDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryExecFix);
            }
            if ((this.onGetPostEmpSummaryExecFixCompletedDelegate == null)) {
                this.onGetPostEmpSummaryExecFixCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryExecFixCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryExecFixDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryExecFixDelegate, this.onGetPostEmpSummaryExecFixCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetPostEmpSummaryExecIncome(string pempId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPostEmpSummaryExecIncome(pempId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetPostEmpSummaryExecIncome(System.IAsyncResult result) {
            return base.Channel.EndGetPostEmpSummaryExecIncome(result);
        }
        
        private System.IAsyncResult OnBeginGetPostEmpSummaryExecIncome(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetPostEmpSummaryExecIncome(pempId, callback, asyncState);
        }
        
        private object[] OnEndGetPostEmpSummaryExecIncome(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetPostEmpSummaryExecIncome(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostEmpSummaryExecIncomeCompleted(object state) {
            if ((this.GetPostEmpSummaryExecIncomeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostEmpSummaryExecIncomeCompleted(this, new GetPostEmpSummaryExecIncomeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostEmpSummaryExecIncomeAsync(string pempId) {
            this.GetPostEmpSummaryExecIncomeAsync(pempId, null);
        }
        
        public void GetPostEmpSummaryExecIncomeAsync(string pempId, object userState) {
            if ((this.onBeginGetPostEmpSummaryExecIncomeDelegate == null)) {
                this.onBeginGetPostEmpSummaryExecIncomeDelegate = new BeginOperationDelegate(this.OnBeginGetPostEmpSummaryExecIncome);
            }
            if ((this.onEndGetPostEmpSummaryExecIncomeDelegate == null)) {
                this.onEndGetPostEmpSummaryExecIncomeDelegate = new EndOperationDelegate(this.OnEndGetPostEmpSummaryExecIncome);
            }
            if ((this.onGetPostEmpSummaryExecIncomeCompletedDelegate == null)) {
                this.onGetPostEmpSummaryExecIncomeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostEmpSummaryExecIncomeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostEmpSummaryExecIncomeDelegate, new object[] {
                        pempId}, this.onEndGetPostEmpSummaryExecIncomeDelegate, this.onGetPostEmpSummaryExecIncomeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginConvertEntityToXml(string pempId, int type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConvertEntityToXml(pempId, type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SMT.Saas.Tools.WpServiceWS.IWPServices.EndConvertEntityToXml(System.IAsyncResult result) {
            return base.Channel.EndConvertEntityToXml(result);
        }
        
        private System.IAsyncResult OnBeginConvertEntityToXml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pempId = ((string)(inValues[0]));
            int type = ((int)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginConvertEntityToXml(pempId, type, callback, asyncState);
        }
        
        private object[] OnEndConvertEntityToXml(System.IAsyncResult result) {
            string retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndConvertEntityToXml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConvertEntityToXmlCompleted(object state) {
            if ((this.ConvertEntityToXmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConvertEntityToXmlCompleted(this, new ConvertEntityToXmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConvertEntityToXmlAsync(string pempId, int type) {
            this.ConvertEntityToXmlAsync(pempId, type, null);
        }
        
        public void ConvertEntityToXmlAsync(string pempId, int type, object userState) {
            if ((this.onBeginConvertEntityToXmlDelegate == null)) {
                this.onBeginConvertEntityToXmlDelegate = new BeginOperationDelegate(this.OnBeginConvertEntityToXml);
            }
            if ((this.onEndConvertEntityToXmlDelegate == null)) {
                this.onEndConvertEntityToXmlDelegate = new EndOperationDelegate(this.OnEndConvertEntityToXml);
            }
            if ((this.onConvertEntityToXmlCompletedDelegate == null)) {
                this.onConvertEntityToXmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConvertEntityToXmlCompleted);
            }
            base.InvokeAsync(this.onBeginConvertEntityToXmlDelegate, new object[] {
                        pempId,
                        type}, this.onEndConvertEntityToXmlDelegate, this.onConvertEntityToXmlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginAddPostEmpSummaryPlanRecord(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary, int type, string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPostEmpSummaryPlanRecord(postEmpSummary, type, token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndAddPostEmpSummaryPlanRecord(System.IAsyncResult result) {
            return base.Channel.EndAddPostEmpSummaryPlanRecord(result);
        }
        
        private System.IAsyncResult OnBeginAddPostEmpSummaryPlanRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary = ((SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY)(inValues[0]));
            int type = ((int)(inValues[1]));
            string token = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginAddPostEmpSummaryPlanRecord(postEmpSummary, type, token, callback, asyncState);
        }
        
        private object[] OnEndAddPostEmpSummaryPlanRecord(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndAddPostEmpSummaryPlanRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddPostEmpSummaryPlanRecordCompleted(object state) {
            if ((this.AddPostEmpSummaryPlanRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPostEmpSummaryPlanRecordCompleted(this, new AddPostEmpSummaryPlanRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPostEmpSummaryPlanRecordAsync(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary, int type, string token) {
            this.AddPostEmpSummaryPlanRecordAsync(postEmpSummary, type, token, null);
        }
        
        public void AddPostEmpSummaryPlanRecordAsync(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary, int type, string token, object userState) {
            if ((this.onBeginAddPostEmpSummaryPlanRecordDelegate == null)) {
                this.onBeginAddPostEmpSummaryPlanRecordDelegate = new BeginOperationDelegate(this.OnBeginAddPostEmpSummaryPlanRecord);
            }
            if ((this.onEndAddPostEmpSummaryPlanRecordDelegate == null)) {
                this.onEndAddPostEmpSummaryPlanRecordDelegate = new EndOperationDelegate(this.OnEndAddPostEmpSummaryPlanRecord);
            }
            if ((this.onAddPostEmpSummaryPlanRecordCompletedDelegate == null)) {
                this.onAddPostEmpSummaryPlanRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPostEmpSummaryPlanRecordCompleted);
            }
            base.InvokeAsync(this.onBeginAddPostEmpSummaryPlanRecordDelegate, new object[] {
                        postEmpSummary,
                        type,
                        token}, this.onEndAddPostEmpSummaryPlanRecordDelegate, this.onAddPostEmpSummaryPlanRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetViewTasks(string orgType, string orgId, string dateRange, string taskStatus, string token, string taskName, string taskType, int row, int page, string orgPostId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetViewTasks(orgType, orgId, dateRange, taskStatus, token, taskName, taskType, row, page, orgPostId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetViewTasks(System.IAsyncResult result) {
            return base.Channel.EndGetViewTasks(result);
        }
        
        private System.IAsyncResult OnBeginGetViewTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string orgType = ((string)(inValues[0]));
            string orgId = ((string)(inValues[1]));
            string dateRange = ((string)(inValues[2]));
            string taskStatus = ((string)(inValues[3]));
            string token = ((string)(inValues[4]));
            string taskName = ((string)(inValues[5]));
            string taskType = ((string)(inValues[6]));
            int row = ((int)(inValues[7]));
            int page = ((int)(inValues[8]));
            string orgPostId = ((string)(inValues[9]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetViewTasks(orgType, orgId, dateRange, taskStatus, token, taskName, taskType, row, page, orgPostId, callback, asyncState);
        }
        
        private object[] OnEndGetViewTasks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetViewTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetViewTasksCompleted(object state) {
            if ((this.GetViewTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetViewTasksCompleted(this, new GetViewTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetViewTasksAsync(string orgType, string orgId, string dateRange, string taskStatus, string token, string taskName, string taskType, int row, int page, string orgPostId) {
            this.GetViewTasksAsync(orgType, orgId, dateRange, taskStatus, token, taskName, taskType, row, page, orgPostId, null);
        }
        
        public void GetViewTasksAsync(string orgType, string orgId, string dateRange, string taskStatus, string token, string taskName, string taskType, int row, int page, string orgPostId, object userState) {
            if ((this.onBeginGetViewTasksDelegate == null)) {
                this.onBeginGetViewTasksDelegate = new BeginOperationDelegate(this.OnBeginGetViewTasks);
            }
            if ((this.onEndGetViewTasksDelegate == null)) {
                this.onEndGetViewTasksDelegate = new EndOperationDelegate(this.OnEndGetViewTasks);
            }
            if ((this.onGetViewTasksCompletedDelegate == null)) {
                this.onGetViewTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetViewTasksCompleted);
            }
            base.InvokeAsync(this.onBeginGetViewTasksDelegate, new object[] {
                        orgType,
                        orgId,
                        dateRange,
                        taskStatus,
                        token,
                        taskName,
                        taskType,
                        row,
                        page,
                        orgPostId}, this.onEndGetViewTasksDelegate, this.onGetViewTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginAddEmployeePlan(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmployeePlan(employee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.WpServiceWS.IWPServices.EndAddEmployeePlan(System.IAsyncResult result) {
            base.Channel.EndAddEmployeePlan(result);
        }
        
        private System.IAsyncResult OnBeginAddEmployeePlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee = ((SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginAddEmployeePlan(employee, callback, asyncState);
        }
        
        private object[] OnEndAddEmployeePlan(System.IAsyncResult result) {
            ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndAddEmployeePlan(result);
            return null;
        }
        
        private void OnAddEmployeePlanCompleted(object state) {
            if ((this.AddEmployeePlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmployeePlanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmployeePlanAsync(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee) {
            this.AddEmployeePlanAsync(employee, null);
        }
        
        public void AddEmployeePlanAsync(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, object userState) {
            if ((this.onBeginAddEmployeePlanDelegate == null)) {
                this.onBeginAddEmployeePlanDelegate = new BeginOperationDelegate(this.OnBeginAddEmployeePlan);
            }
            if ((this.onEndAddEmployeePlanDelegate == null)) {
                this.onEndAddEmployeePlanDelegate = new EndOperationDelegate(this.OnEndAddEmployeePlan);
            }
            if ((this.onAddEmployeePlanCompletedDelegate == null)) {
                this.onAddEmployeePlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmployeePlanCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmployeePlanDelegate, new object[] {
                        employee}, this.onEndAddEmployeePlanDelegate, this.onAddEmployeePlanCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginDeleteEmployeePlanTimingTrigger(string employeeId, string postid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployeePlanTimingTrigger(employeeId, postid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.WpServiceWS.IWPServices.EndDeleteEmployeePlanTimingTrigger(System.IAsyncResult result) {
            base.Channel.EndDeleteEmployeePlanTimingTrigger(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployeePlanTimingTrigger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeId = ((string)(inValues[0]));
            string postid = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginDeleteEmployeePlanTimingTrigger(employeeId, postid, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployeePlanTimingTrigger(System.IAsyncResult result) {
            ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndDeleteEmployeePlanTimingTrigger(result);
            return null;
        }
        
        private void OnDeleteEmployeePlanTimingTriggerCompleted(object state) {
            if ((this.DeleteEmployeePlanTimingTriggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeePlanTimingTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeePlanTimingTriggerAsync(string employeeId, string postid) {
            this.DeleteEmployeePlanTimingTriggerAsync(employeeId, postid, null);
        }
        
        public void DeleteEmployeePlanTimingTriggerAsync(string employeeId, string postid, object userState) {
            if ((this.onBeginDeleteEmployeePlanTimingTriggerDelegate == null)) {
                this.onBeginDeleteEmployeePlanTimingTriggerDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployeePlanTimingTrigger);
            }
            if ((this.onEndDeleteEmployeePlanTimingTriggerDelegate == null)) {
                this.onEndDeleteEmployeePlanTimingTriggerDelegate = new EndOperationDelegate(this.OnEndDeleteEmployeePlanTimingTrigger);
            }
            if ((this.onDeleteEmployeePlanTimingTriggerCompletedDelegate == null)) {
                this.onDeleteEmployeePlanTimingTriggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeePlanTimingTriggerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeePlanTimingTriggerDelegate, new object[] {
                        employeeId,
                        postid}, this.onEndDeleteEmployeePlanTimingTriggerDelegate, this.onDeleteEmployeePlanTimingTriggerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginEmployeeCanPostChange(string employeeId, string postId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmployeeCanPostChange(employeeId, postId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndEmployeeCanPostChange(System.IAsyncResult result) {
            return base.Channel.EndEmployeeCanPostChange(result);
        }
        
        private System.IAsyncResult OnBeginEmployeeCanPostChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeId = ((string)(inValues[0]));
            string postId = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginEmployeeCanPostChange(employeeId, postId, callback, asyncState);
        }
        
        private object[] OnEndEmployeeCanPostChange(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndEmployeeCanPostChange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmployeeCanPostChangeCompleted(object state) {
            if ((this.EmployeeCanPostChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmployeeCanPostChangeCompleted(this, new EmployeeCanPostChangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmployeeCanPostChangeAsync(string employeeId, string postId) {
            this.EmployeeCanPostChangeAsync(employeeId, postId, null);
        }
        
        public void EmployeeCanPostChangeAsync(string employeeId, string postId, object userState) {
            if ((this.onBeginEmployeeCanPostChangeDelegate == null)) {
                this.onBeginEmployeeCanPostChangeDelegate = new BeginOperationDelegate(this.OnBeginEmployeeCanPostChange);
            }
            if ((this.onEndEmployeeCanPostChangeDelegate == null)) {
                this.onEndEmployeeCanPostChangeDelegate = new EndOperationDelegate(this.OnEndEmployeeCanPostChange);
            }
            if ((this.onEmployeeCanPostChangeCompletedDelegate == null)) {
                this.onEmployeeCanPostChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmployeeCanPostChangeCompleted);
            }
            base.InvokeAsync(this.onBeginEmployeeCanPostChangeDelegate, new object[] {
                        employeeId,
                        postId}, this.onEndEmployeeCanPostChangeDelegate, this.onEmployeeCanPostChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginEmployeePostChangeAuditPass(string fromPostId, SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmployeePostChangeAuditPass(fromPostId, employee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SMT.Saas.Tools.WpServiceWS.IWPServices.EndEmployeePostChangeAuditPass(System.IAsyncResult result) {
            base.Channel.EndEmployeePostChangeAuditPass(result);
        }
        
        private System.IAsyncResult OnBeginEmployeePostChangeAuditPass(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fromPostId = ((string)(inValues[0]));
            SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee = ((SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginEmployeePostChangeAuditPass(fromPostId, employee, callback, asyncState);
        }
        
        private object[] OnEndEmployeePostChangeAuditPass(System.IAsyncResult result) {
            ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndEmployeePostChangeAuditPass(result);
            return null;
        }
        
        private void OnEmployeePostChangeAuditPassCompleted(object state) {
            if ((this.EmployeePostChangeAuditPassCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmployeePostChangeAuditPassCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmployeePostChangeAuditPassAsync(string fromPostId, SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee) {
            this.EmployeePostChangeAuditPassAsync(fromPostId, employee, null);
        }
        
        public void EmployeePostChangeAuditPassAsync(string fromPostId, SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, object userState) {
            if ((this.onBeginEmployeePostChangeAuditPassDelegate == null)) {
                this.onBeginEmployeePostChangeAuditPassDelegate = new BeginOperationDelegate(this.OnBeginEmployeePostChangeAuditPass);
            }
            if ((this.onEndEmployeePostChangeAuditPassDelegate == null)) {
                this.onEndEmployeePostChangeAuditPassDelegate = new EndOperationDelegate(this.OnEndEmployeePostChangeAuditPass);
            }
            if ((this.onEmployeePostChangeAuditPassCompletedDelegate == null)) {
                this.onEmployeePostChangeAuditPassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmployeePostChangeAuditPassCompleted);
            }
            base.InvokeAsync(this.onBeginEmployeePostChangeAuditPassDelegate, new object[] {
                        fromPostId,
                        employee}, this.onEndEmployeePostChangeAuditPassDelegate, this.onEmployeePostChangeAuditPassCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginFunsAllocated(string formid, string companyid, bool isSubmit, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFunsAllocated(formid, companyid, isSubmit, listFuns, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndFunsAllocated(out string strMsg, System.IAsyncResult result) {
            return base.Channel.EndFunsAllocated(out strMsg, result);
        }
        
        private System.IAsyncResult OnBeginFunsAllocated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string formid = ((string)(inValues[0]));
            string companyid = ((string)(inValues[1]));
            bool isSubmit = ((bool)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns>)(inValues[3]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginFunsAllocated(formid, companyid, isSubmit, listFuns, callback, asyncState);
        }
        
        private object[] OnEndFunsAllocated(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndFunsAllocated(out strMsg, result);
            return new object[] {
                    strMsg,
                    retVal};
        }
        
        private void OnFunsAllocatedCompleted(object state) {
            if ((this.FunsAllocatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FunsAllocatedCompleted(this, new FunsAllocatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FunsAllocatedAsync(string formid, string companyid, bool isSubmit, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns) {
            this.FunsAllocatedAsync(formid, companyid, isSubmit, listFuns, null);
        }
        
        public void FunsAllocatedAsync(string formid, string companyid, bool isSubmit, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns, object userState) {
            if ((this.onBeginFunsAllocatedDelegate == null)) {
                this.onBeginFunsAllocatedDelegate = new BeginOperationDelegate(this.OnBeginFunsAllocated);
            }
            if ((this.onEndFunsAllocatedDelegate == null)) {
                this.onEndFunsAllocatedDelegate = new EndOperationDelegate(this.OnEndFunsAllocated);
            }
            if ((this.onFunsAllocatedCompletedDelegate == null)) {
                this.onFunsAllocatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFunsAllocatedCompleted);
            }
            base.InvokeAsync(this.onBeginFunsAllocatedDelegate, new object[] {
                        formid,
                        companyid,
                        isSubmit,
                        listFuns}, this.onEndFunsAllocatedDelegate, this.onFunsAllocatedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginFunsPaied(SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs, bool isSubmit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFunsPaied(funs, isSubmit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndFunsPaied(out string strMsg, System.IAsyncResult result) {
            return base.Channel.EndFunsPaied(out strMsg, result);
        }
        
        private System.IAsyncResult OnBeginFunsPaied(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs = ((SMT.Saas.Tools.WpServiceWS.EmployeeFuns)(inValues[0]));
            bool isSubmit = ((bool)(inValues[1]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginFunsPaied(funs, isSubmit, callback, asyncState);
        }
        
        private object[] OnEndFunsPaied(System.IAsyncResult result) {
            string strMsg = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndFunsPaied(out strMsg, result);
            return new object[] {
                    strMsg,
                    retVal};
        }
        
        private void OnFunsPaiedCompleted(object state) {
            if ((this.FunsPaiedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FunsPaiedCompleted(this, new FunsPaiedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FunsPaiedAsync(SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs, bool isSubmit) {
            this.FunsPaiedAsync(funs, isSubmit, null);
        }
        
        public void FunsPaiedAsync(SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs, bool isSubmit, object userState) {
            if ((this.onBeginFunsPaiedDelegate == null)) {
                this.onBeginFunsPaiedDelegate = new BeginOperationDelegate(this.OnBeginFunsPaied);
            }
            if ((this.onEndFunsPaiedDelegate == null)) {
                this.onEndFunsPaiedDelegate = new EndOperationDelegate(this.OnEndFunsPaied);
            }
            if ((this.onFunsPaiedCompletedDelegate == null)) {
                this.onFunsPaiedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFunsPaiedCompleted);
            }
            base.InvokeAsync(this.onBeginFunsPaiedDelegate, new object[] {
                        funs,
                        isSubmit}, this.onEndFunsPaiedDelegate, this.onFunsPaiedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginGetTripSubject(string strBussinessTripID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTripSubject(strBussinessTripID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> SMT.Saas.Tools.WpServiceWS.IWPServices.EndGetTripSubject(System.IAsyncResult result) {
            return base.Channel.EndGetTripSubject(result);
        }
        
        private System.IAsyncResult OnBeginGetTripSubject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strBussinessTripID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginGetTripSubject(strBussinessTripID, callback, asyncState);
        }
        
        private object[] OnEndGetTripSubject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndGetTripSubject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTripSubjectCompleted(object state) {
            if ((this.GetTripSubjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTripSubjectCompleted(this, new GetTripSubjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTripSubjectAsync(string strBussinessTripID) {
            this.GetTripSubjectAsync(strBussinessTripID, null);
        }
        
        public void GetTripSubjectAsync(string strBussinessTripID, object userState) {
            if ((this.onBeginGetTripSubjectDelegate == null)) {
                this.onBeginGetTripSubjectDelegate = new BeginOperationDelegate(this.OnBeginGetTripSubject);
            }
            if ((this.onEndGetTripSubjectDelegate == null)) {
                this.onEndGetTripSubjectDelegate = new EndOperationDelegate(this.OnEndGetTripSubject);
            }
            if ((this.onGetTripSubjectCompletedDelegate == null)) {
                this.onGetTripSubjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTripSubjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetTripSubjectDelegate, new object[] {
                        strBussinessTripID}, this.onEndGetTripSubjectDelegate, this.onGetTripSubjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginTripSubjectPaid(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTripSubjectPaid(strBussinessTripID, listTripBudget, ref msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndTripSubjectPaid(ref string msg, System.IAsyncResult result) {
            return base.Channel.EndTripSubjectPaid(ref msg, result);
        }
        
        private System.IAsyncResult OnBeginTripSubjectPaid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strBussinessTripID = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget>)(inValues[1]));
            string msg = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginTripSubjectPaid(strBussinessTripID, listTripBudget, ref msg, callback, asyncState);
        }
        
        private object[] OnEndTripSubjectPaid(System.IAsyncResult result) {
            string msg = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndTripSubjectPaid(ref msg, result);
            return new object[] {
                    msg,
                    retVal};
        }
        
        private void OnTripSubjectPaidCompleted(object state) {
            if ((this.TripSubjectPaidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TripSubjectPaidCompleted(this, new TripSubjectPaidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TripSubjectPaidAsync(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, string msg) {
            this.TripSubjectPaidAsync(strBussinessTripID, listTripBudget, msg, null);
        }
        
        public void TripSubjectPaidAsync(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, string msg, object userState) {
            if ((this.onBeginTripSubjectPaidDelegate == null)) {
                this.onBeginTripSubjectPaidDelegate = new BeginOperationDelegate(this.OnBeginTripSubjectPaid);
            }
            if ((this.onEndTripSubjectPaidDelegate == null)) {
                this.onEndTripSubjectPaidDelegate = new EndOperationDelegate(this.OnEndTripSubjectPaid);
            }
            if ((this.onTripSubjectPaidCompletedDelegate == null)) {
                this.onTripSubjectPaidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTripSubjectPaidCompleted);
            }
            base.InvokeAsync(this.onBeginTripSubjectPaidDelegate, new object[] {
                        strBussinessTripID,
                        listTripBudget,
                        msg}, this.onEndTripSubjectPaidDelegate, this.onTripSubjectPaidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.WpServiceWS.IWPServices.BeginTripSubjectSave(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTripSubjectSave(strBussinessTripID, listTripBudget, ref msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.WpServiceWS.IWPServices.EndTripSubjectSave(ref string msg, System.IAsyncResult result) {
            return base.Channel.EndTripSubjectSave(ref msg, result);
        }
        
        private System.IAsyncResult OnBeginTripSubjectSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strBussinessTripID = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget>)(inValues[1]));
            string msg = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).BeginTripSubjectSave(strBussinessTripID, listTripBudget, ref msg, callback, asyncState);
        }
        
        private object[] OnEndTripSubjectSave(System.IAsyncResult result) {
            string msg = this.GetDefaultValueForInitialization<string>();
            bool retVal = ((SMT.Saas.Tools.WpServiceWS.IWPServices)(this)).EndTripSubjectSave(ref msg, result);
            return new object[] {
                    msg,
                    retVal};
        }
        
        private void OnTripSubjectSaveCompleted(object state) {
            if ((this.TripSubjectSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TripSubjectSaveCompleted(this, new TripSubjectSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TripSubjectSaveAsync(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, string msg) {
            this.TripSubjectSaveAsync(strBussinessTripID, listTripBudget, msg, null);
        }
        
        public void TripSubjectSaveAsync(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, string msg, object userState) {
            if ((this.onBeginTripSubjectSaveDelegate == null)) {
                this.onBeginTripSubjectSaveDelegate = new BeginOperationDelegate(this.OnBeginTripSubjectSave);
            }
            if ((this.onEndTripSubjectSaveDelegate == null)) {
                this.onEndTripSubjectSaveDelegate = new EndOperationDelegate(this.OnEndTripSubjectSave);
            }
            if ((this.onTripSubjectSaveCompletedDelegate == null)) {
                this.onTripSubjectSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTripSubjectSaveCompleted);
            }
            base.InvokeAsync(this.onBeginTripSubjectSaveDelegate, new object[] {
                        strBussinessTripID,
                        listTripBudget,
                        msg}, this.onEndTripSubjectSaveDelegate, this.onTripSubjectSaveCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.WpServiceWS.IWPServices CreateChannel() {
            return new WPServicesClientChannel(this);
        }
        
        private class WPServicesClientChannel : ChannelBase<SMT.Saas.Tools.WpServiceWS.IWPServices>, SMT.Saas.Tools.WpServiceWS.IWPServices {
            
            public WPServicesClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.WpServiceWS.IWPServices> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginExecute(SMT.Saas.Tools.WpServiceWS.BaseObject baseObject, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = baseObject;
                System.IAsyncResult _result = base.BeginInvoke("Execute", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.WpServiceWS.ResultObject EndExecute(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.WpServiceWS.ResultObject _result = ((SMT.Saas.Tools.WpServiceWS.ResultObject)(base.EndInvoke("Execute", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateCheckState(string EntityType, string EntityKey, string EntityId, int CheckStates, string strXmlParams, ref string strOutMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = EntityType;
                _args[1] = EntityKey;
                _args[2] = EntityId;
                _args[3] = CheckStates;
                _args[4] = strXmlParams;
                _args[5] = strOutMsg;
                System.IAsyncResult _result = base.BeginInvoke("UpdateCheckState", _args, callback, asyncState);
                strOutMsg = ((string)(_args[5]));
                return _result;
            }
            
            public int EndUpdateCheckState(ref string strOutMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = strOutMsg;
                int _result = ((int)(base.EndInvoke("UpdateCheckState", _args, result)));
                strOutMsg = ((string)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginQuery(SMT.Saas.Tools.WpServiceWS.QueryExpression expression, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = expression;
                System.IAsyncResult _result = base.BeginInvoke("Query", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.WpServiceWS.QueryResult EndQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.WpServiceWS.QueryResult _result = ((SMT.Saas.Tools.WpServiceWS.QueryResult)(base.EndInvoke("Query", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSave(SMT.Saas.Tools.WpServiceWS.SaveExpression expression, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = expression;
                System.IAsyncResult _result = base.BeginInvoke("Save", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.WpServiceWS.SaveResult EndSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.WpServiceWS.SaveResult _result = ((SMT.Saas.Tools.WpServiceWS.SaveResult)(base.EndInvoke("Save", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSubject(string strID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strID;
                System.IAsyncResult _result = base.BeginInvoke("ListSubject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> EndListSubject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT>)(base.EndInvoke("ListSubject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSubjects(string strID, bool IsNew, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = strID;
                _args[1] = IsNew;
                System.IAsyncResult _result = base.BeginInvoke("ListSubjects", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> EndListSubjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_FB_SUBJECT>)(base.EndInvoke("ListSubjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetQuery(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("GetQuery", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> EndGetQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.RunModel>)(base.EndInvoke("GetQuery", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastQuery(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("GetLastQuery", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> EndGetLastQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.QueryModel>)(base.EndInvoke("GetLastQuery", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterTask(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = reim;
                _args[1] = strErrorMsg;
                _args[2] = strLoanCode;
                _args[3] = strApplyCode;
                System.IAsyncResult _result = base.BeginInvoke("RegisterTask", _args, callback, asyncState);
                strErrorMsg = ((string)(_args[1]));
                strLoanCode = ((string)(_args[2]));
                strApplyCode = ((string)(_args[3]));
                return _result;
            }
            
            public bool EndRegisterTask(ref string strErrorMsg, ref string strLoanCode, ref string strApplyCode, System.IAsyncResult result) {
                object[] _args = new object[3];
                _args[0] = strErrorMsg;
                _args[1] = strLoanCode;
                _args[2] = strApplyCode;
                bool _result = ((bool)(base.EndInvoke("RegisterTask", _args, result)));
                strErrorMsg = ((string)(_args[0]));
                strLoanCode = ((string)(_args[1]));
                strApplyCode = ((string)(_args[2]));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeStatus(SMT.Saas.Tools.WpServiceWS.ReimbursementEntity reim, SMT.Saas.Tools.WpServiceWS.TaskStatus status, ref string strErrorMsg, ref string strCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = reim;
                _args[1] = status;
                _args[2] = strErrorMsg;
                _args[3] = strCode;
                System.IAsyncResult _result = base.BeginInvoke("ChangeStatus", _args, callback, asyncState);
                strErrorMsg = ((string)(_args[2]));
                strCode = ((string)(_args[3]));
                return _result;
            }
            
            public bool EndChangeStatus(ref string strErrorMsg, ref string strCode, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = strErrorMsg;
                _args[1] = strCode;
                bool _result = ((bool)(base.EndInvoke("ChangeStatus", _args, result)));
                strErrorMsg = ((string)(_args[0]));
                strCode = ((string)(_args[1]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummary(string pempId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pempId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummary", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY EndGetPostEmpSummary(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY _result = ((SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY)(base.EndInvoke("GetPostEmpSummary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryByFormId(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryByFormId", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY EndGetPostEmpSummaryByFormId(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY _result = ((SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY)(base.EndInvoke("GetPostEmpSummaryByFormId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryPlan(string pempId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pempId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryPlan", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> EndGetPostEmpSummaryPlan(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLAN>)(base.EndInvoke("GetPostEmpSummaryPlan", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryPlanDetial(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryPlanDetial", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> EndGetPostEmpSummaryPlanDetial(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANDETAIL>)(base.EndInvoke("GetPostEmpSummaryPlanDetial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryPlanFix(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryPlanFix", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> EndGetPostEmpSummaryPlanFix(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANFIX>)(base.EndInvoke("GetPostEmpSummaryPlanFix", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryPlanIncome(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryPlanIncome", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> EndGetPostEmpSummaryPlanIncome(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYPLANINCOME>)(base.EndInvoke("GetPostEmpSummaryPlanIncome", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryExec(string pempId, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pempId;
                _args[1] = token;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryExec", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> EndGetPostEmpSummaryExec(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXEC>)(base.EndInvoke("GetPostEmpSummaryExec", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryExecDetial(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryExecDetial", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> EndGetPostEmpSummaryExecDetial(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECDETAIL>)(base.EndInvoke("GetPostEmpSummaryExecDetial", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryExecFix(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryExecFix", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> EndGetPostEmpSummaryExecFix(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECFIX>)(base.EndInvoke("GetPostEmpSummaryExecFix", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPostEmpSummaryExecIncome(string pempId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pempId;
                System.IAsyncResult _result = base.BeginInvoke("GetPostEmpSummaryExecIncome", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> EndGetPostEmpSummaryExecIncome(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARYEXECINCOME>)(base.EndInvoke("GetPostEmpSummaryExecIncome", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginConvertEntityToXml(string pempId, int type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pempId;
                _args[1] = type;
                System.IAsyncResult _result = base.BeginInvoke("ConvertEntityToXml", _args, callback, asyncState);
                return _result;
            }
            
            public string EndConvertEntityToXml(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ConvertEntityToXml", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPostEmpSummaryPlanRecord(SMT.Saas.Tools.WpServiceWS.T_WP_POSTEMPSUMMARY postEmpSummary, int type, string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = postEmpSummary;
                _args[1] = type;
                _args[2] = token;
                System.IAsyncResult _result = base.BeginInvoke("AddPostEmpSummaryPlanRecord", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddPostEmpSummaryPlanRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddPostEmpSummaryPlanRecord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetViewTasks(string orgType, string orgId, string dateRange, string taskStatus, string token, string taskName, string taskType, int row, int page, string orgPostId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = orgType;
                _args[1] = orgId;
                _args[2] = dateRange;
                _args[3] = taskStatus;
                _args[4] = token;
                _args[5] = taskName;
                _args[6] = taskType;
                _args[7] = row;
                _args[8] = page;
                _args[9] = orgPostId;
                System.IAsyncResult _result = base.BeginInvoke("GetViewTasks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> EndGetViewTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.VIEW_MYTASKS>)(base.EndInvoke("GetViewTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEmployeePlan(SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employee;
                System.IAsyncResult _result = base.BeginInvoke("AddEmployeePlan", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddEmployeePlan(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddEmployeePlan", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteEmployeePlanTimingTrigger(string employeeId, string postid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = employeeId;
                _args[1] = postid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteEmployeePlanTimingTrigger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteEmployeePlanTimingTrigger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteEmployeePlanTimingTrigger", _args, result);
            }
            
            public System.IAsyncResult BeginEmployeeCanPostChange(string employeeId, string postId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = employeeId;
                _args[1] = postId;
                System.IAsyncResult _result = base.BeginInvoke("EmployeeCanPostChange", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEmployeeCanPostChange(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EmployeeCanPostChange", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEmployeePostChangeAuditPass(string fromPostId, SMT.Saas.Tools.WpServiceWS.VIEW_EMPLOYEE employee, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fromPostId;
                _args[1] = employee;
                System.IAsyncResult _result = base.BeginInvoke("EmployeePostChangeAuditPass", _args, callback, asyncState);
                return _result;
            }
            
            public void EndEmployeePostChangeAuditPass(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("EmployeePostChangeAuditPass", _args, result);
            }
            
            public System.IAsyncResult BeginFunsAllocated(string formid, string companyid, bool isSubmit, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.V_EmployeeFuns> listFuns, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = formid;
                _args[1] = companyid;
                _args[2] = isSubmit;
                _args[3] = listFuns;
                System.IAsyncResult _result = base.BeginInvoke("FunsAllocated", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndFunsAllocated(out string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("FunsAllocated", _args, result)));
                strMsg = ((string)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginFunsPaied(SMT.Saas.Tools.WpServiceWS.EmployeeFuns funs, bool isSubmit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = funs;
                _args[1] = isSubmit;
                System.IAsyncResult _result = base.BeginInvoke("FunsPaied", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndFunsPaied(out string strMsg, System.IAsyncResult result) {
                object[] _args = new object[1];
                bool _result = ((bool)(base.EndInvoke("FunsPaied", _args, result)));
                strMsg = ((string)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTripSubject(string strBussinessTripID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = strBussinessTripID;
                System.IAsyncResult _result = base.BeginInvoke("GetTripSubject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> EndGetTripSubject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget>)(base.EndInvoke("GetTripSubject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTripSubjectPaid(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strBussinessTripID;
                _args[1] = listTripBudget;
                _args[2] = msg;
                System.IAsyncResult _result = base.BeginInvoke("TripSubjectPaid", _args, callback, asyncState);
                msg = ((string)(_args[2]));
                return _result;
            }
            
            public bool EndTripSubjectPaid(ref string msg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = msg;
                bool _result = ((bool)(base.EndInvoke("TripSubjectPaid", _args, result)));
                msg = ((string)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginTripSubjectSave(string strBussinessTripID, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.WpServiceWS.BussinessTripBudget> listTripBudget, ref string msg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = strBussinessTripID;
                _args[1] = listTripBudget;
                _args[2] = msg;
                System.IAsyncResult _result = base.BeginInvoke("TripSubjectSave", _args, callback, asyncState);
                msg = ((string)(_args[2]));
                return _result;
            }
            
            public bool EndTripSubjectSave(ref string msg, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = msg;
                bool _result = ((bool)(base.EndInvoke("TripSubjectSave", _args, result)));
                msg = ((string)(_args[0]));
                return _result;
            }
        }
    }
}
