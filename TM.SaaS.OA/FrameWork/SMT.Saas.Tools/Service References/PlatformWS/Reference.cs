//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SMT.Saas.Tools.PlatformWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleInfo", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class ModuleInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> DependsOnField;
        
        private string DescriptionField;
        
        private string EnterAssemblyField;
        
        private string FileNameField;
        
        private string FilePathField;
        
        private string HostAddressField;
        
        private System.Collections.Generic.Dictionary<string, string> InitParamsField;
        
        private string IsSaveField;
        
        private string ModuleCodeField;
        
        private string ModuleIDField;
        
        private string ModuleIconField;
        
        private string ModuleNameField;
        
        private string ModuleTypeField;
        
        private string ParentModuleIDField;
        
        private string ServerIDField;
        
        private string SystemTypeField;
        
        private string UseStateField;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> DependsOn {
            get {
                return this.DependsOnField;
            }
            set {
                if ((object.ReferenceEquals(this.DependsOnField, value) != true)) {
                    this.DependsOnField = value;
                    this.RaisePropertyChanged("DependsOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterAssembly {
            get {
                return this.EnterAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterAssemblyField, value) != true)) {
                    this.EnterAssemblyField = value;
                    this.RaisePropertyChanged("EnterAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostAddress {
            get {
                return this.HostAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HostAddressField, value) != true)) {
                    this.HostAddressField = value;
                    this.RaisePropertyChanged("HostAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> InitParams {
            get {
                return this.InitParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitParamsField, value) != true)) {
                    this.InitParamsField = value;
                    this.RaisePropertyChanged("InitParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSave {
            get {
                return this.IsSaveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSaveField, value) != true)) {
                    this.IsSaveField = value;
                    this.RaisePropertyChanged("IsSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleCode {
            get {
                return this.ModuleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleCodeField, value) != true)) {
                    this.ModuleCodeField = value;
                    this.RaisePropertyChanged("ModuleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleIcon {
            get {
                return this.ModuleIconField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIconField, value) != true)) {
                    this.ModuleIconField = value;
                    this.RaisePropertyChanged("ModuleIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleType {
            get {
                return this.ModuleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleTypeField, value) != true)) {
                    this.ModuleTypeField = value;
                    this.RaisePropertyChanged("ModuleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentModuleID {
            get {
                return this.ParentModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentModuleIDField, value) != true)) {
                    this.ParentModuleIDField = value;
                    this.RaisePropertyChanged("ParentModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIDField, value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemType {
            get {
                return this.SystemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemTypeField, value) != true)) {
                    this.SystemTypeField = value;
                    this.RaisePropertyChanged("SystemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseState {
            get {
                return this.UseStateField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStateField, value) != true)) {
                    this.UseStateField = value;
                    this.RaisePropertyChanged("UseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortCut", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class ShortCut : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemplyNameField;
        
        private string FullNameField;
        
        private string IconPathField;
        
        private string IsSysNeedField;
        
        private string ModuleIDField;
        
        private string ParamsField;
        
        private string ShortCutIDField;
        
        private string TitelField;
        
        private string UserStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemplyName {
            get {
                return this.AssemplyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemplyNameField, value) != true)) {
                    this.AssemplyNameField = value;
                    this.RaisePropertyChanged("AssemplyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconPath {
            get {
                return this.IconPathField;
            }
            set {
                if ((object.ReferenceEquals(this.IconPathField, value) != true)) {
                    this.IconPathField = value;
                    this.RaisePropertyChanged("IconPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSysNeed {
            get {
                return this.IsSysNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSysNeedField, value) != true)) {
                    this.IsSysNeedField = value;
                    this.RaisePropertyChanged("IsSysNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortCutID {
            get {
                return this.ShortCutIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortCutIDField, value) != true)) {
                    this.ShortCutIDField = value;
                    this.RaisePropertyChanged("ShortCutID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titel {
            get {
                return this.TitelField;
            }
            set {
                if ((object.ReferenceEquals(this.TitelField, value) != true)) {
                    this.TitelField = value;
                    this.RaisePropertyChanged("Titel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserState {
            get {
                return this.UserStateField;
            }
            set {
                if ((object.ReferenceEquals(this.UserStateField, value) != true)) {
                    this.UserStateField = value;
                    this.RaisePropertyChanged("UserState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_NEWS))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_NEWS))]
    public partial class EntityObject : SMT.Saas.Tools.PlatformWS.StructuralObject {
        
        private SMT.Saas.Tools.PlatformWS.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PlatformWS.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_DISTRIBUTEUSER", Namespace="http://schemas.datacontract.org/2004/07/TM_SaaS_OA_EFModel", IsReference=true)]
    public partial class T_PF_DISTRIBUTEUSER : SMT.Saas.Tools.PlatformWS.EntityObject {
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private string DISTRIBUTEUSERIDField;
        
        private string FORMIDField;
        
        private string MODELNAMEField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        private string VIEWERField;
        
        private string VIEWTYPEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DISTRIBUTEUSERID {
            get {
                return this.DISTRIBUTEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DISTRIBUTEUSERIDField, value) != true)) {
                    this.DISTRIBUTEUSERIDField = value;
                    this.RaisePropertyChanged("DISTRIBUTEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FORMID {
            get {
                return this.FORMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FORMIDField, value) != true)) {
                    this.FORMIDField = value;
                    this.RaisePropertyChanged("FORMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODELNAME {
            get {
                return this.MODELNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODELNAMEField, value) != true)) {
                    this.MODELNAMEField = value;
                    this.RaisePropertyChanged("MODELNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIEWER {
            get {
                return this.VIEWERField;
            }
            set {
                if ((object.ReferenceEquals(this.VIEWERField, value) != true)) {
                    this.VIEWERField = value;
                    this.RaisePropertyChanged("VIEWER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VIEWTYPE {
            get {
                return this.VIEWTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.VIEWTYPEField, value) != true)) {
                    this.VIEWTYPEField = value;
                    this.RaisePropertyChanged("VIEWTYPE");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWS", Namespace="http://schemas.datacontract.org/2004/07/TM_SaaS_OA_EFModel", IsReference=true)]
    public partial class T_PF_NEWS : SMT.Saas.Tools.PlatformWS.EntityObject {
        
        private string COMMENTCOUNTField;
        
        private string CREATECOMPANYIDField;
        
        private System.DateTime CREATEDATEField;
        
        private string CREATEDEPARTMENTIDField;
        
        private string CREATEPOSTIDField;
        
        private string CREATEUSERIDField;
        
        private string CREATEUSERNAMEField;
        
        private System.Nullable<System.DateTime> ENDDATEField;
        
        private string ISIMAGEField;
        
        private string ISPARTYField;
        
        private string ISPOPUPField;
        
        private byte[] NEWSCONTENTField;
        
        private string NEWSIDField;
        
        private string NEWSSTATEField;
        
        private string NEWSTITELField;
        
        private string NEWSTYPEIDField;
        
        private string OWNERCOMPANYIDField;
        
        private string OWNERDEPARTMENTIDField;
        
        private string OWNERIDField;
        
        private string OWNERNAMEField;
        
        private string OWNERPOSTIDField;
        
        private string PUTDEPTIDField;
        
        private string PUTDEPTNAMEField;
        
        private string READCOUNTField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        private string UPDATEUSERIDField;
        
        private string UPDATEUSERNAMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENTCOUNT {
            get {
                return this.COMMENTCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTCOUNTField, value) != true)) {
                    this.COMMENTCOUNTField = value;
                    this.RaisePropertyChanged("COMMENTCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATECOMPANYID {
            get {
                return this.CREATECOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATECOMPANYIDField, value) != true)) {
                    this.CREATECOMPANYIDField = value;
                    this.RaisePropertyChanged("CREATECOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CREATEDATE {
            get {
                return this.CREATEDATEField;
            }
            set {
                if ((this.CREATEDATEField.Equals(value) != true)) {
                    this.CREATEDATEField = value;
                    this.RaisePropertyChanged("CREATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEDEPARTMENTID {
            get {
                return this.CREATEDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEDEPARTMENTIDField, value) != true)) {
                    this.CREATEDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("CREATEDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEPOSTID {
            get {
                return this.CREATEPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEPOSTIDField, value) != true)) {
                    this.CREATEPOSTIDField = value;
                    this.RaisePropertyChanged("CREATEPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERID {
            get {
                return this.CREATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERIDField, value) != true)) {
                    this.CREATEUSERIDField = value;
                    this.RaisePropertyChanged("CREATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CREATEUSERNAME {
            get {
                return this.CREATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.CREATEUSERNAMEField, value) != true)) {
                    this.CREATEUSERNAMEField = value;
                    this.RaisePropertyChanged("CREATEUSERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ENDDATE {
            get {
                return this.ENDDATEField;
            }
            set {
                if ((this.ENDDATEField.Equals(value) != true)) {
                    this.ENDDATEField = value;
                    this.RaisePropertyChanged("ENDDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISIMAGE {
            get {
                return this.ISIMAGEField;
            }
            set {
                if ((object.ReferenceEquals(this.ISIMAGEField, value) != true)) {
                    this.ISIMAGEField = value;
                    this.RaisePropertyChanged("ISIMAGE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISPARTY {
            get {
                return this.ISPARTYField;
            }
            set {
                if ((object.ReferenceEquals(this.ISPARTYField, value) != true)) {
                    this.ISPARTYField = value;
                    this.RaisePropertyChanged("ISPARTY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISPOPUP {
            get {
                return this.ISPOPUPField;
            }
            set {
                if ((object.ReferenceEquals(this.ISPOPUPField, value) != true)) {
                    this.ISPOPUPField = value;
                    this.RaisePropertyChanged("ISPOPUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NEWSCONTENT {
            get {
                return this.NEWSCONTENTField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSCONTENTField, value) != true)) {
                    this.NEWSCONTENTField = value;
                    this.RaisePropertyChanged("NEWSCONTENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSID {
            get {
                return this.NEWSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSIDField, value) != true)) {
                    this.NEWSIDField = value;
                    this.RaisePropertyChanged("NEWSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSSTATE {
            get {
                return this.NEWSSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSSTATEField, value) != true)) {
                    this.NEWSSTATEField = value;
                    this.RaisePropertyChanged("NEWSSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTITEL {
            get {
                return this.NEWSTITELField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTITELField, value) != true)) {
                    this.NEWSTITELField = value;
                    this.RaisePropertyChanged("NEWSTITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTYPEID {
            get {
                return this.NEWSTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTYPEIDField, value) != true)) {
                    this.NEWSTYPEIDField = value;
                    this.RaisePropertyChanged("NEWSTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERCOMPANYID {
            get {
                return this.OWNERCOMPANYIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERCOMPANYIDField, value) != true)) {
                    this.OWNERCOMPANYIDField = value;
                    this.RaisePropertyChanged("OWNERCOMPANYID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERDEPARTMENTID {
            get {
                return this.OWNERDEPARTMENTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERDEPARTMENTIDField, value) != true)) {
                    this.OWNERDEPARTMENTIDField = value;
                    this.RaisePropertyChanged("OWNERDEPARTMENTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERID {
            get {
                return this.OWNERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERIDField, value) != true)) {
                    this.OWNERIDField = value;
                    this.RaisePropertyChanged("OWNERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERNAME {
            get {
                return this.OWNERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERNAMEField, value) != true)) {
                    this.OWNERNAMEField = value;
                    this.RaisePropertyChanged("OWNERNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OWNERPOSTID {
            get {
                return this.OWNERPOSTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OWNERPOSTIDField, value) != true)) {
                    this.OWNERPOSTIDField = value;
                    this.RaisePropertyChanged("OWNERPOSTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUTDEPTID {
            get {
                return this.PUTDEPTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PUTDEPTIDField, value) != true)) {
                    this.PUTDEPTIDField = value;
                    this.RaisePropertyChanged("PUTDEPTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUTDEPTNAME {
            get {
                return this.PUTDEPTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PUTDEPTNAMEField, value) != true)) {
                    this.PUTDEPTNAMEField = value;
                    this.RaisePropertyChanged("PUTDEPTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string READCOUNT {
            get {
                return this.READCOUNTField;
            }
            set {
                if ((object.ReferenceEquals(this.READCOUNTField, value) != true)) {
                    this.READCOUNTField = value;
                    this.RaisePropertyChanged("READCOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERID {
            get {
                return this.UPDATEUSERIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERIDField, value) != true)) {
                    this.UPDATEUSERIDField = value;
                    this.RaisePropertyChanged("UPDATEUSERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPDATEUSERNAME {
            get {
                return this.UPDATEUSERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.UPDATEUSERNAMEField, value) != true)) {
                    this.UPDATEUSERNAMEField = value;
                    this.RaisePropertyChanged("UPDATEUSERNAME");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_NEWS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.ModuleInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.ShortCut))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_NEWSView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWSView", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class T_PF_NEWSView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> T_PF_DISTRIBUTEUSERSField;
        
        private SMT.Saas.Tools.PlatformWS.T_PF_NEWS T_PF_NEWSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> T_PF_DISTRIBUTEUSERS {
            get {
                return this.T_PF_DISTRIBUTEUSERSField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_DISTRIBUTEUSERSField, value) != true)) {
                    this.T_PF_DISTRIBUTEUSERSField = value;
                    this.RaisePropertyChanged("T_PF_DISTRIBUTEUSERS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SMT.Saas.Tools.PlatformWS.T_PF_NEWS T_PF_NEWS {
            get {
                return this.T_PF_NEWSField;
            }
            set {
                if ((object.ReferenceEquals(this.T_PF_NEWSField, value) != true)) {
                    this.T_PF_NEWSField = value;
                    this.RaisePropertyChanged("T_PF_NEWS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_PF_NEWSListView", Namespace="http://schemas.datacontract.org/2004/07/SMT.SAAS.Platform.Model")]
    public partial class T_PF_NEWSListView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NEWSIDField;
        
        private string NEWSTATEField;
        
        private string NEWSTITELField;
        
        private string NEWSTYPEIDField;
        
        private System.Nullable<System.DateTime> UPDATEDATEField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSID {
            get {
                return this.NEWSIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSIDField, value) != true)) {
                    this.NEWSIDField = value;
                    this.RaisePropertyChanged("NEWSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTATE {
            get {
                return this.NEWSTATEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTATEField, value) != true)) {
                    this.NEWSTATEField = value;
                    this.RaisePropertyChanged("NEWSTATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTITEL {
            get {
                return this.NEWSTITELField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTITELField, value) != true)) {
                    this.NEWSTITELField = value;
                    this.RaisePropertyChanged("NEWSTITEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEWSTYPEID {
            get {
                return this.NEWSTYPEIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NEWSTYPEIDField, value) != true)) {
                    this.NEWSTYPEIDField = value;
                    this.RaisePropertyChanged("NEWSTYPEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.UPDATEDATEField;
            }
            set {
                if ((this.UPDATEDATEField.Equals(value) != true)) {
                    this.UPDATEDATEField = value;
                    this.RaisePropertyChanged("UPDATEDATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlatformWS.PlatformServices")]
    public interface PlatformServices {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddModule", ReplyAction="http://tempuri.org/PlatformServices/AddModuleResponse")]
        System.IAsyncResult BeginAddModule(SMT.Saas.Tools.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetModuleByCodes", ReplyAction="http://tempuri.org/PlatformServices/GetModuleByCodesResponse")]
        System.IAsyncResult BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetModuleByCodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetModuleCatalogByUser", ReplyAction="http://tempuri.org/PlatformServices/GetModuleCatalogByUserResponse")]
        System.IAsyncResult BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetModuleCatalogByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetModuleFileStream", ReplyAction="http://tempuri.org/PlatformServices/GetModuleFileStreamResponse")]
        System.IAsyncResult BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetModuleFileStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddModuleByFile", ReplyAction="http://tempuri.org/PlatformServices/AddModuleByFileResponse")]
        System.IAsyncResult BeginAddModuleByFile(SMT.Saas.Tools.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState);
        
        bool EndAddModuleByFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetTaskConfigInfoByUser", ReplyAction="http://tempuri.org/PlatformServices/GetTaskConfigInfoByUserResponse")]
        System.IAsyncResult BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetTaskConfigInfoByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetShortCutByUser", ReplyAction="http://tempuri.org/PlatformServices/GetShortCutByUserResponse")]
        System.IAsyncResult BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> EndGetShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddShortCutByUser", ReplyAction="http://tempuri.org/PlatformServices/AddShortCutByUserResponse")]
        System.IAsyncResult BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState);
        
        bool EndAddShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/RemoveShortCutByUser", ReplyAction="http://tempuri.org/PlatformServices/RemoveShortCutByUserResponse")]
        System.IAsyncResult BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveShortCutByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddShortCut", ReplyAction="http://tempuri.org/PlatformServices/AddShortCutResponse")]
        System.IAsyncResult BeginAddShortCut(SMT.Saas.Tools.PlatformWS.ShortCut model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddShortCut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddShortCutByList", ReplyAction="http://tempuri.org/PlatformServices/AddShortCutByListResponse")]
        System.IAsyncResult BeginAddShortCutByList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, System.AsyncCallback callback, object asyncState);
        
        bool EndAddShortCutByList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddNews", ReplyAction="http://tempuri.org/PlatformServices/AddNewsResponse")]
        System.IAsyncResult BeginAddNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/AddNewsByViewer", ReplyAction="http://tempuri.org/PlatformServices/AddNewsByViewerResponse")]
        System.IAsyncResult BeginAddNewsByViewer(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewsByViewer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/UpdateNews", ReplyAction="http://tempuri.org/PlatformServices/UpdateNewsResponse")]
        System.IAsyncResult BeginUpdateNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/DeleteNews", ReplyAction="http://tempuri.org/PlatformServices/DeleteNewsResponse")]
        System.IAsyncResult BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsModelByID", ReplyAction="http://tempuri.org/PlatformServices/GetNewsModelByIDResponse")]
        System.IAsyncResult BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PlatformWS.T_PF_NEWS EndGetNewsModelByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsDetailsByID", ReplyAction="http://tempuri.org/PlatformServices/GetNewsDetailsByIDResponse")]
        System.IAsyncResult BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState);
        
        SMT.Saas.Tools.PlatformWS.T_PF_NEWSView EndGetNewsDetailsByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsList", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListResponse")]
        System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsLists", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListsResponse")]
        System.IAsyncResult BeginGetNewsLists(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> EndGetNewsLists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsListByParams", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListByParamsResponse")]
        System.IAsyncResult BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsListByParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsListByState", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListByStateResponse")]
        System.IAsyncResult BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsListByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetImageNewsList", ReplyAction="http://tempuri.org/PlatformServices/GetImageNewsListResponse")]
        System.IAsyncResult BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetImageNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsListByPage", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListByPageResponse")]
        System.IAsyncResult BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetPopupNewsList", ReplyAction="http://tempuri.org/PlatformServices/GetPopupNewsListResponse")]
        System.IAsyncResult BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetPopupNewsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PlatformServices/GetNewsListByMobile", ReplyAction="http://tempuri.org/PlatformServices/GetNewsListByMobileResponse")]
        System.IAsyncResult BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PlatformServicesChannel : SMT.Saas.Tools.PlatformWS.PlatformServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleByCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleByCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleCatalogByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleCatalogByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModuleFileStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModuleFileStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddModuleByFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddModuleByFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskConfigInfoByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskConfigInfoByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveShortCutByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveShortCutByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddShortCutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddShortCutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddShortCutByListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddShortCutByListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewsByViewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewsByViewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsModelByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsModelByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PlatformWS.T_PF_NEWS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PlatformWS.T_PF_NEWS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsDetailsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsDetailsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SMT.Saas.Tools.PlatformWS.T_PF_NEWSView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SMT.Saas.Tools.PlatformWS.T_PF_NEWSView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImageNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImageNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPopupNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPopupNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsListByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsListByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int pageCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int rowCount {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformServicesClient : System.ServiceModel.ClientBase<SMT.Saas.Tools.PlatformWS.PlatformServices>, SMT.Saas.Tools.PlatformWS.PlatformServices {
        
        private BeginOperationDelegate onBeginAddModuleDelegate;
        
        private EndOperationDelegate onEndAddModuleDelegate;
        
        private System.Threading.SendOrPostCallback onAddModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleByCodesDelegate;
        
        private EndOperationDelegate onEndGetModuleByCodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleByCodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleCatalogByUserDelegate;
        
        private EndOperationDelegate onEndGetModuleCatalogByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleCatalogByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModuleFileStreamDelegate;
        
        private EndOperationDelegate onEndGetModuleFileStreamDelegate;
        
        private System.Threading.SendOrPostCallback onGetModuleFileStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddModuleByFileDelegate;
        
        private EndOperationDelegate onEndAddModuleByFileDelegate;
        
        private System.Threading.SendOrPostCallback onAddModuleByFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskConfigInfoByUserDelegate;
        
        private EndOperationDelegate onEndGetTaskConfigInfoByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskConfigInfoByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShortCutByUserDelegate;
        
        private EndOperationDelegate onEndGetShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddShortCutByUserDelegate;
        
        private EndOperationDelegate onEndAddShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveShortCutByUserDelegate;
        
        private EndOperationDelegate onEndRemoveShortCutByUserDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveShortCutByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddShortCutDelegate;
        
        private EndOperationDelegate onEndAddShortCutDelegate;
        
        private System.Threading.SendOrPostCallback onAddShortCutCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddShortCutByListDelegate;
        
        private EndOperationDelegate onEndAddShortCutByListDelegate;
        
        private System.Threading.SendOrPostCallback onAddShortCutByListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewsDelegate;
        
        private EndOperationDelegate onEndAddNewsDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewsByViewerDelegate;
        
        private EndOperationDelegate onEndAddNewsByViewerDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewsByViewerCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNewsDelegate;
        
        private EndOperationDelegate onEndUpdateNewsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteNewsDelegate;
        
        private EndOperationDelegate onEndDeleteNewsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsModelByIDDelegate;
        
        private EndOperationDelegate onEndGetNewsModelByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsModelByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsDetailsByIDDelegate;
        
        private EndOperationDelegate onEndGetNewsDetailsByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsDetailsByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListDelegate;
        
        private EndOperationDelegate onEndGetNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListsDelegate;
        
        private EndOperationDelegate onEndGetNewsListsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByParamsDelegate;
        
        private EndOperationDelegate onEndGetNewsListByParamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByStateDelegate;
        
        private EndOperationDelegate onEndGetNewsListByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetImageNewsListDelegate;
        
        private EndOperationDelegate onEndGetImageNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetImageNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByPageDelegate;
        
        private EndOperationDelegate onEndGetNewsListByPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPopupNewsListDelegate;
        
        private EndOperationDelegate onEndGetPopupNewsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPopupNewsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsListByMobileDelegate;
        
        private EndOperationDelegate onEndGetNewsListByMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsListByMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlatformServicesClient() {
        }
        
        public PlatformServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddModuleCompletedEventArgs> AddModuleCompleted;
        
        public event System.EventHandler<GetModuleByCodesCompletedEventArgs> GetModuleByCodesCompleted;
        
        public event System.EventHandler<GetModuleCatalogByUserCompletedEventArgs> GetModuleCatalogByUserCompleted;
        
        public event System.EventHandler<GetModuleFileStreamCompletedEventArgs> GetModuleFileStreamCompleted;
        
        public event System.EventHandler<AddModuleByFileCompletedEventArgs> AddModuleByFileCompleted;
        
        public event System.EventHandler<GetTaskConfigInfoByUserCompletedEventArgs> GetTaskConfigInfoByUserCompleted;
        
        public event System.EventHandler<GetShortCutByUserCompletedEventArgs> GetShortCutByUserCompleted;
        
        public event System.EventHandler<AddShortCutByUserCompletedEventArgs> AddShortCutByUserCompleted;
        
        public event System.EventHandler<RemoveShortCutByUserCompletedEventArgs> RemoveShortCutByUserCompleted;
        
        public event System.EventHandler<AddShortCutCompletedEventArgs> AddShortCutCompleted;
        
        public event System.EventHandler<AddShortCutByListCompletedEventArgs> AddShortCutByListCompleted;
        
        public event System.EventHandler<AddNewsCompletedEventArgs> AddNewsCompleted;
        
        public event System.EventHandler<AddNewsByViewerCompletedEventArgs> AddNewsByViewerCompleted;
        
        public event System.EventHandler<UpdateNewsCompletedEventArgs> UpdateNewsCompleted;
        
        public event System.EventHandler<DeleteNewsCompletedEventArgs> DeleteNewsCompleted;
        
        public event System.EventHandler<GetNewsModelByIDCompletedEventArgs> GetNewsModelByIDCompleted;
        
        public event System.EventHandler<GetNewsDetailsByIDCompletedEventArgs> GetNewsDetailsByIDCompleted;
        
        public event System.EventHandler<GetNewsListCompletedEventArgs> GetNewsListCompleted;
        
        public event System.EventHandler<GetNewsListsCompletedEventArgs> GetNewsListsCompleted;
        
        public event System.EventHandler<GetNewsListByParamsCompletedEventArgs> GetNewsListByParamsCompleted;
        
        public event System.EventHandler<GetNewsListByStateCompletedEventArgs> GetNewsListByStateCompleted;
        
        public event System.EventHandler<GetImageNewsListCompletedEventArgs> GetImageNewsListCompleted;
        
        public event System.EventHandler<GetNewsListByPageCompletedEventArgs> GetNewsListByPageCompleted;
        
        public event System.EventHandler<GetPopupNewsListCompletedEventArgs> GetPopupNewsListCompleted;
        
        public event System.EventHandler<GetNewsListByMobileCompletedEventArgs> GetNewsListByMobileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddModule(SMT.Saas.Tools.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddModule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddModule(System.IAsyncResult result) {
            return base.Channel.EndAddModule(result);
        }
        
        private System.IAsyncResult OnBeginAddModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.ModuleInfo model = ((SMT.Saas.Tools.PlatformWS.ModuleInfo)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddModule(model, callback, asyncState);
        }
        
        private object[] OnEndAddModule(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddModuleCompleted(object state) {
            if ((this.AddModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddModuleCompleted(this, new AddModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddModuleAsync(SMT.Saas.Tools.PlatformWS.ModuleInfo model) {
            this.AddModuleAsync(model, null);
        }
        
        public void AddModuleAsync(SMT.Saas.Tools.PlatformWS.ModuleInfo model, object userState) {
            if ((this.onBeginAddModuleDelegate == null)) {
                this.onBeginAddModuleDelegate = new BeginOperationDelegate(this.OnBeginAddModule);
            }
            if ((this.onEndAddModuleDelegate == null)) {
                this.onEndAddModuleDelegate = new EndOperationDelegate(this.OnEndAddModule);
            }
            if ((this.onAddModuleCompletedDelegate == null)) {
                this.onAddModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddModuleCompleted);
            }
            base.InvokeAsync(this.onBeginAddModuleDelegate, new object[] {
                        model}, this.onEndAddModuleDelegate, this.onAddModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleByCodes(moduleCodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetModuleByCodes(System.IAsyncResult result) {
            return base.Channel.EndGetModuleByCodes(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleByCodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> moduleCodes = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetModuleByCodes(moduleCodes, callback, asyncState);
        }
        
        private object[] OnEndGetModuleByCodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetModuleByCodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleByCodesCompleted(object state) {
            if ((this.GetModuleByCodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleByCodesCompleted(this, new GetModuleByCodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleByCodesAsync(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes) {
            this.GetModuleByCodesAsync(moduleCodes, null);
        }
        
        public void GetModuleByCodesAsync(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, object userState) {
            if ((this.onBeginGetModuleByCodesDelegate == null)) {
                this.onBeginGetModuleByCodesDelegate = new BeginOperationDelegate(this.OnBeginGetModuleByCodes);
            }
            if ((this.onEndGetModuleByCodesDelegate == null)) {
                this.onEndGetModuleByCodesDelegate = new EndOperationDelegate(this.OnEndGetModuleByCodes);
            }
            if ((this.onGetModuleByCodesCompletedDelegate == null)) {
                this.onGetModuleByCodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleByCodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleByCodesDelegate, new object[] {
                        moduleCodes}, this.onEndGetModuleByCodesDelegate, this.onGetModuleByCodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleCatalogByUser(userSysID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetModuleCatalogByUser(System.IAsyncResult result) {
            return base.Channel.EndGetModuleCatalogByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleCatalogByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userSysID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetModuleCatalogByUser(userSysID, callback, asyncState);
        }
        
        private object[] OnEndGetModuleCatalogByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetModuleCatalogByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleCatalogByUserCompleted(object state) {
            if ((this.GetModuleCatalogByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleCatalogByUserCompleted(this, new GetModuleCatalogByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleCatalogByUserAsync(string userSysID) {
            this.GetModuleCatalogByUserAsync(userSysID, null);
        }
        
        public void GetModuleCatalogByUserAsync(string userSysID, object userState) {
            if ((this.onBeginGetModuleCatalogByUserDelegate == null)) {
                this.onBeginGetModuleCatalogByUserDelegate = new BeginOperationDelegate(this.OnBeginGetModuleCatalogByUser);
            }
            if ((this.onEndGetModuleCatalogByUserDelegate == null)) {
                this.onEndGetModuleCatalogByUserDelegate = new EndOperationDelegate(this.OnEndGetModuleCatalogByUser);
            }
            if ((this.onGetModuleCatalogByUserCompletedDelegate == null)) {
                this.onGetModuleCatalogByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleCatalogByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleCatalogByUserDelegate, new object[] {
                        userSysID}, this.onEndGetModuleCatalogByUserDelegate, this.onGetModuleCatalogByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModuleFileStream(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetModuleFileStream(System.IAsyncResult result) {
            return base.Channel.EndGetModuleFileStream(result);
        }
        
        private System.IAsyncResult OnBeginGetModuleFileStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetModuleFileStream(fileName, callback, asyncState);
        }
        
        private object[] OnEndGetModuleFileStream(System.IAsyncResult result) {
            byte[] retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetModuleFileStream(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModuleFileStreamCompleted(object state) {
            if ((this.GetModuleFileStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModuleFileStreamCompleted(this, new GetModuleFileStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModuleFileStreamAsync(string fileName) {
            this.GetModuleFileStreamAsync(fileName, null);
        }
        
        public void GetModuleFileStreamAsync(string fileName, object userState) {
            if ((this.onBeginGetModuleFileStreamDelegate == null)) {
                this.onBeginGetModuleFileStreamDelegate = new BeginOperationDelegate(this.OnBeginGetModuleFileStream);
            }
            if ((this.onEndGetModuleFileStreamDelegate == null)) {
                this.onEndGetModuleFileStreamDelegate = new EndOperationDelegate(this.OnEndGetModuleFileStream);
            }
            if ((this.onGetModuleFileStreamCompletedDelegate == null)) {
                this.onGetModuleFileStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModuleFileStreamCompleted);
            }
            base.InvokeAsync(this.onBeginGetModuleFileStreamDelegate, new object[] {
                        fileName}, this.onEndGetModuleFileStreamDelegate, this.onGetModuleFileStreamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddModuleByFile(SMT.Saas.Tools.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddModuleByFile(model, xapFileStream, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddModuleByFile(System.IAsyncResult result) {
            return base.Channel.EndAddModuleByFile(result);
        }
        
        private System.IAsyncResult OnBeginAddModuleByFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.ModuleInfo model = ((SMT.Saas.Tools.PlatformWS.ModuleInfo)(inValues[0]));
            byte[] xapFileStream = ((byte[])(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddModuleByFile(model, xapFileStream, callback, asyncState);
        }
        
        private object[] OnEndAddModuleByFile(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddModuleByFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddModuleByFileCompleted(object state) {
            if ((this.AddModuleByFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddModuleByFileCompleted(this, new AddModuleByFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddModuleByFileAsync(SMT.Saas.Tools.PlatformWS.ModuleInfo model, byte[] xapFileStream) {
            this.AddModuleByFileAsync(model, xapFileStream, null);
        }
        
        public void AddModuleByFileAsync(SMT.Saas.Tools.PlatformWS.ModuleInfo model, byte[] xapFileStream, object userState) {
            if ((this.onBeginAddModuleByFileDelegate == null)) {
                this.onBeginAddModuleByFileDelegate = new BeginOperationDelegate(this.OnBeginAddModuleByFile);
            }
            if ((this.onEndAddModuleByFileDelegate == null)) {
                this.onEndAddModuleByFileDelegate = new EndOperationDelegate(this.OnEndAddModuleByFile);
            }
            if ((this.onAddModuleByFileCompletedDelegate == null)) {
                this.onAddModuleByFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddModuleByFileCompleted);
            }
            base.InvokeAsync(this.onBeginAddModuleByFileDelegate, new object[] {
                        model,
                        xapFileStream}, this.onEndAddModuleByFileDelegate, this.onAddModuleByFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskConfigInfoByUser(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetTaskConfigInfoByUser(System.IAsyncResult result) {
            return base.Channel.EndGetTaskConfigInfoByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskConfigInfoByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetTaskConfigInfoByUser(userID, callback, asyncState);
        }
        
        private object[] OnEndGetTaskConfigInfoByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetTaskConfigInfoByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskConfigInfoByUserCompleted(object state) {
            if ((this.GetTaskConfigInfoByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskConfigInfoByUserCompleted(this, new GetTaskConfigInfoByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskConfigInfoByUserAsync(string userID) {
            this.GetTaskConfigInfoByUserAsync(userID, null);
        }
        
        public void GetTaskConfigInfoByUserAsync(string userID, object userState) {
            if ((this.onBeginGetTaskConfigInfoByUserDelegate == null)) {
                this.onBeginGetTaskConfigInfoByUserDelegate = new BeginOperationDelegate(this.OnBeginGetTaskConfigInfoByUser);
            }
            if ((this.onEndGetTaskConfigInfoByUserDelegate == null)) {
                this.onEndGetTaskConfigInfoByUserDelegate = new EndOperationDelegate(this.OnEndGetTaskConfigInfoByUser);
            }
            if ((this.onGetTaskConfigInfoByUserCompletedDelegate == null)) {
                this.onGetTaskConfigInfoByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskConfigInfoByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskConfigInfoByUserDelegate, new object[] {
                        userID}, this.onEndGetTaskConfigInfoByUserDelegate, this.onGetTaskConfigInfoByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShortCutByUser(userSysID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndGetShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userSysID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetShortCutByUser(userSysID, callback, asyncState);
        }
        
        private object[] OnEndGetShortCutByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShortCutByUserCompleted(object state) {
            if ((this.GetShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShortCutByUserCompleted(this, new GetShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShortCutByUserAsync(string userSysID) {
            this.GetShortCutByUserAsync(userSysID, null);
        }
        
        public void GetShortCutByUserAsync(string userSysID, object userState) {
            if ((this.onBeginGetShortCutByUserDelegate == null)) {
                this.onBeginGetShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginGetShortCutByUser);
            }
            if ((this.onEndGetShortCutByUserDelegate == null)) {
                this.onEndGetShortCutByUserDelegate = new EndOperationDelegate(this.OnEndGetShortCutByUser);
            }
            if ((this.onGetShortCutByUserCompletedDelegate == null)) {
                this.onGetShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetShortCutByUserDelegate, new object[] {
                        userSysID}, this.onEndGetShortCutByUserDelegate, this.onGetShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddShortCutByUser(models, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndAddShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginAddShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut>)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddShortCutByUser(models, userID, callback, asyncState);
        }
        
        private object[] OnEndAddShortCutByUser(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddShortCutByUserCompleted(object state) {
            if ((this.AddShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddShortCutByUserCompleted(this, new AddShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddShortCutByUserAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, string userID) {
            this.AddShortCutByUserAsync(models, userID, null);
        }
        
        public void AddShortCutByUserAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, string userID, object userState) {
            if ((this.onBeginAddShortCutByUserDelegate == null)) {
                this.onBeginAddShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginAddShortCutByUser);
            }
            if ((this.onEndAddShortCutByUserDelegate == null)) {
                this.onEndAddShortCutByUserDelegate = new EndOperationDelegate(this.OnEndAddShortCutByUser);
            }
            if ((this.onAddShortCutByUserCompletedDelegate == null)) {
                this.onAddShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddShortCutByUserDelegate, new object[] {
                        models,
                        userID}, this.onEndAddShortCutByUserDelegate, this.onAddShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveShortCutByUser(shortCutID, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndRemoveShortCutByUser(System.IAsyncResult result) {
            return base.Channel.EndRemoveShortCutByUser(result);
        }
        
        private System.IAsyncResult OnBeginRemoveShortCutByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string shortCutID = ((string)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginRemoveShortCutByUser(shortCutID, userID, callback, asyncState);
        }
        
        private object[] OnEndRemoveShortCutByUser(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndRemoveShortCutByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveShortCutByUserCompleted(object state) {
            if ((this.RemoveShortCutByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveShortCutByUserCompleted(this, new RemoveShortCutByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveShortCutByUserAsync(string shortCutID, string userID) {
            this.RemoveShortCutByUserAsync(shortCutID, userID, null);
        }
        
        public void RemoveShortCutByUserAsync(string shortCutID, string userID, object userState) {
            if ((this.onBeginRemoveShortCutByUserDelegate == null)) {
                this.onBeginRemoveShortCutByUserDelegate = new BeginOperationDelegate(this.OnBeginRemoveShortCutByUser);
            }
            if ((this.onEndRemoveShortCutByUserDelegate == null)) {
                this.onEndRemoveShortCutByUserDelegate = new EndOperationDelegate(this.OnEndRemoveShortCutByUser);
            }
            if ((this.onRemoveShortCutByUserCompletedDelegate == null)) {
                this.onRemoveShortCutByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveShortCutByUserCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveShortCutByUserDelegate, new object[] {
                        shortCutID,
                        userID}, this.onEndRemoveShortCutByUserDelegate, this.onRemoveShortCutByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddShortCut(SMT.Saas.Tools.PlatformWS.ShortCut model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddShortCut(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddShortCut(System.IAsyncResult result) {
            return base.Channel.EndAddShortCut(result);
        }
        
        private System.IAsyncResult OnBeginAddShortCut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.ShortCut model = ((SMT.Saas.Tools.PlatformWS.ShortCut)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddShortCut(model, callback, asyncState);
        }
        
        private object[] OnEndAddShortCut(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddShortCut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddShortCutCompleted(object state) {
            if ((this.AddShortCutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddShortCutCompleted(this, new AddShortCutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddShortCutAsync(SMT.Saas.Tools.PlatformWS.ShortCut model) {
            this.AddShortCutAsync(model, null);
        }
        
        public void AddShortCutAsync(SMT.Saas.Tools.PlatformWS.ShortCut model, object userState) {
            if ((this.onBeginAddShortCutDelegate == null)) {
                this.onBeginAddShortCutDelegate = new BeginOperationDelegate(this.OnBeginAddShortCut);
            }
            if ((this.onEndAddShortCutDelegate == null)) {
                this.onEndAddShortCutDelegate = new EndOperationDelegate(this.OnEndAddShortCut);
            }
            if ((this.onAddShortCutCompletedDelegate == null)) {
                this.onAddShortCutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddShortCutCompleted);
            }
            base.InvokeAsync(this.onBeginAddShortCutDelegate, new object[] {
                        model}, this.onEndAddShortCutDelegate, this.onAddShortCutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddShortCutByList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddShortCutByList(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddShortCutByList(System.IAsyncResult result) {
            return base.Channel.EndAddShortCutByList(result);
        }
        
        private System.IAsyncResult OnBeginAddShortCutByList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut>)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddShortCutByList(models, callback, asyncState);
        }
        
        private object[] OnEndAddShortCutByList(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddShortCutByList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddShortCutByListCompleted(object state) {
            if ((this.AddShortCutByListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddShortCutByListCompleted(this, new AddShortCutByListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddShortCutByListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models) {
            this.AddShortCutByListAsync(models, null);
        }
        
        public void AddShortCutByListAsync(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, object userState) {
            if ((this.onBeginAddShortCutByListDelegate == null)) {
                this.onBeginAddShortCutByListDelegate = new BeginOperationDelegate(this.OnBeginAddShortCutByList);
            }
            if ((this.onEndAddShortCutByListDelegate == null)) {
                this.onEndAddShortCutByListDelegate = new EndOperationDelegate(this.OnEndAddShortCutByList);
            }
            if ((this.onAddShortCutByListCompletedDelegate == null)) {
                this.onAddShortCutByListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddShortCutByListCompleted);
            }
            base.InvokeAsync(this.onBeginAddShortCutByListDelegate, new object[] {
                        models}, this.onEndAddShortCutByListDelegate, this.onAddShortCutByListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNews(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddNews(System.IAsyncResult result) {
            return base.Channel.EndAddNews(result);
        }
        
        private System.IAsyncResult OnBeginAddNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.T_PF_NEWS model = ((SMT.Saas.Tools.PlatformWS.T_PF_NEWS)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddNews(model, callback, asyncState);
        }
        
        private object[] OnEndAddNews(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewsCompleted(object state) {
            if ((this.AddNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewsCompleted(this, new AddNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewsAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model) {
            this.AddNewsAsync(model, null);
        }
        
        public void AddNewsAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, object userState) {
            if ((this.onBeginAddNewsDelegate == null)) {
                this.onBeginAddNewsDelegate = new BeginOperationDelegate(this.OnBeginAddNews);
            }
            if ((this.onEndAddNewsDelegate == null)) {
                this.onEndAddNewsDelegate = new EndOperationDelegate(this.OnEndAddNews);
            }
            if ((this.onAddNewsCompletedDelegate == null)) {
                this.onAddNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewsCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewsDelegate, new object[] {
                        model}, this.onEndAddNewsDelegate, this.onAddNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginAddNewsByViewer(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewsByViewer(model, _viewer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndAddNewsByViewer(System.IAsyncResult result) {
            return base.Channel.EndAddNewsByViewer(result);
        }
        
        private System.IAsyncResult OnBeginAddNewsByViewer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.T_PF_NEWS model = ((SMT.Saas.Tools.PlatformWS.T_PF_NEWS)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>)(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginAddNewsByViewer(model, _viewer, callback, asyncState);
        }
        
        private object[] OnEndAddNewsByViewer(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndAddNewsByViewer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewsByViewerCompleted(object state) {
            if ((this.AddNewsByViewerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewsByViewerCompleted(this, new AddNewsByViewerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewsByViewerAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer) {
            this.AddNewsByViewerAsync(model, _viewer, null);
        }
        
        public void AddNewsByViewerAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, object userState) {
            if ((this.onBeginAddNewsByViewerDelegate == null)) {
                this.onBeginAddNewsByViewerDelegate = new BeginOperationDelegate(this.OnBeginAddNewsByViewer);
            }
            if ((this.onEndAddNewsByViewerDelegate == null)) {
                this.onEndAddNewsByViewerDelegate = new EndOperationDelegate(this.OnEndAddNewsByViewer);
            }
            if ((this.onAddNewsByViewerCompletedDelegate == null)) {
                this.onAddNewsByViewerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewsByViewerCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewsByViewerDelegate, new object[] {
                        model,
                        _viewer}, this.onEndAddNewsByViewerDelegate, this.onAddNewsByViewerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginUpdateNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNews(model, _viewer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndUpdateNews(System.IAsyncResult result) {
            return base.Channel.EndUpdateNews(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SMT.Saas.Tools.PlatformWS.T_PF_NEWS model = ((SMT.Saas.Tools.PlatformWS.T_PF_NEWS)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>)(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginUpdateNews(model, _viewer, callback, asyncState);
        }
        
        private object[] OnEndUpdateNews(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndUpdateNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNewsCompleted(object state) {
            if ((this.UpdateNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNewsCompleted(this, new UpdateNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNewsAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer) {
            this.UpdateNewsAsync(model, _viewer, null);
        }
        
        public void UpdateNewsAsync(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, object userState) {
            if ((this.onBeginUpdateNewsDelegate == null)) {
                this.onBeginUpdateNewsDelegate = new BeginOperationDelegate(this.OnBeginUpdateNews);
            }
            if ((this.onEndUpdateNewsDelegate == null)) {
                this.onEndUpdateNewsDelegate = new EndOperationDelegate(this.OnEndUpdateNews);
            }
            if ((this.onUpdateNewsCompletedDelegate == null)) {
                this.onUpdateNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNewsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNewsDelegate, new object[] {
                        model,
                        _viewer}, this.onEndUpdateNewsDelegate, this.onUpdateNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteNews(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SMT.Saas.Tools.PlatformWS.PlatformServices.EndDeleteNews(System.IAsyncResult result) {
            return base.Channel.EndDeleteNews(result);
        }
        
        private System.IAsyncResult OnBeginDeleteNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginDeleteNews(_newsID, callback, asyncState);
        }
        
        private object[] OnEndDeleteNews(System.IAsyncResult result) {
            bool retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndDeleteNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteNewsCompleted(object state) {
            if ((this.DeleteNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteNewsCompleted(this, new DeleteNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteNewsAsync(string _newsID) {
            this.DeleteNewsAsync(_newsID, null);
        }
        
        public void DeleteNewsAsync(string _newsID, object userState) {
            if ((this.onBeginDeleteNewsDelegate == null)) {
                this.onBeginDeleteNewsDelegate = new BeginOperationDelegate(this.OnBeginDeleteNews);
            }
            if ((this.onEndDeleteNewsDelegate == null)) {
                this.onEndDeleteNewsDelegate = new EndOperationDelegate(this.OnEndDeleteNews);
            }
            if ((this.onDeleteNewsCompletedDelegate == null)) {
                this.onDeleteNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteNewsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteNewsDelegate, new object[] {
                        _newsID}, this.onEndDeleteNewsDelegate, this.onDeleteNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsModelByID(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PlatformWS.T_PF_NEWS SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsModelByID(System.IAsyncResult result) {
            return base.Channel.EndGetNewsModelByID(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsModelByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsModelByID(_newsID, callback, asyncState);
        }
        
        private object[] OnEndGetNewsModelByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PlatformWS.T_PF_NEWS retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsModelByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsModelByIDCompleted(object state) {
            if ((this.GetNewsModelByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsModelByIDCompleted(this, new GetNewsModelByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsModelByIDAsync(string _newsID) {
            this.GetNewsModelByIDAsync(_newsID, null);
        }
        
        public void GetNewsModelByIDAsync(string _newsID, object userState) {
            if ((this.onBeginGetNewsModelByIDDelegate == null)) {
                this.onBeginGetNewsModelByIDDelegate = new BeginOperationDelegate(this.OnBeginGetNewsModelByID);
            }
            if ((this.onEndGetNewsModelByIDDelegate == null)) {
                this.onEndGetNewsModelByIDDelegate = new EndOperationDelegate(this.OnEndGetNewsModelByID);
            }
            if ((this.onGetNewsModelByIDCompletedDelegate == null)) {
                this.onGetNewsModelByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsModelByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsModelByIDDelegate, new object[] {
                        _newsID}, this.onEndGetNewsModelByIDDelegate, this.onGetNewsModelByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsDetailsByID(_newsID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SMT.Saas.Tools.PlatformWS.T_PF_NEWSView SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsDetailsByID(System.IAsyncResult result) {
            return base.Channel.EndGetNewsDetailsByID(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsDetailsByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _newsID = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsDetailsByID(_newsID, callback, asyncState);
        }
        
        private object[] OnEndGetNewsDetailsByID(System.IAsyncResult result) {
            SMT.Saas.Tools.PlatformWS.T_PF_NEWSView retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsDetailsByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsDetailsByIDCompleted(object state) {
            if ((this.GetNewsDetailsByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsDetailsByIDCompleted(this, new GetNewsDetailsByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsDetailsByIDAsync(string _newsID) {
            this.GetNewsDetailsByIDAsync(_newsID, null);
        }
        
        public void GetNewsDetailsByIDAsync(string _newsID, object userState) {
            if ((this.onBeginGetNewsDetailsByIDDelegate == null)) {
                this.onBeginGetNewsDetailsByIDDelegate = new BeginOperationDelegate(this.OnBeginGetNewsDetailsByID);
            }
            if ((this.onEndGetNewsDetailsByIDDelegate == null)) {
                this.onEndGetNewsDetailsByIDDelegate = new EndOperationDelegate(this.OnEndGetNewsDetailsByID);
            }
            if ((this.onGetNewsDetailsByIDCompletedDelegate == null)) {
                this.onGetNewsDetailsByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsDetailsByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDetailsByIDDelegate, new object[] {
                        _newsID}, this.onEndGetNewsDetailsByIDDelegate, this.onGetNewsDetailsByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsList(callback, asyncState);
        }
        
        private object[] OnEndGetNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListCompleted(object state) {
            if ((this.GetNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListAsync() {
            this.GetNewsListAsync(null);
        }
        
        public void GetNewsListAsync(object userState) {
            if ((this.onBeginGetNewsListDelegate == null)) {
                this.onBeginGetNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetNewsList);
            }
            if ((this.onEndGetNewsListDelegate == null)) {
                this.onEndGetNewsListDelegate = new EndOperationDelegate(this.OnEndGetNewsList);
            }
            if ((this.onGetNewsListCompletedDelegate == null)) {
                this.onGetNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListDelegate, null, this.onEndGetNewsListDelegate, this.onGetNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsLists(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsLists(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsLists(System.IAsyncResult result) {
            return base.Channel.EndGetNewsLists(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsLists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsLists(callback, asyncState);
        }
        
        private object[] OnEndGetNewsLists(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsLists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListsCompleted(object state) {
            if ((this.GetNewsListsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListsCompleted(this, new GetNewsListsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListsAsync() {
            this.GetNewsListsAsync(null);
        }
        
        public void GetNewsListsAsync(object userState) {
            if ((this.onBeginGetNewsListsDelegate == null)) {
                this.onBeginGetNewsListsDelegate = new BeginOperationDelegate(this.OnBeginGetNewsLists);
            }
            if ((this.onEndGetNewsListsDelegate == null)) {
                this.onEndGetNewsListsDelegate = new EndOperationDelegate(this.OnEndGetNewsLists);
            }
            if ((this.onGetNewsListsCompletedDelegate == null)) {
                this.onGetNewsListsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListsDelegate, null, this.onEndGetNewsListsDelegate, this.onGetNewsListsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByParams(type, topCount, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsListByParams(System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByParams(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            int topCount = ((int)(inValues[1]));
            string state = ((string)(inValues[2]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsListByParams(type, topCount, state, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByParams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsListByParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListByParamsCompleted(object state) {
            if ((this.GetNewsListByParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByParamsCompleted(this, new GetNewsListByParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByParamsAsync(string type, int topCount, string state) {
            this.GetNewsListByParamsAsync(type, topCount, state, null);
        }
        
        public void GetNewsListByParamsAsync(string type, int topCount, string state, object userState) {
            if ((this.onBeginGetNewsListByParamsDelegate == null)) {
                this.onBeginGetNewsListByParamsDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByParams);
            }
            if ((this.onEndGetNewsListByParamsDelegate == null)) {
                this.onEndGetNewsListByParamsDelegate = new EndOperationDelegate(this.OnEndGetNewsListByParams);
            }
            if ((this.onGetNewsListByParamsCompletedDelegate == null)) {
                this.onGetNewsListByParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByParamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByParamsDelegate, new object[] {
                        type,
                        topCount,
                        state}, this.onEndGetNewsListByParamsDelegate, this.onGetNewsListByParamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByState(state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsListByState(System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByState(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string state = ((string)(inValues[0]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsListByState(state, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsListByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsListByStateCompleted(object state) {
            if ((this.GetNewsListByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByStateCompleted(this, new GetNewsListByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByStateAsync(string state) {
            this.GetNewsListByStateAsync(state, null);
        }
        
        public void GetNewsListByStateAsync(string state, object userState) {
            if ((this.onBeginGetNewsListByStateDelegate == null)) {
                this.onBeginGetNewsListByStateDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByState);
            }
            if ((this.onEndGetNewsListByStateDelegate == null)) {
                this.onEndGetNewsListByStateDelegate = new EndOperationDelegate(this.OnEndGetNewsListByState);
            }
            if ((this.onGetNewsListByStateCompletedDelegate == null)) {
                this.onGetNewsListByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByStateDelegate, new object[] {
                        state}, this.onEndGetNewsListByStateDelegate, this.onGetNewsListByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImageNewsList(topCount, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetImageNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetImageNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetImageNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int topCount = ((int)(inValues[0]));
            string state = ((string)(inValues[1]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetImageNewsList(topCount, state, callback, asyncState);
        }
        
        private object[] OnEndGetImageNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetImageNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImageNewsListCompleted(object state) {
            if ((this.GetImageNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImageNewsListCompleted(this, new GetImageNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImageNewsListAsync(int topCount, string state) {
            this.GetImageNewsListAsync(topCount, state, null);
        }
        
        public void GetImageNewsListAsync(int topCount, string state, object userState) {
            if ((this.onBeginGetImageNewsListDelegate == null)) {
                this.onBeginGetImageNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetImageNewsList);
            }
            if ((this.onEndGetImageNewsListDelegate == null)) {
                this.onEndGetImageNewsListDelegate = new EndOperationDelegate(this.OnEndGetImageNewsList);
            }
            if ((this.onGetImageNewsListCompletedDelegate == null)) {
                this.onGetImageNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImageNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetImageNewsListDelegate, new object[] {
                        topCount,
                        state}, this.onEndGetImageNewsListDelegate, this.onGetImageNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByPage(pageIndex, pageSize, sort, filterString, ref pageCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByPage(ref pageCount, result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            int pageCount = ((int)(inValues[4]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsListByPage(pageIndex, pageSize, sort, filterString, ref pageCount, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByPage(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsListByPage(ref pageCount, result);
            return new object[] {
                    pageCount,
                    retVal};
        }
        
        private void OnGetNewsListByPageCompleted(object state) {
            if ((this.GetNewsListByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByPageCompleted(this, new GetNewsListByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByPageAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount) {
            this.GetNewsListByPageAsync(pageIndex, pageSize, sort, filterString, pageCount, null);
        }
        
        public void GetNewsListByPageAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, object userState) {
            if ((this.onBeginGetNewsListByPageDelegate == null)) {
                this.onBeginGetNewsListByPageDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByPage);
            }
            if ((this.onEndGetNewsListByPageDelegate == null)) {
                this.onEndGetNewsListByPageDelegate = new EndOperationDelegate(this.OnEndGetNewsListByPage);
            }
            if ((this.onGetNewsListByPageCompletedDelegate == null)) {
                this.onGetNewsListByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByPageDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        pageCount}, this.onEndGetNewsListByPageDelegate, this.onGetNewsListByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPopupNewsList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetPopupNewsList(System.IAsyncResult result) {
            return base.Channel.EndGetPopupNewsList(result);
        }
        
        private System.IAsyncResult OnBeginGetPopupNewsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetPopupNewsList(callback, asyncState);
        }
        
        private object[] OnEndGetPopupNewsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetPopupNewsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPopupNewsListCompleted(object state) {
            if ((this.GetPopupNewsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPopupNewsListCompleted(this, new GetPopupNewsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPopupNewsListAsync() {
            this.GetPopupNewsListAsync(null);
        }
        
        public void GetPopupNewsListAsync(object userState) {
            if ((this.onBeginGetPopupNewsListDelegate == null)) {
                this.onBeginGetPopupNewsListDelegate = new BeginOperationDelegate(this.OnBeginGetPopupNewsList);
            }
            if ((this.onEndGetPopupNewsListDelegate == null)) {
                this.onEndGetPopupNewsListDelegate = new EndOperationDelegate(this.OnEndGetPopupNewsList);
            }
            if ((this.onGetPopupNewsListCompletedDelegate == null)) {
                this.onGetPopupNewsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPopupNewsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPopupNewsListDelegate, null, this.onEndGetPopupNewsListDelegate, this.onGetPopupNewsListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SMT.Saas.Tools.PlatformWS.PlatformServices.BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsListByMobile(pageIndex, pageSize, sort, filterString, ref pageCount, ref rowCount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> SMT.Saas.Tools.PlatformWS.PlatformServices.EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result) {
            return base.Channel.EndGetNewsListByMobile(ref pageCount, ref rowCount, result);
        }
        
        private System.IAsyncResult OnBeginGetNewsListByMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string sort = ((string)(inValues[2]));
            string filterString = ((string)(inValues[3]));
            int pageCount = ((int)(inValues[4]));
            int rowCount = ((int)(inValues[5]));
            return ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).BeginGetNewsListByMobile(pageIndex, pageSize, sort, filterString, ref pageCount, ref rowCount, callback, asyncState);
        }
        
        private object[] OnEndGetNewsListByMobile(System.IAsyncResult result) {
            int pageCount = this.GetDefaultValueForInitialization<int>();
            int rowCount = this.GetDefaultValueForInitialization<int>();
            System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> retVal = ((SMT.Saas.Tools.PlatformWS.PlatformServices)(this)).EndGetNewsListByMobile(ref pageCount, ref rowCount, result);
            return new object[] {
                    pageCount,
                    rowCount,
                    retVal};
        }
        
        private void OnGetNewsListByMobileCompleted(object state) {
            if ((this.GetNewsListByMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsListByMobileCompleted(this, new GetNewsListByMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsListByMobileAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, int rowCount) {
            this.GetNewsListByMobileAsync(pageIndex, pageSize, sort, filterString, pageCount, rowCount, null);
        }
        
        public void GetNewsListByMobileAsync(int pageIndex, int pageSize, string sort, string filterString, int pageCount, int rowCount, object userState) {
            if ((this.onBeginGetNewsListByMobileDelegate == null)) {
                this.onBeginGetNewsListByMobileDelegate = new BeginOperationDelegate(this.OnBeginGetNewsListByMobile);
            }
            if ((this.onEndGetNewsListByMobileDelegate == null)) {
                this.onEndGetNewsListByMobileDelegate = new EndOperationDelegate(this.OnEndGetNewsListByMobile);
            }
            if ((this.onGetNewsListByMobileCompletedDelegate == null)) {
                this.onGetNewsListByMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsListByMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsListByMobileDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        sort,
                        filterString,
                        pageCount,
                        rowCount}, this.onEndGetNewsListByMobileDelegate, this.onGetNewsListByMobileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SMT.Saas.Tools.PlatformWS.PlatformServices CreateChannel() {
            return new PlatformServicesClientChannel(this);
        }
        
        private class PlatformServicesClientChannel : ChannelBase<SMT.Saas.Tools.PlatformWS.PlatformServices>, SMT.Saas.Tools.PlatformWS.PlatformServices {
            
            public PlatformServicesClientChannel(System.ServiceModel.ClientBase<SMT.Saas.Tools.PlatformWS.PlatformServices> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddModule(SMT.Saas.Tools.PlatformWS.ModuleInfo model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddModule", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleByCodes(System.Collections.ObjectModel.ObservableCollection<string> moduleCodes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = moduleCodes;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleByCodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetModuleByCodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(base.EndInvoke("GetModuleByCodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleCatalogByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userSysID;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleCatalogByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetModuleCatalogByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(base.EndInvoke("GetModuleCatalogByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetModuleFileStream(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GetModuleFileStream", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetModuleFileStream(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetModuleFileStream", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddModuleByFile(SMT.Saas.Tools.PlatformWS.ModuleInfo model, byte[] xapFileStream, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = xapFileStream;
                System.IAsyncResult _result = base.BeginInvoke("AddModuleByFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddModuleByFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddModuleByFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaskConfigInfoByUser(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetTaskConfigInfoByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> EndGetTaskConfigInfoByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ModuleInfo>)(base.EndInvoke("GetTaskConfigInfoByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShortCutByUser(string userSysID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userSysID;
                System.IAsyncResult _result = base.BeginInvoke("GetShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> EndGetShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut>)(base.EndInvoke("GetShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddShortCutByUser(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = models;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("AddShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveShortCutByUser(string shortCutID, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = shortCutID;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveShortCutByUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveShortCutByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveShortCutByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddShortCut(SMT.Saas.Tools.PlatformWS.ShortCut model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddShortCut", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddShortCut(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddShortCut", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddShortCutByList(System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.ShortCut> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("AddShortCutByList", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddShortCutByList(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddShortCutByList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("AddNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewsByViewer(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = _viewer;
                System.IAsyncResult _result = base.BeginInvoke("AddNewsByViewer", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddNewsByViewer(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddNewsByViewer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNews(SMT.Saas.Tools.PlatformWS.T_PF_NEWS model, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER> _viewer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = _viewer;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteNews(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsModelByID(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsModelByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PlatformWS.T_PF_NEWS EndGetNewsModelByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PlatformWS.T_PF_NEWS _result = ((SMT.Saas.Tools.PlatformWS.T_PF_NEWS)(base.EndInvoke("GetNewsModelByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsDetailsByID(string _newsID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = _newsID;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsDetailsByID", _args, callback, asyncState);
                return _result;
            }
            
            public SMT.Saas.Tools.PlatformWS.T_PF_NEWSView EndGetNewsDetailsByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SMT.Saas.Tools.PlatformWS.T_PF_NEWSView _result = ((SMT.Saas.Tools.PlatformWS.T_PF_NEWSView)(base.EndInvoke("GetNewsDetailsByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(base.EndInvoke("GetNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsLists(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsLists", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> EndGetNewsLists(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>> _result = ((System.Collections.Generic.Dictionary<SMT.Saas.Tools.PlatformWS.T_PF_NEWS, System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_DISTRIBUTEUSER>>)(base.EndInvoke("GetNewsLists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByParams(string type, int topCount, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = type;
                _args[1] = topCount;
                _args[2] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByParams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsListByParams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(base.EndInvoke("GetNewsListByParams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByState(string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetNewsListByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(base.EndInvoke("GetNewsListByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetImageNewsList(int topCount, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = topCount;
                _args[1] = state;
                System.IAsyncResult _result = base.BeginInvoke("GetImageNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> EndGetImageNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWS>)(base.EndInvoke("GetImageNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByPage(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = pageCount;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByPage", _args, callback, asyncState);
                pageCount = ((int)(_args[4]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetNewsListByPage(ref int pageCount, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = pageCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(base.EndInvoke("GetNewsListByPage", _args, result)));
                pageCount = ((int)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPopupNewsList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPopupNewsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetPopupNewsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(base.EndInvoke("GetPopupNewsList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsListByMobile(int pageIndex, int pageSize, string sort, string filterString, ref int pageCount, ref int rowCount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = sort;
                _args[3] = filterString;
                _args[4] = pageCount;
                _args[5] = rowCount;
                System.IAsyncResult _result = base.BeginInvoke("GetNewsListByMobile", _args, callback, asyncState);
                pageCount = ((int)(_args[4]));
                rowCount = ((int)(_args[5]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> EndGetNewsListByMobile(ref int pageCount, ref int rowCount, System.IAsyncResult result) {
                object[] _args = new object[2];
                _args[0] = pageCount;
                _args[1] = rowCount;
                System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView> _result = ((System.Collections.ObjectModel.ObservableCollection<SMT.Saas.Tools.PlatformWS.T_PF_NEWSListView>)(base.EndInvoke("GetNewsListByMobile", _args, result)));
                pageCount = ((int)(_args[0]));
                rowCount = ((int)(_args[1]));
                return _result;
            }
        }
    }
}
